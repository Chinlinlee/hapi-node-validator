/// <reference types="node" />
import { JavaClass, BasicOrJavaType, JavaInterfaceProxy } from "java-bridge";
import { Content as org_hl7_fhir_validation_Content } from "./Content";
import { SimpleWorkerContext as org_hl7_fhir_r5_context_SimpleWorkerContext } from "./../r5/context/SimpleWorkerContext";
import { List as java_util_List, ListInterface as java_util_ListInterface } from "./../../../../java/util/List";
import { Map as java_util_Map, MapInterface as java_util_MapInterface } from "./../../../../java/util/Map";
import { Boolean as java_lang_Boolean } from "./../../../../java/lang/Boolean";
import { NpmPackage as org_hl7_fhir_utilities_npm_NpmPackage } from "./../utilities/npm/NpmPackage";
import { Resource as org_hl7_fhir_r5_model_Resource } from "./../r5/model/Resource";
import { FilesystemPackageCacheManager as org_hl7_fhir_utilities_npm_FilesystemPackageCacheManager } from "./../utilities/npm/FilesystemPackageCacheManager";
import { VersionSourceInformation as org_hl7_fhir_validation_cli_utils_VersionSourceInformation } from "./cli/utils/VersionSourceInformation";
import { Long as java_lang_Long } from "./../../../../java/lang/Long";
import { Integer as java_lang_Integer } from "./../../../../java/lang/Integer";
import { Class as java_lang_Class } from "./../../../../java/lang/Class";
/**
 * This class just defines types, you should import {@link IgLoader} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class IgLoaderClass extends JavaClass {
    /**
     * @param var0 original type: 'org.hl7.fhir.validation.Content'
     * @return original return type: 'void'
     */
    load(var0: org_hl7_fhir_validation_Content | null): Promise<void>;
    /**
     * @param var0 original type: 'org.hl7.fhir.validation.Content'
     * @return original return type: 'void'
     */
    loadSync(var0: org_hl7_fhir_validation_Content | null): void;
    /**
     * @return original return type: 'org.hl7.fhir.r5.context.SimpleWorkerContext'
     */
    getContext(): Promise<org_hl7_fhir_r5_context_SimpleWorkerContext | null>;
    /**
     * @return original return type: 'org.hl7.fhir.r5.context.SimpleWorkerContext'
     */
    getContextSync(): org_hl7_fhir_r5_context_SimpleWorkerContext | null;
    /**
     * @return original return type: 'boolean'
     */
    isDebug(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isDebugSync(): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    getVersion(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getVersionSync(): string | null;
    /**
     * @param var0 original type: 'java.util.List'
     * @param var1 original type: 'java.util.Map'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'boolean'
     * @return original return type: 'void'
     */
    loadIg(var0: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null, var1: java_util_Map | JavaInterfaceProxy<java_util_MapInterface> | null, var2: string | null, var3: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'java.util.List'
     * @param var1 original type: 'java.util.Map'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'boolean'
     * @return original return type: 'void'
     */
    loadIgSync(var0: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null, var1: java_util_Map | JavaInterfaceProxy<java_util_MapInterface> | null, var2: string | null, var3: java_lang_Boolean | boolean): void;
    /**
     * @param var0 original type: 'org.hl7.fhir.utilities.npm.NpmPackage'
     * @param var1 original type: 'boolean'
     * @return original return type: 'java.util.Map'
     */
    loadPackage(var0: org_hl7_fhir_utilities_npm_NpmPackage | null, var1: java_lang_Boolean | boolean): Promise<java_util_Map | null>;
    /**
     * @param var0 original type: 'org.hl7.fhir.utilities.npm.NpmPackage'
     * @param var1 original type: 'boolean'
     * @return original return type: 'java.util.Map'
     */
    loadPackageSync(var0: org_hl7_fhir_utilities_npm_NpmPackage | null, var1: java_lang_Boolean | boolean): java_util_Map | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'byte[]'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.r5.model.Resource'
     */
    loadResourceByVersion(var0: string | null, var1: Buffer | null, var2: string | null): Promise<org_hl7_fhir_r5_model_Resource | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'byte[]'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.r5.model.Resource'
     */
    loadResourceByVersionSync(var0: string | null, var1: Buffer | null, var2: string | null): org_hl7_fhir_r5_model_Resource | null;
    /**
     * @return original return type: 'org.hl7.fhir.utilities.npm.FilesystemPackageCacheManager'
     */
    getPackageCacheManager(): Promise<org_hl7_fhir_utilities_npm_FilesystemPackageCacheManager | null>;
    /**
     * @return original return type: 'org.hl7.fhir.utilities.npm.FilesystemPackageCacheManager'
     */
    getPackageCacheManagerSync(): org_hl7_fhir_utilities_npm_FilesystemPackageCacheManager | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'boolean'
     * @param var2 original type: 'boolean'
     * @return original return type: 'java.util.Map'
     */
    loadIgSource(var0: string | null, var1: java_lang_Boolean | boolean, var2: java_lang_Boolean | boolean): Promise<java_util_Map | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'boolean'
     * @param var2 original type: 'boolean'
     * @return original return type: 'java.util.Map'
     */
    loadIgSourceSync(var0: string | null, var1: java_lang_Boolean | boolean, var2: java_lang_Boolean | boolean): java_util_Map | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'boolean'
     * @param var3 original type: 'boolean'
     * @return original return type: 'org.hl7.fhir.validation.Content'
     */
    loadContent(var0: string | null, var1: string | null, var2: java_lang_Boolean | boolean, var3: java_lang_Boolean | boolean): Promise<org_hl7_fhir_validation_Content | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'boolean'
     * @param var3 original type: 'boolean'
     * @return original return type: 'org.hl7.fhir.validation.Content'
     */
    loadContentSync(var0: string | null, var1: string | null, var2: java_lang_Boolean | boolean, var3: java_lang_Boolean | boolean): org_hl7_fhir_validation_Content | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'boolean'
     * @param var2 original type: 'org.hl7.fhir.validation.cli.utils.VersionSourceInformation'
     * @return original return type: 'void'
     */
    scanForIgVersion(var0: string | null, var1: java_lang_Boolean | boolean, var2: org_hl7_fhir_validation_cli_utils_VersionSourceInformation | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'boolean'
     * @param var2 original type: 'org.hl7.fhir.validation.cli.utils.VersionSourceInformation'
     * @return original return type: 'void'
     */
    scanForIgVersionSync(var0: string | null, var1: java_lang_Boolean | boolean, var2: org_hl7_fhir_validation_cli_utils_VersionSourceInformation | null): void;
    /**
     * @param var0 original type: 'java.util.List'
     * @param var1 original type: 'org.hl7.fhir.validation.cli.utils.VersionSourceInformation'
     * @return original return type: 'void'
     */
    scanForVersions(var0: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null, var1: org_hl7_fhir_validation_cli_utils_VersionSourceInformation | null): Promise<void>;
    /**
     * @param var0 original type: 'java.util.List'
     * @param var1 original type: 'org.hl7.fhir.validation.cli.utils.VersionSourceInformation'
     * @return original return type: 'void'
     */
    scanForVersionsSync(var0: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null, var1: org_hl7_fhir_validation_cli_utils_VersionSourceInformation | null): void;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @param var0 original type: 'org.hl7.fhir.utilities.npm.FilesystemPackageCacheManager'
     * @param var1 original type: 'org.hl7.fhir.r5.context.SimpleWorkerContext'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.validation.IgLoader'
     */
    static newInstanceAsync(var0: org_hl7_fhir_utilities_npm_FilesystemPackageCacheManager | null, var1: org_hl7_fhir_r5_context_SimpleWorkerContext | null, var2: string | null): Promise<IgLoader>;
    /**
     * @param var0 original type: 'org.hl7.fhir.utilities.npm.FilesystemPackageCacheManager'
     * @param var1 original type: 'org.hl7.fhir.r5.context.SimpleWorkerContext'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'boolean'
     * @return original return type: 'org.hl7.fhir.validation.IgLoader'
     */
    static newInstanceAsync(var0: org_hl7_fhir_utilities_npm_FilesystemPackageCacheManager | null, var1: org_hl7_fhir_r5_context_SimpleWorkerContext | null, var2: string | null, var3: java_lang_Boolean | boolean): Promise<IgLoader>;
    /**
     * @param var0 original type: 'org.hl7.fhir.utilities.npm.FilesystemPackageCacheManager'
     * @param var1 original type: 'org.hl7.fhir.r5.context.SimpleWorkerContext'
     * @param var2 original type: 'java.lang.String'
     */
    constructor(var0: org_hl7_fhir_utilities_npm_FilesystemPackageCacheManager | null, var1: org_hl7_fhir_r5_context_SimpleWorkerContext | null, var2: string | null);
    /**
     * @param var0 original type: 'org.hl7.fhir.utilities.npm.FilesystemPackageCacheManager'
     * @param var1 original type: 'org.hl7.fhir.r5.context.SimpleWorkerContext'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'boolean'
     */
    constructor(var0: org_hl7_fhir_utilities_npm_FilesystemPackageCacheManager | null, var1: org_hl7_fhir_r5_context_SimpleWorkerContext | null, var2: string | null, var3: java_lang_Boolean | boolean);
}
declare const IgLoader_base: typeof IgLoaderClass;
/**
 * Class org.hl7.fhir.validation.IgLoader.
 *
 * This actually imports the java class for further use.
 * The class {@link IgLoaderClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class IgLoader extends IgLoader_base {
}
export default IgLoader;
//# sourceMappingURL=IgLoader.d.ts.map