import { JavaClass, BasicOrJavaType, InterfaceProxyOptions, JavaInterfaceProxy } from "java-bridge";
import { List as java_util_List, ListInterface as java_util_ListInterface } from "./../../../../../java/util/List";
import { Base as org_hl7_fhir_r5_model_Base } from "./../model/Base";
import { Boolean as java_lang_Boolean } from "./../../../../../java/lang/Boolean";
import { FHIRPathEngine$IEvaluationContext$FunctionDetails as org_hl7_fhir_r5_utils_FHIRPathEngine$IEvaluationContext$FunctionDetails } from "./FHIRPathEngine$IEvaluationContext$FunctionDetails";
import { ValueSet as org_hl7_fhir_r5_model_ValueSet } from "./../model/ValueSet";
import { TypeDetails as org_hl7_fhir_r5_model_TypeDetails } from "./../model/TypeDetails";
/**
 * This class just defines types, you should import {@link FHIRPathEngine$IEvaluationContext} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class FHIRPathEngine$IEvaluationContextClass extends JavaClass {
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.List'
     * @return original return type: 'boolean'
     */
    log(var0: string | null, var1: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.List'
     * @return original return type: 'boolean'
     */
    logSync(var0: string | null, var1: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null): boolean;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'org.hl7.fhir.r5.model.Base'
     * @return original return type: 'org.hl7.fhir.r5.model.Base'
     */
    resolveReference(var0: BasicOrJavaType | null, var1: string | null, var2: org_hl7_fhir_r5_model_Base | null): Promise<org_hl7_fhir_r5_model_Base | null>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'org.hl7.fhir.r5.model.Base'
     * @return original return type: 'org.hl7.fhir.r5.model.Base'
     */
    resolveReferenceSync(var0: BasicOrJavaType | null, var1: string | null, var2: org_hl7_fhir_r5_model_Base | null): org_hl7_fhir_r5_model_Base | null;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'boolean'
     * @return original return type: 'java.util.List'
     */
    resolveConstant(var0: BasicOrJavaType | null, var1: string | null, var2: java_lang_Boolean | boolean): Promise<java_util_List | null>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'boolean'
     * @return original return type: 'java.util.List'
     */
    resolveConstantSync(var0: BasicOrJavaType | null, var1: string | null, var2: java_lang_Boolean | boolean): java_util_List | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.r5.utils.FHIRPathEngine$IEvaluationContext$FunctionDetails'
     */
    resolveFunction(var0: string | null): Promise<org_hl7_fhir_r5_utils_FHIRPathEngine$IEvaluationContext$FunctionDetails | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.r5.utils.FHIRPathEngine$IEvaluationContext$FunctionDetails'
     */
    resolveFunctionSync(var0: string | null): org_hl7_fhir_r5_utils_FHIRPathEngine$IEvaluationContext$FunctionDetails | null;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.r5.model.ValueSet'
     */
    resolveValueSet(var0: BasicOrJavaType | null, var1: string | null): Promise<org_hl7_fhir_r5_model_ValueSet | null>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.r5.model.ValueSet'
     */
    resolveValueSetSync(var0: BasicOrJavaType | null, var1: string | null): org_hl7_fhir_r5_model_ValueSet | null;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.util.List'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'java.util.List'
     * @return original return type: 'java.util.List'
     */
    executeFunction(var0: BasicOrJavaType | null, var1: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null, var2: string | null, var3: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null): Promise<java_util_List | null>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.util.List'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'java.util.List'
     * @return original return type: 'java.util.List'
     */
    executeFunctionSync(var0: BasicOrJavaType | null, var1: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null, var2: string | null, var3: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null): java_util_List | null;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.util.List'
     * @return original return type: 'org.hl7.fhir.r5.model.TypeDetails'
     */
    checkFunction(var0: BasicOrJavaType | null, var1: string | null, var2: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null): Promise<org_hl7_fhir_r5_model_TypeDetails | null>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.util.List'
     * @return original return type: 'org.hl7.fhir.r5.model.TypeDetails'
     */
    checkFunctionSync(var0: BasicOrJavaType | null, var1: string | null, var2: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null): org_hl7_fhir_r5_model_TypeDetails | null;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'org.hl7.fhir.r5.model.Base'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    conformsToProfile(var0: BasicOrJavaType | null, var1: org_hl7_fhir_r5_model_Base | null, var2: string | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'org.hl7.fhir.r5.model.Base'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    conformsToProfileSync(var0: BasicOrJavaType | null, var1: org_hl7_fhir_r5_model_Base | null, var2: string | null): boolean;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.r5.model.TypeDetails'
     */
    resolveConstantType(var0: BasicOrJavaType | null, var1: string | null): Promise<org_hl7_fhir_r5_model_TypeDetails | null>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.r5.model.TypeDetails'
     */
    resolveConstantTypeSync(var0: BasicOrJavaType | null, var1: string | null): org_hl7_fhir_r5_model_TypeDetails | null;
}
/**
 * This interface just defines types for creating proxies,
 * you should use {@link createFHIRPathEngine$IEvaluationContextProxy} for actually creating the proxies.
 *
 * Optional methods in here may still be required by java.
 * This is caused by typescript not allowing to have both optional and
 * non-optional signatures for the same interface member.
 *
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export interface FHIRPathEngine$IEvaluationContextInterface {
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.List'
     * @return original return type: 'boolean'
     */
    log(var0: string | null, var1: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null): boolean;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'org.hl7.fhir.r5.model.Base'
     * @return original return type: 'org.hl7.fhir.r5.model.Base'
     */
    resolveReference(var0: BasicOrJavaType | null, var1: string | null, var2: org_hl7_fhir_r5_model_Base | null): org_hl7_fhir_r5_model_Base | null;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'boolean'
     * @return original return type: 'java.util.List'
     */
    resolveConstant(var0: BasicOrJavaType | null, var1: string | null, var2: java_lang_Boolean | boolean): java_util_List | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.r5.utils.FHIRPathEngine$IEvaluationContext$FunctionDetails'
     */
    resolveFunction(var0: string | null): org_hl7_fhir_r5_utils_FHIRPathEngine$IEvaluationContext$FunctionDetails | null;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.r5.model.ValueSet'
     */
    resolveValueSet(var0: BasicOrJavaType | null, var1: string | null): org_hl7_fhir_r5_model_ValueSet | null;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.util.List'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'java.util.List'
     * @return original return type: 'java.util.List'
     */
    executeFunction(var0: BasicOrJavaType | null, var1: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null, var2: string | null, var3: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null): java_util_List | null;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.util.List'
     * @return original return type: 'org.hl7.fhir.r5.model.TypeDetails'
     */
    checkFunction(var0: BasicOrJavaType | null, var1: string | null, var2: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null): org_hl7_fhir_r5_model_TypeDetails | null;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'org.hl7.fhir.r5.model.Base'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    conformsToProfile(var0: BasicOrJavaType | null, var1: org_hl7_fhir_r5_model_Base | null, var2: string | null): boolean;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.r5.model.TypeDetails'
     */
    resolveConstantType(var0: BasicOrJavaType | null, var1: string | null): org_hl7_fhir_r5_model_TypeDetails | null;
}
/**
 * Create a proxy for the {@link FHIRPathEngine$IEvaluationContext} interface.
 * All required methods in {@link FHIRPathEngine$IEvaluationContextInterface} must be implemented.
 *
 * @param methods the methods to implement
 * @param opts the proxy options
 * @return the proxy
 */
export declare function createFHIRPathEngine$IEvaluationContextProxy(methods: FHIRPathEngine$IEvaluationContextInterface, opts?: InterfaceProxyOptions): JavaInterfaceProxy<FHIRPathEngine$IEvaluationContextInterface>;
declare const FHIRPathEngine$IEvaluationContext_base: typeof FHIRPathEngine$IEvaluationContextClass;
/**
 * Class org.hl7.fhir.r5.utils.FHIRPathEngine$IEvaluationContext.
 *
 * This actually imports the java class for further use.
 * The class {@link FHIRPathEngine$IEvaluationContextClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class FHIRPathEngine$IEvaluationContext extends FHIRPathEngine$IEvaluationContext_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default FHIRPathEngine$IEvaluationContext;
//# sourceMappingURL=FHIRPathEngine$IEvaluationContext.d.ts.map