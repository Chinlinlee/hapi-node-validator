import { JavaClass, BasicOrJavaType, JavaInterfaceProxy } from "java-bridge";
import { StructureDefinition as org_hl7_fhir_r5_model_StructureDefinition } from "./../../model/StructureDefinition";
import { ElementDefinition as org_hl7_fhir_r5_model_ElementDefinition } from "./../../model/ElementDefinition";
import { Writer as java_io_Writer } from "./../../../../../../java/io/Writer";
import { CharSequence as java_lang_CharSequence, CharSequenceInterface as java_lang_CharSequenceInterface } from "./../../../../../../java/lang/CharSequence";
import { Integer as java_lang_Integer } from "./../../../../../../java/lang/Integer";
import { Appendable as java_lang_Appendable } from "./../../../../../../java/lang/Appendable";
import { Long as java_lang_Long } from "./../../../../../../java/lang/Long";
import { Class as java_lang_Class } from "./../../../../../../java/lang/Class";
import { OutputStream as java_io_OutputStream } from "./../../../../../../java/io/OutputStream";
import { Boolean as java_lang_Boolean } from "./../../../../../../java/lang/Boolean";
/**
 * This class just defines types, you should import {@link CSVWriter} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class CSVWriterClass extends JavaClass {
    /**
     * @return original return type: 'void'
     */
    dump(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    dumpSync(): void;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.model.StructureDefinition'
     * @param var1 original type: 'org.hl7.fhir.r5.model.ElementDefinition'
     * @return original return type: 'void'
     */
    processElement(var0: org_hl7_fhir_r5_model_StructureDefinition | null, var1: org_hl7_fhir_r5_model_ElementDefinition | null): Promise<void>;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.model.StructureDefinition'
     * @param var1 original type: 'org.hl7.fhir.r5.model.ElementDefinition'
     * @return original return type: 'void'
     */
    processElementSync(var0: org_hl7_fhir_r5_model_StructureDefinition | null, var1: org_hl7_fhir_r5_model_ElementDefinition | null): void;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    ln(var0: string | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    lnSync(var0: string | null): void;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    ln_o(var0: string | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    ln_oSync(var0: string | null): void;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    ln_i(var0: string | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    ln_iSync(var0: string | null): void;
    /**
     * @param var0 original type: 'java.lang.CharSequence'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'java.io.Writer'
     */
    append(var0: java_lang_CharSequence | JavaInterfaceProxy<java_lang_CharSequenceInterface> | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): Promise<java_io_Writer | null>;
    /**
     * @param var0 original type: 'java.lang.CharSequence'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'java.io.Writer'
     */
    appendSync(var0: java_lang_CharSequence | JavaInterfaceProxy<java_lang_CharSequenceInterface> | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): java_io_Writer | null;
    /**
     * @param var0 original type: 'java.lang.CharSequence'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'java.lang.Appendable'
     */
    append(var0: java_lang_CharSequence | JavaInterfaceProxy<java_lang_CharSequenceInterface> | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): Promise<java_lang_Appendable | null>;
    /**
     * @param var0 original type: 'java.lang.CharSequence'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'java.lang.Appendable'
     */
    appendSync(var0: java_lang_CharSequence | JavaInterfaceProxy<java_lang_CharSequenceInterface> | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): java_lang_Appendable | null;
    /**
     * @param var0 original type: 'java.lang.CharSequence'
     * @return original return type: 'java.lang.Appendable'
     */
    append(var0: java_lang_CharSequence | JavaInterfaceProxy<java_lang_CharSequenceInterface> | null): Promise<java_lang_Appendable | null>;
    /**
     * @param var0 original type: 'java.lang.CharSequence'
     * @return original return type: 'java.lang.Appendable'
     */
    appendSync(var0: java_lang_CharSequence | JavaInterfaceProxy<java_lang_CharSequenceInterface> | null): java_lang_Appendable | null;
    /**
     * @param var0 original type: 'java.lang.CharSequence'
     * @return original return type: 'java.io.Writer'
     */
    append(var0: java_lang_CharSequence | JavaInterfaceProxy<java_lang_CharSequenceInterface> | null): Promise<java_io_Writer | null>;
    /**
     * @param var0 original type: 'java.lang.CharSequence'
     * @return original return type: 'java.io.Writer'
     */
    appendSync(var0: java_lang_CharSequence | JavaInterfaceProxy<java_lang_CharSequenceInterface> | null): java_io_Writer | null;
    /**
     * @param var0 original type: 'char'
     * @return original return type: 'java.io.Writer'
     */
    append(var0: string | null): Promise<java_io_Writer | null>;
    /**
     * @param var0 original type: 'char'
     * @return original return type: 'java.io.Writer'
     */
    appendSync(var0: string | null): java_io_Writer | null;
    /**
     * @param var0 original type: 'char'
     * @return original return type: 'java.lang.Appendable'
     */
    append(var0: string | null): Promise<java_lang_Appendable | null>;
    /**
     * @param var0 original type: 'char'
     * @return original return type: 'java.lang.Appendable'
     */
    appendSync(var0: string | null): java_lang_Appendable | null;
    /**
     * @return original return type: 'void'
     */
    flush(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    flushSync(): void;
    /**
     * @param var0 original type: 'char[]'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'void'
     */
    write(var0: (string | null)[] | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'char[]'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'void'
     */
    writeSync(var0: (string | null)[] | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): void;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'void'
     */
    write(var0: string | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'void'
     */
    writeSync(var0: string | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): void;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'void'
     */
    write(var0: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'void'
     */
    writeSync(var0: java_lang_Integer | number): void;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    write(var0: string | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    writeSync(var0: string | null): void;
    /**
     * @param var0 original type: 'char[]'
     * @return original return type: 'void'
     */
    write(var0: (string | null)[] | null): Promise<void>;
    /**
     * @param var0 original type: 'char[]'
     * @return original return type: 'void'
     */
    writeSync(var0: (string | null)[] | null): void;
    /**
     * @return original return type: 'void'
     */
    close(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    closeSync(): void;
    /**
     * @return original return type: 'java.lang.String'
     */
    getEncoding(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getEncodingSync(): string | null;
    /**
     * @return original return type: 'java.io.Writer'
     */
    static nullWriter(): Promise<java_io_Writer | null>;
    /**
     * @return original return type: 'java.io.Writer'
     */
    static nullWriterSync(): java_io_Writer | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @param var0 original type: 'java.io.OutputStream'
     * @param var1 original type: 'org.hl7.fhir.r5.model.StructureDefinition'
     * @param var2 original type: 'boolean'
     * @return original return type: 'org.hl7.fhir.r5.utils.formats.CSVWriter'
     */
    static newInstanceAsync(var0: java_io_OutputStream | null, var1: org_hl7_fhir_r5_model_StructureDefinition | null, var2: java_lang_Boolean | boolean): Promise<CSVWriter>;
    /**
     * @param var0 original type: 'java.io.OutputStream'
     * @param var1 original type: 'boolean'
     * @return original return type: 'org.hl7.fhir.r5.utils.formats.CSVWriter'
     */
    static newInstanceAsync(var0: java_io_OutputStream | null, var1: java_lang_Boolean | boolean): Promise<CSVWriter>;
    /**
     * @param var0 original type: 'java.io.OutputStream'
     * @param var1 original type: 'org.hl7.fhir.r5.model.StructureDefinition'
     * @param var2 original type: 'boolean'
     */
    constructor(var0: java_io_OutputStream | null, var1: org_hl7_fhir_r5_model_StructureDefinition | null, var2: java_lang_Boolean | boolean);
    /**
     * @param var0 original type: 'java.io.OutputStream'
     * @param var1 original type: 'boolean'
     */
    constructor(var0: java_io_OutputStream | null, var1: java_lang_Boolean | boolean);
}
declare const CSVWriter_base: typeof CSVWriterClass;
/**
 * Class org.hl7.fhir.r5.utils.formats.CSVWriter.
 *
 * This actually imports the java class for further use.
 * The class {@link CSVWriterClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class CSVWriter extends CSVWriter_base {
}
export default CSVWriter;
//# sourceMappingURL=CSVWriter.d.ts.map