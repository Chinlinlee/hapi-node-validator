import { JavaClass, BasicOrJavaType } from "java-bridge";
import { ElementDefinition as org_hl7_fhir_r5_model_ElementDefinition } from "./../model/ElementDefinition";
import { Long as java_lang_Long } from "./../../../../../java/lang/Long";
import { Integer as java_lang_Integer } from "./../../../../../java/lang/Integer";
import { Class as java_lang_Class } from "./../../../../../java/lang/Class";
import { FHIRPathEngine as org_hl7_fhir_r5_utils_FHIRPathEngine } from "./FHIRPathEngine";
/**
 * This class just defines types, you should import {@link FHIRPathEngine$ElementDefinitionMatch} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class FHIRPathEngine$ElementDefinitionMatchClass extends JavaClass {
    /**
     * @return original return type: 'org.hl7.fhir.r5.model.ElementDefinition'
     */
    getDefinition(): Promise<org_hl7_fhir_r5_model_ElementDefinition | null>;
    /**
     * @return original return type: 'org.hl7.fhir.r5.model.ElementDefinition'
     */
    getDefinitionSync(): org_hl7_fhir_r5_model_ElementDefinition | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getFixedType(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getFixedTypeSync(): string | null;
    /**
     * @return original return type: 'org.hl7.fhir.r5.model.ElementDefinition'
     */
    getSourceDefinition(): Promise<org_hl7_fhir_r5_model_ElementDefinition | null>;
    /**
     * @return original return type: 'org.hl7.fhir.r5.model.ElementDefinition'
     */
    getSourceDefinitionSync(): org_hl7_fhir_r5_model_ElementDefinition | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.utils.FHIRPathEngine'
     * @param var1 original type: 'org.hl7.fhir.r5.model.ElementDefinition'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.r5.utils.FHIRPathEngine$ElementDefinitionMatch'
     */
    static newInstanceAsync(var0: org_hl7_fhir_r5_utils_FHIRPathEngine | null, var1: org_hl7_fhir_r5_model_ElementDefinition | null, var2: string | null): Promise<FHIRPathEngine$ElementDefinitionMatch>;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.utils.FHIRPathEngine'
     * @param var1 original type: 'org.hl7.fhir.r5.model.ElementDefinition'
     * @param var2 original type: 'java.lang.String'
     */
    constructor(var0: org_hl7_fhir_r5_utils_FHIRPathEngine | null, var1: org_hl7_fhir_r5_model_ElementDefinition | null, var2: string | null);
}
declare const FHIRPathEngine$ElementDefinitionMatch_base: typeof FHIRPathEngine$ElementDefinitionMatchClass;
/**
 * Class org.hl7.fhir.r5.utils.FHIRPathEngine$ElementDefinitionMatch.
 *
 * This actually imports the java class for further use.
 * The class {@link FHIRPathEngine$ElementDefinitionMatchClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class FHIRPathEngine$ElementDefinitionMatch extends FHIRPathEngine$ElementDefinitionMatch_base {
}
export default FHIRPathEngine$ElementDefinitionMatch;
//# sourceMappingURL=FHIRPathEngine$ElementDefinitionMatch.d.ts.map