import { JavaClass, InterfaceProxyOptions, JavaInterfaceProxy } from "java-bridge";
/**
 * This class just defines types, you should import {@link ICoding} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ICodingClass extends JavaClass {
    /**
     * @return original return type: 'java.lang.String'
     */
    getVersion(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getVersionSync(): string | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getSystem(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getSystemSync(): string | null;
    /**
     * @return original return type: 'boolean'
     */
    hasSystem(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    hasSystemSync(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    hasVersion(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    hasVersionSync(): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    getDisplay(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getDisplaySync(): string | null;
    /**
     * @return original return type: 'boolean'
     */
    hasDisplay(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    hasDisplaySync(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    supportsDisplay(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    supportsDisplaySync(): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    getCode(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getCodeSync(): string | null;
    /**
     * @return original return type: 'boolean'
     */
    hasCode(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    hasCodeSync(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    supportsVersion(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    supportsVersionSync(): boolean;
}
/**
 * This interface just defines types for creating proxies,
 * you should use {@link createICodingProxy} for actually creating the proxies.
 *
 * Optional methods in here may still be required by java.
 * This is caused by typescript not allowing to have both optional and
 * non-optional signatures for the same interface member.
 *
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export interface ICodingInterface {
    /**
     * @return original return type: 'java.lang.String'
     */
    getVersion(): string | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getSystem(): string | null;
    /**
     * @return original return type: 'boolean'
     */
    hasSystem(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    hasVersion(): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    getDisplay(): string | null;
    /**
     * @return original return type: 'boolean'
     */
    hasDisplay(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    supportsDisplay(): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    getCode(): string | null;
    /**
     * @return original return type: 'boolean'
     */
    hasCode(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    supportsVersion(): boolean;
}
/**
 * Create a proxy for the {@link ICoding} interface.
 * All required methods in {@link ICodingInterface} must be implemented.
 *
 * @param methods the methods to implement
 * @param opts the proxy options
 * @return the proxy
 */
export declare function createICodingProxy(methods: ICodingInterface, opts?: InterfaceProxyOptions): JavaInterfaceProxy<ICodingInterface>;
declare const ICoding_base: typeof ICodingClass;
/**
 * Class org.hl7.fhir.r5.model.ICoding.
 *
 * This actually imports the java class for further use.
 * The class {@link ICodingClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ICoding extends ICoding_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default ICoding;
//# sourceMappingURL=ICoding.d.ts.map