import { JavaClass, BasicOrJavaType } from "java-bridge";
import { Date as java_util_Date } from "./../../../../../java/util/Date";
import { List as java_util_List } from "./../../../../../java/util/List";
import { Long as java_lang_Long } from "./../../../../../java/lang/Long";
import { Integer as java_lang_Integer } from "./../../../../../java/lang/Integer";
import { Class as java_lang_Class } from "./../../../../../java/lang/Class";
import { NpmPackage as org_hl7_fhir_utilities_npm_NpmPackage } from "./../../utilities/npm/NpmPackage";
/**
 * This class just defines types, you should import {@link PackageInformation} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class PackageInformationClass extends JavaClass {
    /**
     * @return original return type: 'java.lang.String'
     */
    getName(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getNameSync(): string | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'java.lang.String'
     */
    getId(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getIdSync(): string | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getVersion(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getVersionSync(): string | null;
    /**
     * @return original return type: 'java.util.Date'
     */
    getDate(): Promise<java_util_Date | null>;
    /**
     * @return original return type: 'java.util.Date'
     */
    getDateSync(): java_util_Date | null;
    /**
     * @return original return type: 'boolean'
     */
    isHTO(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isHTOSync(): boolean;
    /**
     * @return original return type: 'java.util.List'
     */
    getDependencies(): Promise<java_util_List | null>;
    /**
     * @return original return type: 'java.util.List'
     */
    getDependenciesSync(): java_util_List | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getCanonical(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getCanonicalSync(): string | null;
    /**
     * @return original return type: 'boolean'
     */
    isExamplesPackage(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isExamplesPackageSync(): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    getVID(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getVIDSync(): string | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getWeb(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getWebSync(): string | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.util.Date'
     * @param var3 original type: 'java.lang.String'
     * @param var4 original type: 'java.lang.String'
     * @param var5 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.r5.model.PackageInformation'
     */
    static newInstanceAsync(var0: string | null, var1: string | null, var2: java_util_Date | null, var3: string | null, var4: string | null, var5: string | null): Promise<PackageInformation>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.util.Date'
     * @return original return type: 'org.hl7.fhir.r5.model.PackageInformation'
     */
    static newInstanceAsync(var0: string | null, var1: string | null, var2: java_util_Date | null): Promise<PackageInformation>;
    /**
     * @param var0 original type: 'org.hl7.fhir.utilities.npm.NpmPackage'
     * @return original return type: 'org.hl7.fhir.r5.model.PackageInformation'
     */
    static newInstanceAsync(var0: org_hl7_fhir_utilities_npm_NpmPackage | null): Promise<PackageInformation>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.Date'
     * @return original return type: 'org.hl7.fhir.r5.model.PackageInformation'
     */
    static newInstanceAsync(var0: string | null, var1: java_util_Date | null): Promise<PackageInformation>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.util.Date'
     * @param var3 original type: 'java.lang.String'
     * @param var4 original type: 'java.lang.String'
     * @param var5 original type: 'java.lang.String'
     */
    constructor(var0: string | null, var1: string | null, var2: java_util_Date | null, var3: string | null, var4: string | null, var5: string | null);
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.util.Date'
     */
    constructor(var0: string | null, var1: string | null, var2: java_util_Date | null);
    /**
     * @param var0 original type: 'org.hl7.fhir.utilities.npm.NpmPackage'
     */
    constructor(var0: org_hl7_fhir_utilities_npm_NpmPackage | null);
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.Date'
     */
    constructor(var0: string | null, var1: java_util_Date | null);
}
declare const PackageInformation_base: typeof PackageInformationClass;
/**
 * Class org.hl7.fhir.r5.model.PackageInformation.
 *
 * This actually imports the java class for further use.
 * The class {@link PackageInformationClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class PackageInformation extends PackageInformation_base {
}
export default PackageInformation;
//# sourceMappingURL=PackageInformation.d.ts.map