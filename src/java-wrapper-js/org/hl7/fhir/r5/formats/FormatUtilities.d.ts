/// <reference types="node" />
import { JavaClass, BasicOrJavaType } from "java-bridge";
import { Resource as org_hl7_fhir_r5_model_Resource } from "./../model/Resource";
import { InputStream as java_io_InputStream } from "./../../../../../java/io/InputStream";
import { ParserBase as org_hl7_fhir_r5_formats_ParserBase } from "./ParserBase";
import { Manager$FhirFormat as org_hl7_fhir_r5_elementmodel_Manager$FhirFormat } from "./../elementmodel/Manager$FhirFormat";
import { Integer as java_lang_Integer } from "./../../../../../java/lang/Integer";
import { Long as java_lang_Long } from "./../../../../../java/lang/Long";
import { Class as java_lang_Class } from "./../../../../../java/lang/Class";
/**
 * This class just defines types, you should import {@link FormatUtilities} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class FormatUtilitiesClass extends JavaClass {
    /**
     * Original type: 'java.lang.String'
     */
    static readonly ID_REGEX: string | null;
    /**
     * Original type: 'java.lang.String'
     */
    static readonly FHIR_NS: string | null;
    /**
     * Original type: 'java.lang.String'
     */
    static readonly XHTML_NS: string | null;
    /**
     * Original type: 'java.lang.String'
     */
    static readonly NS_XSI: string | null;
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'java.lang.String'
     */
    static toString(var0: Buffer | null): Promise<string>;
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'java.lang.String'
     */
    static toStringSync(var0: Buffer | null): string;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.r5.model.Resource'
     */
    static loadFileTight(var0: string | null): Promise<org_hl7_fhir_r5_model_Resource | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.r5.model.Resource'
     */
    static loadFileTightSync(var0: string | null): org_hl7_fhir_r5_model_Resource | null;
    /**
     * @param var0 original type: 'java.io.InputStream'
     * @return original return type: 'org.hl7.fhir.r5.model.Resource'
     */
    static loadFileTight(var0: java_io_InputStream | null): Promise<org_hl7_fhir_r5_model_Resource | null>;
    /**
     * @param var0 original type: 'java.io.InputStream'
     * @return original return type: 'org.hl7.fhir.r5.model.Resource'
     */
    static loadFileTightSync(var0: java_io_InputStream | null): org_hl7_fhir_r5_model_Resource | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    static isValidId(var0: string | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    static isValidIdSync(var0: string | null): boolean;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    static makeId(var0: string | null): Promise<string | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    static makeIdSync(var0: string | null): string | null;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.elementmodel.Manager$FhirFormat'
     * @return original return type: 'org.hl7.fhir.r5.formats.ParserBase'
     */
    static makeParser(var0: org_hl7_fhir_r5_elementmodel_Manager$FhirFormat | null): Promise<org_hl7_fhir_r5_formats_ParserBase | null>;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.elementmodel.Manager$FhirFormat'
     * @return original return type: 'org.hl7.fhir.r5.formats.ParserBase'
     */
    static makeParserSync(var0: org_hl7_fhir_r5_elementmodel_Manager$FhirFormat | null): org_hl7_fhir_r5_formats_ParserBase | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.r5.formats.ParserBase'
     */
    static makeParser(var0: string | null): Promise<org_hl7_fhir_r5_formats_ParserBase | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.r5.formats.ParserBase'
     */
    static makeParserSync(var0: string | null): org_hl7_fhir_r5_formats_ParserBase | null;
    /**
     * @param var0 original type: 'byte[]'
     * @param var1 original type: 'int'
     * @return original return type: 'org.hl7.fhir.r5.elementmodel.Manager$FhirFormat'
     */
    static determineFormat(var0: Buffer | null, var1: java_lang_Integer | number): Promise<org_hl7_fhir_r5_elementmodel_Manager$FhirFormat | null>;
    /**
     * @param var0 original type: 'byte[]'
     * @param var1 original type: 'int'
     * @return original return type: 'org.hl7.fhir.r5.elementmodel.Manager$FhirFormat'
     */
    static determineFormatSync(var0: Buffer | null, var1: java_lang_Integer | number): org_hl7_fhir_r5_elementmodel_Manager$FhirFormat | null;
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'org.hl7.fhir.r5.elementmodel.Manager$FhirFormat'
     */
    static determineFormat(var0: Buffer | null): Promise<org_hl7_fhir_r5_elementmodel_Manager$FhirFormat | null>;
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'org.hl7.fhir.r5.elementmodel.Manager$FhirFormat'
     */
    static determineFormatSync(var0: Buffer | null): org_hl7_fhir_r5_elementmodel_Manager$FhirFormat | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.r5.model.Resource'
     */
    static loadFile(var0: string | null): Promise<org_hl7_fhir_r5_model_Resource | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.r5.model.Resource'
     */
    static loadFileSync(var0: string | null): org_hl7_fhir_r5_model_Resource | null;
    /**
     * @param var0 original type: 'java.io.InputStream'
     * @return original return type: 'org.hl7.fhir.r5.model.Resource'
     */
    static loadFile(var0: java_io_InputStream | null): Promise<org_hl7_fhir_r5_model_Resource | null>;
    /**
     * @param var0 original type: 'java.io.InputStream'
     * @return original return type: 'org.hl7.fhir.r5.model.Resource'
     */
    static loadFileSync(var0: java_io_InputStream | null): org_hl7_fhir_r5_model_Resource | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
}
declare const FormatUtilities_base: typeof FormatUtilitiesClass;
/**
 * Class org.hl7.fhir.r5.formats.FormatUtilities.
 *
 * This actually imports the java class for further use.
 * The class {@link FormatUtilitiesClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class FormatUtilities extends FormatUtilities_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default FormatUtilities;
//# sourceMappingURL=FormatUtilities.d.ts.map