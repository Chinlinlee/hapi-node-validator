import { JavaClass, InterfaceProxyOptions, JavaInterfaceProxy } from "java-bridge";
import { CanonicalResource as org_hl7_fhir_r5_model_CanonicalResource } from "./../../model/CanonicalResource";
import { ToolingClientLogger as org_hl7_fhir_utilities_ToolingClientLogger, ToolingClientLoggerInterface as org_hl7_fhir_utilities_ToolingClientLoggerInterface } from "./../../../utilities/ToolingClientLogger";
import { Parameters as org_hl7_fhir_r5_model_Parameters } from "./../../model/Parameters";
import { Map as java_util_Map, MapInterface as java_util_MapInterface } from "./../../../../../../java/util/Map";
import { Integer as java_lang_Integer } from "./../../../../../../java/lang/Integer";
import { CapabilityStatement as org_hl7_fhir_r5_model_CapabilityStatement } from "./../../model/CapabilityStatement";
import { TerminologyCapabilities as org_hl7_fhir_r5_model_TerminologyCapabilities } from "./../../model/TerminologyCapabilities";
import { EnumSet as java_util_EnumSet } from "./../../../../../../java/util/EnumSet";
import { ClientHeaders as org_hl7_fhir_r5_utils_client_network_ClientHeaders } from "./../../utils/client/network/ClientHeaders";
import { FhirPublication as org_hl7_fhir_utilities_FhirPublication } from "./../../../utilities/FhirPublication";
import { ValueSet as org_hl7_fhir_r5_model_ValueSet } from "./../../model/ValueSet";
import { Bundle as org_hl7_fhir_r5_model_Bundle } from "./../../model/Bundle";
/**
 * This class just defines types, you should import {@link ITerminologyClient} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ITerminologyClientClass extends JavaClass {
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.r5.model.CanonicalResource'
     */
    read(var0: string | null, var1: string | null): Promise<org_hl7_fhir_r5_model_CanonicalResource | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.r5.model.CanonicalResource'
     */
    readSync(var0: string | null, var1: string | null): org_hl7_fhir_r5_model_CanonicalResource | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getId(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getIdSync(): string | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getAddress(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getAddressSync(): string | null;
    /**
     * @param var0 original type: 'org.hl7.fhir.utilities.ToolingClientLogger'
     * @return original return type: 'org.hl7.fhir.r5.terminologies.client.ITerminologyClient'
     */
    setLogger(var0: org_hl7_fhir_utilities_ToolingClientLogger | JavaInterfaceProxy<org_hl7_fhir_utilities_ToolingClientLoggerInterface> | null): Promise<ITerminologyClient | null>;
    /**
     * @param var0 original type: 'org.hl7.fhir.utilities.ToolingClientLogger'
     * @return original return type: 'org.hl7.fhir.r5.terminologies.client.ITerminologyClient'
     */
    setLoggerSync(var0: org_hl7_fhir_utilities_ToolingClientLogger | JavaInterfaceProxy<org_hl7_fhir_utilities_ToolingClientLoggerInterface> | null): ITerminologyClient | null;
    /**
     * @param var0 original type: 'java.util.Map'
     * @return original return type: 'org.hl7.fhir.r5.model.Parameters'
     */
    lookupCode(var0: java_util_Map | JavaInterfaceProxy<java_util_MapInterface> | null): Promise<org_hl7_fhir_r5_model_Parameters | null>;
    /**
     * @param var0 original type: 'java.util.Map'
     * @return original return type: 'org.hl7.fhir.r5.model.Parameters'
     */
    lookupCodeSync(var0: java_util_Map | JavaInterfaceProxy<java_util_MapInterface> | null): org_hl7_fhir_r5_model_Parameters | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getServerVersion(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getServerVersionSync(): string | null;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'org.hl7.fhir.r5.terminologies.client.ITerminologyClient'
     */
    setTimeout(var0: java_lang_Integer | number): Promise<ITerminologyClient | null>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'org.hl7.fhir.r5.terminologies.client.ITerminologyClient'
     */
    setTimeoutSync(var0: java_lang_Integer | number): ITerminologyClient | null;
    /**
     * @return original return type: 'org.hl7.fhir.r5.model.CapabilityStatement'
     */
    getCapabilitiesStatementQuick(): Promise<org_hl7_fhir_r5_model_CapabilityStatement | null>;
    /**
     * @return original return type: 'org.hl7.fhir.r5.model.CapabilityStatement'
     */
    getCapabilitiesStatementQuickSync(): org_hl7_fhir_r5_model_CapabilityStatement | null;
    /**
     * @return original return type: 'org.hl7.fhir.r5.model.TerminologyCapabilities'
     */
    getTerminologyCapabilities(): Promise<org_hl7_fhir_r5_model_TerminologyCapabilities | null>;
    /**
     * @return original return type: 'org.hl7.fhir.r5.model.TerminologyCapabilities'
     */
    getTerminologyCapabilitiesSync(): org_hl7_fhir_r5_model_TerminologyCapabilities | null;
    /**
     * @return original return type: 'java.util.EnumSet'
     */
    supportableVersions(): Promise<java_util_EnumSet | null>;
    /**
     * @return original return type: 'java.util.EnumSet'
     */
    supportableVersionsSync(): java_util_EnumSet | null;
    /**
     * @param var0 original type: 'java.util.EnumSet'
     * @return original return type: 'void'
     */
    setAllowedVersions(var0: java_util_EnumSet | null): Promise<void>;
    /**
     * @param var0 original type: 'java.util.EnumSet'
     * @return original return type: 'void'
     */
    setAllowedVersionsSync(var0: java_util_EnumSet | null): void;
    /**
     * @return original return type: 'org.hl7.fhir.r5.utils.client.network.ClientHeaders'
     */
    getClientHeaders(): Promise<org_hl7_fhir_r5_utils_client_network_ClientHeaders | null>;
    /**
     * @return original return type: 'org.hl7.fhir.r5.utils.client.network.ClientHeaders'
     */
    getClientHeadersSync(): org_hl7_fhir_r5_utils_client_network_ClientHeaders | null;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.utils.client.network.ClientHeaders'
     * @return original return type: 'org.hl7.fhir.r5.terminologies.client.ITerminologyClient'
     */
    setClientHeaders(var0: org_hl7_fhir_r5_utils_client_network_ClientHeaders | null): Promise<ITerminologyClient | null>;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.utils.client.network.ClientHeaders'
     * @return original return type: 'org.hl7.fhir.r5.terminologies.client.ITerminologyClient'
     */
    setClientHeadersSync(var0: org_hl7_fhir_r5_utils_client_network_ClientHeaders | null): ITerminologyClient | null;
    /**
     * @return original return type: 'java.util.EnumSet'
     */
    getAllowedVersions(): Promise<java_util_EnumSet | null>;
    /**
     * @return original return type: 'java.util.EnumSet'
     */
    getAllowedVersionsSync(): java_util_EnumSet | null;
    /**
     * @return original return type: 'org.hl7.fhir.utilities.FhirPublication'
     */
    getActualVersion(): Promise<org_hl7_fhir_utilities_FhirPublication | null>;
    /**
     * @return original return type: 'org.hl7.fhir.utilities.FhirPublication'
     */
    getActualVersionSync(): org_hl7_fhir_utilities_FhirPublication | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.r5.terminologies.client.ITerminologyClient'
     */
    setUserAgent(var0: string | null): Promise<ITerminologyClient | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.r5.terminologies.client.ITerminologyClient'
     */
    setUserAgentSync(var0: string | null): ITerminologyClient | null;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.model.ValueSet'
     * @param var1 original type: 'org.hl7.fhir.r5.model.Parameters'
     * @param var2 original type: 'java.util.Map'
     * @return original return type: 'org.hl7.fhir.r5.model.ValueSet'
     */
    expandValueset(var0: org_hl7_fhir_r5_model_ValueSet | null, var1: org_hl7_fhir_r5_model_Parameters | null, var2: java_util_Map | JavaInterfaceProxy<java_util_MapInterface> | null): Promise<org_hl7_fhir_r5_model_ValueSet | null>;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.model.ValueSet'
     * @param var1 original type: 'org.hl7.fhir.r5.model.Parameters'
     * @param var2 original type: 'java.util.Map'
     * @return original return type: 'org.hl7.fhir.r5.model.ValueSet'
     */
    expandValuesetSync(var0: org_hl7_fhir_r5_model_ValueSet | null, var1: org_hl7_fhir_r5_model_Parameters | null, var2: java_util_Map | JavaInterfaceProxy<java_util_MapInterface> | null): org_hl7_fhir_r5_model_ValueSet | null;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.model.Bundle'
     * @return original return type: 'org.hl7.fhir.r5.model.Bundle'
     */
    validateBatch(var0: org_hl7_fhir_r5_model_Bundle | null): Promise<org_hl7_fhir_r5_model_Bundle | null>;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.model.Bundle'
     * @return original return type: 'org.hl7.fhir.r5.model.Bundle'
     */
    validateBatchSync(var0: org_hl7_fhir_r5_model_Bundle | null): org_hl7_fhir_r5_model_Bundle | null;
    /**
     * @return original return type: 'int'
     */
    getRetryCount(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getRetryCountSync(): number;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'org.hl7.fhir.r5.terminologies.client.ITerminologyClient'
     */
    setRetryCount(var0: java_lang_Integer | number): Promise<ITerminologyClient | null>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'org.hl7.fhir.r5.terminologies.client.ITerminologyClient'
     */
    setRetryCountSync(var0: java_lang_Integer | number): ITerminologyClient | null;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.model.Parameters'
     * @return original return type: 'org.hl7.fhir.r5.model.Parameters'
     */
    validateCS(var0: org_hl7_fhir_r5_model_Parameters | null): Promise<org_hl7_fhir_r5_model_Parameters | null>;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.model.Parameters'
     * @return original return type: 'org.hl7.fhir.r5.model.Parameters'
     */
    validateCSSync(var0: org_hl7_fhir_r5_model_Parameters | null): org_hl7_fhir_r5_model_Parameters | null;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.model.Parameters'
     * @return original return type: 'org.hl7.fhir.r5.model.Parameters'
     */
    validateVS(var0: org_hl7_fhir_r5_model_Parameters | null): Promise<org_hl7_fhir_r5_model_Parameters | null>;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.model.Parameters'
     * @return original return type: 'org.hl7.fhir.r5.model.Parameters'
     */
    validateVSSync(var0: org_hl7_fhir_r5_model_Parameters | null): org_hl7_fhir_r5_model_Parameters | null;
}
/**
 * This interface just defines types for creating proxies,
 * you should use {@link createITerminologyClientProxy} for actually creating the proxies.
 *
 * Optional methods in here may still be required by java.
 * This is caused by typescript not allowing to have both optional and
 * non-optional signatures for the same interface member.
 *
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export interface ITerminologyClientInterface {
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.r5.model.CanonicalResource'
     */
    read(var0: string | null, var1: string | null): org_hl7_fhir_r5_model_CanonicalResource | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getId(): string | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getAddress(): string | null;
    /**
     * @param var0 original type: 'org.hl7.fhir.utilities.ToolingClientLogger'
     * @return original return type: 'org.hl7.fhir.r5.terminologies.client.ITerminologyClient'
     */
    setLogger(var0: org_hl7_fhir_utilities_ToolingClientLogger | JavaInterfaceProxy<org_hl7_fhir_utilities_ToolingClientLoggerInterface> | null): ITerminologyClient | null;
    /**
     * @param var0 original type: 'java.util.Map'
     * @return original return type: 'org.hl7.fhir.r5.model.Parameters'
     */
    lookupCode(var0: java_util_Map | JavaInterfaceProxy<java_util_MapInterface> | null): org_hl7_fhir_r5_model_Parameters | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getServerVersion(): string | null;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'org.hl7.fhir.r5.terminologies.client.ITerminologyClient'
     */
    setTimeout(var0: java_lang_Integer | number): ITerminologyClient | null;
    /**
     * @return original return type: 'org.hl7.fhir.r5.model.CapabilityStatement'
     */
    getCapabilitiesStatementQuick(): org_hl7_fhir_r5_model_CapabilityStatement | null;
    /**
     * @return original return type: 'org.hl7.fhir.r5.model.TerminologyCapabilities'
     */
    getTerminologyCapabilities(): org_hl7_fhir_r5_model_TerminologyCapabilities | null;
    /**
     * @return original return type: 'java.util.EnumSet'
     */
    supportableVersions(): java_util_EnumSet | null;
    /**
     * @param var0 original type: 'java.util.EnumSet'
     * @return original return type: 'void'
     */
    setAllowedVersions(var0: java_util_EnumSet | null): void;
    /**
     * @return original return type: 'org.hl7.fhir.r5.utils.client.network.ClientHeaders'
     */
    getClientHeaders(): org_hl7_fhir_r5_utils_client_network_ClientHeaders | null;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.utils.client.network.ClientHeaders'
     * @return original return type: 'org.hl7.fhir.r5.terminologies.client.ITerminologyClient'
     */
    setClientHeaders(var0: org_hl7_fhir_r5_utils_client_network_ClientHeaders | null): ITerminologyClient | null;
    /**
     * @return original return type: 'java.util.EnumSet'
     */
    getAllowedVersions(): java_util_EnumSet | null;
    /**
     * @return original return type: 'org.hl7.fhir.utilities.FhirPublication'
     */
    getActualVersion(): org_hl7_fhir_utilities_FhirPublication | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.r5.terminologies.client.ITerminologyClient'
     */
    setUserAgent(var0: string | null): ITerminologyClient | null;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.model.ValueSet'
     * @param var1 original type: 'org.hl7.fhir.r5.model.Parameters'
     * @param var2 original type: 'java.util.Map'
     * @return original return type: 'org.hl7.fhir.r5.model.ValueSet'
     */
    expandValueset(var0: org_hl7_fhir_r5_model_ValueSet | null, var1: org_hl7_fhir_r5_model_Parameters | null, var2: java_util_Map | JavaInterfaceProxy<java_util_MapInterface> | null): org_hl7_fhir_r5_model_ValueSet | null;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.model.Bundle'
     * @return original return type: 'org.hl7.fhir.r5.model.Bundle'
     */
    validateBatch(var0: org_hl7_fhir_r5_model_Bundle | null): org_hl7_fhir_r5_model_Bundle | null;
    /**
     * @return original return type: 'int'
     */
    getRetryCount(): number;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'org.hl7.fhir.r5.terminologies.client.ITerminologyClient'
     */
    setRetryCount(var0: java_lang_Integer | number): ITerminologyClient | null;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.model.Parameters'
     * @return original return type: 'org.hl7.fhir.r5.model.Parameters'
     */
    validateCS(var0: org_hl7_fhir_r5_model_Parameters | null): org_hl7_fhir_r5_model_Parameters | null;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.model.Parameters'
     * @return original return type: 'org.hl7.fhir.r5.model.Parameters'
     */
    validateVS(var0: org_hl7_fhir_r5_model_Parameters | null): org_hl7_fhir_r5_model_Parameters | null;
}
/**
 * Create a proxy for the {@link ITerminologyClient} interface.
 * All required methods in {@link ITerminologyClientInterface} must be implemented.
 *
 * @param methods the methods to implement
 * @param opts the proxy options
 * @return the proxy
 */
export declare function createITerminologyClientProxy(methods: ITerminologyClientInterface, opts?: InterfaceProxyOptions): JavaInterfaceProxy<ITerminologyClientInterface>;
declare const ITerminologyClient_base: typeof ITerminologyClientClass;
/**
 * Class org.hl7.fhir.r5.terminologies.client.ITerminologyClient.
 *
 * This actually imports the java class for further use.
 * The class {@link ITerminologyClientClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ITerminologyClient extends ITerminologyClient_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default ITerminologyClient;
//# sourceMappingURL=ITerminologyClient.d.ts.map