import { JavaClass, BasicOrJavaType } from "java-bridge";
import { Boolean as java_lang_Boolean } from "./../../../../../java/lang/Boolean";
import { TerminologyCache$CacheToken as org_hl7_fhir_r5_context_TerminologyCache$CacheToken } from "./TerminologyCache$CacheToken";
import { TerminologyCache$NamedCache as org_hl7_fhir_r5_context_TerminologyCache$NamedCache } from "./TerminologyCache$NamedCache";
import { TerminologyCache$CacheEntry as org_hl7_fhir_r5_context_TerminologyCache$CacheEntry } from "./TerminologyCache$CacheEntry";
import { ValueSetExpansionOutcome as org_hl7_fhir_r5_terminologies_expansion_ValueSetExpansionOutcome } from "./../terminologies/expansion/ValueSetExpansionOutcome";
import { CodeableConcept as org_hl7_fhir_r5_model_CodeableConcept } from "./../model/CodeableConcept";
import { ValueSet as org_hl7_fhir_r5_model_ValueSet } from "./../model/ValueSet";
import { Coding as org_hl7_fhir_r5_model_Coding } from "./../model/Coding";
import { TerminologyCapabilities as org_hl7_fhir_r5_model_TerminologyCapabilities } from "./../model/TerminologyCapabilities";
import { CapabilityStatement as org_hl7_fhir_r5_model_CapabilityStatement } from "./../model/CapabilityStatement";
import { ValidationOptions as org_hl7_fhir_utilities_validation_ValidationOptions } from "./../../utilities/validation/ValidationOptions";
import { Parameters as org_hl7_fhir_r5_model_Parameters } from "./../model/Parameters";
import { JsonParser as org_hl7_fhir_r5_formats_JsonParser } from "./../formats/JsonParser";
import { IWorkerContext$ValidationResult as org_hl7_fhir_r5_context_IWorkerContext$ValidationResult } from "./IWorkerContext$ValidationResult";
import { Long as java_lang_Long } from "./../../../../../java/lang/Long";
import { Integer as java_lang_Integer } from "./../../../../../java/lang/Integer";
import { Class as java_lang_Class } from "./../../../../../java/lang/Class";
/**
 * This class just defines types, you should import {@link TerminologyCache} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class TerminologyCacheClass extends JavaClass {
    /**
     * Original type: 'boolean'
     */
    static readonly TRANSIENT: java_lang_Boolean | boolean;
    /**
     * Original type: 'boolean'
     */
    static readonly PERMANENT: java_lang_Boolean | boolean;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.context.TerminologyCache$CacheToken'
     * @param var1 original type: 'boolean'
     * @param var2 original type: 'org.hl7.fhir.r5.context.TerminologyCache$NamedCache'
     * @param var3 original type: 'org.hl7.fhir.r5.context.TerminologyCache$CacheEntry'
     * @return original return type: 'void'
     */
    store(var0: org_hl7_fhir_r5_context_TerminologyCache$CacheToken | null, var1: java_lang_Boolean | boolean, var2: org_hl7_fhir_r5_context_TerminologyCache$NamedCache | null, var3: org_hl7_fhir_r5_context_TerminologyCache$CacheEntry | null): Promise<void>;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.context.TerminologyCache$CacheToken'
     * @param var1 original type: 'boolean'
     * @param var2 original type: 'org.hl7.fhir.r5.context.TerminologyCache$NamedCache'
     * @param var3 original type: 'org.hl7.fhir.r5.context.TerminologyCache$CacheEntry'
     * @return original return type: 'void'
     */
    storeSync(var0: org_hl7_fhir_r5_context_TerminologyCache$CacheToken | null, var1: java_lang_Boolean | boolean, var2: org_hl7_fhir_r5_context_TerminologyCache$NamedCache | null, var3: org_hl7_fhir_r5_context_TerminologyCache$CacheEntry | null): void;
    /**
     * @return original return type: 'void'
     */
    clear(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    clearSync(): void;
    /**
     * @return original return type: 'void'
     */
    save(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    saveSync(): void;
    /**
     * @return original return type: 'java.lang.String'
     */
    getFolder(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getFolderSync(): string | null;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.context.TerminologyCache$CacheToken'
     * @return original return type: 'org.hl7.fhir.r5.terminologies.expansion.ValueSetExpansionOutcome'
     */
    getExpansion(var0: org_hl7_fhir_r5_context_TerminologyCache$CacheToken | null): Promise<org_hl7_fhir_r5_terminologies_expansion_ValueSetExpansionOutcome | null>;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.context.TerminologyCache$CacheToken'
     * @return original return type: 'org.hl7.fhir.r5.terminologies.expansion.ValueSetExpansionOutcome'
     */
    getExpansionSync(var0: org_hl7_fhir_r5_context_TerminologyCache$CacheToken | null): org_hl7_fhir_r5_terminologies_expansion_ValueSetExpansionOutcome | null;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.model.CodeableConcept'
     * @return original return type: 'java.lang.String'
     */
    summary(var0: org_hl7_fhir_r5_model_CodeableConcept | null): Promise<string | null>;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.model.CodeableConcept'
     * @return original return type: 'java.lang.String'
     */
    summarySync(var0: org_hl7_fhir_r5_model_CodeableConcept | null): string | null;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.model.ValueSet'
     * @return original return type: 'java.lang.String'
     */
    summary(var0: org_hl7_fhir_r5_model_ValueSet | null): Promise<string | null>;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.model.ValueSet'
     * @return original return type: 'java.lang.String'
     */
    summarySync(var0: org_hl7_fhir_r5_model_ValueSet | null): string | null;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.model.Coding'
     * @return original return type: 'java.lang.String'
     */
    summary(var0: org_hl7_fhir_r5_model_Coding | null): Promise<string | null>;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.model.Coding'
     * @return original return type: 'java.lang.String'
     */
    summarySync(var0: org_hl7_fhir_r5_model_Coding | null): string | null;
    /**
     * @return original return type: 'boolean'
     */
    hasCapabilityStatement(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    hasCapabilityStatementSync(): boolean;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.model.TerminologyCapabilities'
     * @return original return type: 'void'
     */
    cacheTerminologyCapabilities(var0: org_hl7_fhir_r5_model_TerminologyCapabilities | null): Promise<void>;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.model.TerminologyCapabilities'
     * @return original return type: 'void'
     */
    cacheTerminologyCapabilitiesSync(var0: org_hl7_fhir_r5_model_TerminologyCapabilities | null): void;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.model.CapabilityStatement'
     * @return original return type: 'void'
     */
    cacheCapabilityStatement(var0: org_hl7_fhir_r5_model_CapabilityStatement | null): Promise<void>;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.model.CapabilityStatement'
     * @return original return type: 'void'
     */
    cacheCapabilityStatementSync(var0: org_hl7_fhir_r5_model_CapabilityStatement | null): void;
    /**
     * @return original return type: 'org.hl7.fhir.r5.model.CapabilityStatement'
     */
    getCapabilityStatement(): Promise<org_hl7_fhir_r5_model_CapabilityStatement | null>;
    /**
     * @return original return type: 'org.hl7.fhir.r5.model.CapabilityStatement'
     */
    getCapabilityStatementSync(): org_hl7_fhir_r5_model_CapabilityStatement | null;
    /**
     * @return original return type: 'boolean'
     */
    hasTerminologyCapabilities(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    hasTerminologyCapabilitiesSync(): boolean;
    /**
     * @return original return type: 'org.hl7.fhir.r5.model.TerminologyCapabilities'
     */
    getTerminologyCapabilities(): Promise<org_hl7_fhir_r5_model_TerminologyCapabilities | null>;
    /**
     * @return original return type: 'org.hl7.fhir.r5.model.TerminologyCapabilities'
     */
    getTerminologyCapabilitiesSync(): org_hl7_fhir_r5_model_TerminologyCapabilities | null;
    /**
     * @param var0 original type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     * @param var1 original type: 'org.hl7.fhir.r5.model.Coding'
     * @param var2 original type: 'org.hl7.fhir.r5.model.ValueSet'
     * @param var3 original type: 'org.hl7.fhir.r5.model.Parameters'
     * @return original return type: 'org.hl7.fhir.r5.context.TerminologyCache$CacheToken'
     */
    generateValidationToken(var0: org_hl7_fhir_utilities_validation_ValidationOptions | null, var1: org_hl7_fhir_r5_model_Coding | null, var2: org_hl7_fhir_r5_model_ValueSet | null, var3: org_hl7_fhir_r5_model_Parameters | null): Promise<org_hl7_fhir_r5_context_TerminologyCache$CacheToken | null>;
    /**
     * @param var0 original type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     * @param var1 original type: 'org.hl7.fhir.r5.model.Coding'
     * @param var2 original type: 'org.hl7.fhir.r5.model.ValueSet'
     * @param var3 original type: 'org.hl7.fhir.r5.model.Parameters'
     * @return original return type: 'org.hl7.fhir.r5.context.TerminologyCache$CacheToken'
     */
    generateValidationTokenSync(var0: org_hl7_fhir_utilities_validation_ValidationOptions | null, var1: org_hl7_fhir_r5_model_Coding | null, var2: org_hl7_fhir_r5_model_ValueSet | null, var3: org_hl7_fhir_r5_model_Parameters | null): org_hl7_fhir_r5_context_TerminologyCache$CacheToken | null;
    /**
     * @param var0 original type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     * @param var1 original type: 'org.hl7.fhir.r5.model.CodeableConcept'
     * @param var2 original type: 'org.hl7.fhir.r5.model.ValueSet'
     * @param var3 original type: 'org.hl7.fhir.r5.model.Parameters'
     * @return original return type: 'org.hl7.fhir.r5.context.TerminologyCache$CacheToken'
     */
    generateValidationToken(var0: org_hl7_fhir_utilities_validation_ValidationOptions | null, var1: org_hl7_fhir_r5_model_CodeableConcept | null, var2: org_hl7_fhir_r5_model_ValueSet | null, var3: org_hl7_fhir_r5_model_Parameters | null): Promise<org_hl7_fhir_r5_context_TerminologyCache$CacheToken | null>;
    /**
     * @param var0 original type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     * @param var1 original type: 'org.hl7.fhir.r5.model.CodeableConcept'
     * @param var2 original type: 'org.hl7.fhir.r5.model.ValueSet'
     * @param var3 original type: 'org.hl7.fhir.r5.model.Parameters'
     * @return original return type: 'org.hl7.fhir.r5.context.TerminologyCache$CacheToken'
     */
    generateValidationTokenSync(var0: org_hl7_fhir_utilities_validation_ValidationOptions | null, var1: org_hl7_fhir_r5_model_CodeableConcept | null, var2: org_hl7_fhir_r5_model_ValueSet | null, var3: org_hl7_fhir_r5_model_Parameters | null): org_hl7_fhir_r5_context_TerminologyCache$CacheToken | null;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.model.ValueSet'
     * @param var1 original type: 'boolean'
     * @return original return type: 'org.hl7.fhir.r5.context.TerminologyCache$CacheToken'
     */
    generateExpandToken(var0: org_hl7_fhir_r5_model_ValueSet | null, var1: java_lang_Boolean | boolean): Promise<org_hl7_fhir_r5_context_TerminologyCache$CacheToken | null>;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.model.ValueSet'
     * @param var1 original type: 'boolean'
     * @return original return type: 'org.hl7.fhir.r5.context.TerminologyCache$CacheToken'
     */
    generateExpandTokenSync(var0: org_hl7_fhir_r5_model_ValueSet | null, var1: java_lang_Boolean | boolean): org_hl7_fhir_r5_context_TerminologyCache$CacheToken | null;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'void'
     */
    static setCacheErrors(var0: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'void'
     */
    static setCacheErrorsSync(var0: java_lang_Boolean | boolean): void;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.model.ValueSet'
     * @return original return type: 'org.hl7.fhir.r5.model.ValueSet'
     */
    getVSEssense(var0: org_hl7_fhir_r5_model_ValueSet | null): Promise<org_hl7_fhir_r5_model_ValueSet | null>;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.model.ValueSet'
     * @return original return type: 'org.hl7.fhir.r5.model.ValueSet'
     */
    getVSEssenseSync(var0: org_hl7_fhir_r5_model_ValueSet | null): org_hl7_fhir_r5_model_ValueSet | null;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.context.TerminologyCache$CacheToken'
     * @return original return type: 'org.hl7.fhir.r5.context.TerminologyCache$NamedCache'
     */
    getNamedCache(var0: org_hl7_fhir_r5_context_TerminologyCache$CacheToken | null): Promise<org_hl7_fhir_r5_context_TerminologyCache$NamedCache | null>;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.context.TerminologyCache$CacheToken'
     * @return original return type: 'org.hl7.fhir.r5.context.TerminologyCache$NamedCache'
     */
    getNamedCacheSync(var0: org_hl7_fhir_r5_context_TerminologyCache$CacheToken | null): org_hl7_fhir_r5_context_TerminologyCache$NamedCache | null;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'void'
     */
    static setNoCaching(var0: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'void'
     */
    static setNoCachingSync(var0: java_lang_Boolean | boolean): void;
    /**
     * @return original return type: 'boolean'
     */
    static isNoCaching(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    static isNoCachingSync(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    static isCacheErrors(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    static isCacheErrorsSync(): boolean;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.formats.JsonParser'
     * @param var1 original type: 'org.hl7.fhir.r5.model.ValueSet'
     * @return original return type: 'java.lang.String'
     */
    extracted(var0: org_hl7_fhir_r5_formats_JsonParser | null, var1: org_hl7_fhir_r5_model_ValueSet | null): Promise<string | null>;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.formats.JsonParser'
     * @param var1 original type: 'org.hl7.fhir.r5.model.ValueSet'
     * @return original return type: 'java.lang.String'
     */
    extractedSync(var0: org_hl7_fhir_r5_formats_JsonParser | null, var1: org_hl7_fhir_r5_model_ValueSet | null): string | null;
    /**
     * @return original return type: 'int'
     */
    getRequestCount(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getRequestCountSync(): number;
    /**
     * @return original return type: 'int'
     */
    getHitCount(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getHitCountSync(): number;
    /**
     * @return original return type: 'int'
     */
    getNetworkCount(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getNetworkCountSync(): number;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.model.ValueSet'
     * @param var1 original type: 'org.hl7.fhir.r5.context.TerminologyCache$CacheToken'
     * @return original return type: 'void'
     */
    nameCacheToken(var0: org_hl7_fhir_r5_model_ValueSet | null, var1: org_hl7_fhir_r5_context_TerminologyCache$CacheToken | null): Promise<void>;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.model.ValueSet'
     * @param var1 original type: 'org.hl7.fhir.r5.context.TerminologyCache$CacheToken'
     * @return original return type: 'void'
     */
    nameCacheTokenSync(var0: org_hl7_fhir_r5_model_ValueSet | null, var1: org_hl7_fhir_r5_context_TerminologyCache$CacheToken | null): void;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.context.TerminologyCache$CacheToken'
     * @param var1 original type: 'org.hl7.fhir.r5.terminologies.expansion.ValueSetExpansionOutcome'
     * @param var2 original type: 'boolean'
     * @return original return type: 'void'
     */
    cacheExpansion(var0: org_hl7_fhir_r5_context_TerminologyCache$CacheToken | null, var1: org_hl7_fhir_r5_terminologies_expansion_ValueSetExpansionOutcome | null, var2: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.context.TerminologyCache$CacheToken'
     * @param var1 original type: 'org.hl7.fhir.r5.terminologies.expansion.ValueSetExpansionOutcome'
     * @param var2 original type: 'boolean'
     * @return original return type: 'void'
     */
    cacheExpansionSync(var0: org_hl7_fhir_r5_context_TerminologyCache$CacheToken | null, var1: org_hl7_fhir_r5_terminologies_expansion_ValueSetExpansionOutcome | null, var2: java_lang_Boolean | boolean): void;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    removeCS(var0: string | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    removeCSSync(var0: string | null): void;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.context.TerminologyCache$CacheToken'
     * @param var1 original type: 'org.hl7.fhir.r5.context.IWorkerContext$ValidationResult'
     * @param var2 original type: 'boolean'
     * @return original return type: 'void'
     */
    cacheValidation(var0: org_hl7_fhir_r5_context_TerminologyCache$CacheToken | null, var1: org_hl7_fhir_r5_context_IWorkerContext$ValidationResult | null, var2: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.context.TerminologyCache$CacheToken'
     * @param var1 original type: 'org.hl7.fhir.r5.context.IWorkerContext$ValidationResult'
     * @param var2 original type: 'boolean'
     * @return original return type: 'void'
     */
    cacheValidationSync(var0: org_hl7_fhir_r5_context_TerminologyCache$CacheToken | null, var1: org_hl7_fhir_r5_context_IWorkerContext$ValidationResult | null, var2: java_lang_Boolean | boolean): void;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.context.TerminologyCache$CacheToken'
     * @return original return type: 'org.hl7.fhir.r5.context.IWorkerContext$ValidationResult'
     */
    getValidation(var0: org_hl7_fhir_r5_context_TerminologyCache$CacheToken | null): Promise<org_hl7_fhir_r5_context_IWorkerContext$ValidationResult | null>;
    /**
     * @param var0 original type: 'org.hl7.fhir.r5.context.TerminologyCache$CacheToken'
     * @return original return type: 'org.hl7.fhir.r5.context.IWorkerContext$ValidationResult'
     */
    getValidationSync(var0: org_hl7_fhir_r5_context_TerminologyCache$CacheToken | null): org_hl7_fhir_r5_context_IWorkerContext$ValidationResult | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.r5.context.TerminologyCache'
     */
    static newInstanceAsync(var0: BasicOrJavaType | null, var1: string | null): Promise<TerminologyCache>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.String'
     */
    constructor(var0: BasicOrJavaType | null, var1: string | null);
}
declare const TerminologyCache_base: typeof TerminologyCacheClass;
/**
 * Class org.hl7.fhir.r5.context.TerminologyCache.
 *
 * This actually imports the java class for further use.
 * The class {@link TerminologyCacheClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class TerminologyCache extends TerminologyCache_base {
}
export default TerminologyCache;
//# sourceMappingURL=TerminologyCache.d.ts.map