import { JavaClass, InterfaceProxyOptions, JavaInterfaceProxy } from "java-bridge";
import { Resource as org_hl7_fhir_r5_model_Resource } from "./../../model/Resource";
import { BaseWrappers$BaseWrapper as org_hl7_fhir_r5_renderers_utils_BaseWrappers$BaseWrapper } from "./BaseWrappers$BaseWrapper";
import { StructureDefinition as org_hl7_fhir_r5_model_StructureDefinition } from "./../../model/StructureDefinition";
import { Base as org_hl7_fhir_r5_model_Base } from "./../../model/Base";
import { List as java_util_List } from "./../../../../../../java/util/List";
import { BaseWrappers$PropertyWrapper as org_hl7_fhir_r5_renderers_utils_BaseWrappers$PropertyWrapper } from "./BaseWrappers$PropertyWrapper";
import { XhtmlNode as org_hl7_fhir_utilities_xhtml_XhtmlNode } from "./../../../utilities/xhtml/XhtmlNode";
import { Narrative$NarrativeStatus as org_hl7_fhir_r5_model_Narrative$NarrativeStatus } from "./../../model/Narrative$NarrativeStatus";
import { RenderingContext as org_hl7_fhir_r5_renderers_utils_RenderingContext } from "./RenderingContext";
/**
 * This class just defines types, you should import {@link BaseWrappers$ResourceWrapper} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class BaseWrappers$ResourceWrapperClass extends JavaClass {
    /**
     * @return original return type: 'java.lang.String'
     */
    getName(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getNameSync(): string | null;
    /**
     * @return original return type: 'org.hl7.fhir.r5.model.Resource'
     */
    getResource(): Promise<org_hl7_fhir_r5_model_Resource | null>;
    /**
     * @return original return type: 'org.hl7.fhir.r5.model.Resource'
     */
    getResourceSync(): org_hl7_fhir_r5_model_Resource | null;
    /**
     * @return original return type: 'org.hl7.fhir.r5.renderers.utils.BaseWrappers$BaseWrapper'
     */
    root(): Promise<org_hl7_fhir_r5_renderers_utils_BaseWrappers$BaseWrapper | null>;
    /**
     * @return original return type: 'org.hl7.fhir.r5.renderers.utils.BaseWrappers$BaseWrapper'
     */
    rootSync(): org_hl7_fhir_r5_renderers_utils_BaseWrappers$BaseWrapper | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getId(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getIdSync(): string | null;
    /**
     * @return original return type: 'org.hl7.fhir.r5.model.StructureDefinition'
     */
    getDefinition(): Promise<org_hl7_fhir_r5_model_StructureDefinition | null>;
    /**
     * @return original return type: 'org.hl7.fhir.r5.model.StructureDefinition'
     */
    getDefinitionSync(): org_hl7_fhir_r5_model_StructureDefinition | null;
    /**
     * @return original return type: 'org.hl7.fhir.r5.model.Base'
     */
    getBase(): Promise<org_hl7_fhir_r5_model_Base | null>;
    /**
     * @return original return type: 'org.hl7.fhir.r5.model.Base'
     */
    getBaseSync(): org_hl7_fhir_r5_model_Base | null;
    /**
     * @return original return type: 'java.util.List'
     */
    getContained(): Promise<java_util_List | null>;
    /**
     * @return original return type: 'java.util.List'
     */
    getContainedSync(): java_util_List | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.r5.renderers.utils.BaseWrappers$PropertyWrapper'
     */
    getChildByName(var0: string | null): Promise<org_hl7_fhir_r5_renderers_utils_BaseWrappers$PropertyWrapper | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.r5.renderers.utils.BaseWrappers$PropertyWrapper'
     */
    getChildByNameSync(var0: string | null): org_hl7_fhir_r5_renderers_utils_BaseWrappers$PropertyWrapper | null;
    /**
     * @return original return type: 'boolean'
     */
    hasNarrative(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    hasNarrativeSync(): boolean;
    /**
     * @return original return type: 'org.hl7.fhir.utilities.xhtml.XhtmlNode'
     */
    getNarrative(): Promise<org_hl7_fhir_utilities_xhtml_XhtmlNode | null>;
    /**
     * @return original return type: 'org.hl7.fhir.utilities.xhtml.XhtmlNode'
     */
    getNarrativeSync(): org_hl7_fhir_utilities_xhtml_XhtmlNode | null;
    /**
     * @param var0 original type: 'org.hl7.fhir.utilities.xhtml.XhtmlNode'
     * @return original return type: 'void'
     */
    describe(var0: org_hl7_fhir_utilities_xhtml_XhtmlNode | null): Promise<void>;
    /**
     * @param var0 original type: 'org.hl7.fhir.utilities.xhtml.XhtmlNode'
     * @return original return type: 'void'
     */
    describeSync(var0: org_hl7_fhir_utilities_xhtml_XhtmlNode | null): void;
    /**
     * @param var0 original type: 'org.hl7.fhir.utilities.xhtml.XhtmlNode'
     * @param var1 original type: 'org.hl7.fhir.r5.model.Narrative$NarrativeStatus'
     * @return original return type: 'void'
     */
    injectNarrative(var0: org_hl7_fhir_utilities_xhtml_XhtmlNode | null, var1: org_hl7_fhir_r5_model_Narrative$NarrativeStatus | null): Promise<void>;
    /**
     * @param var0 original type: 'org.hl7.fhir.utilities.xhtml.XhtmlNode'
     * @param var1 original type: 'org.hl7.fhir.r5.model.Narrative$NarrativeStatus'
     * @return original return type: 'void'
     */
    injectNarrativeSync(var0: org_hl7_fhir_utilities_xhtml_XhtmlNode | null, var1: org_hl7_fhir_r5_model_Narrative$NarrativeStatus | null): void;
    /**
     * @return original return type: 'java.lang.String'
     */
    getNameFromResource(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getNameFromResourceSync(): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.r5.model.Base'
     */
    get(var0: string | null): Promise<org_hl7_fhir_r5_model_Base | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.r5.model.Base'
     */
    getSync(var0: string | null): org_hl7_fhir_r5_model_Base | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    has(var0: string | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    hasSync(var0: string | null): boolean;
    /**
     * @return original return type: 'java.util.List'
     */
    children(): Promise<java_util_List | null>;
    /**
     * @return original return type: 'java.util.List'
     */
    childrenSync(): java_util_List | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.util.List'
     */
    children(var0: string | null): Promise<java_util_List | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.util.List'
     */
    childrenSync(var0: string | null): java_util_List | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    fhirType(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    fhirTypeSync(): string | null;
    /**
     * @return original return type: 'org.hl7.fhir.r5.renderers.utils.RenderingContext'
     */
    getContext(): Promise<org_hl7_fhir_r5_renderers_utils_RenderingContext | null>;
    /**
     * @return original return type: 'org.hl7.fhir.r5.renderers.utils.RenderingContext'
     */
    getContextSync(): org_hl7_fhir_r5_renderers_utils_RenderingContext | null;
}
/**
 * This interface just defines types for creating proxies,
 * you should use {@link createBaseWrappers$ResourceWrapperProxy} for actually creating the proxies.
 *
 * Optional methods in here may still be required by java.
 * This is caused by typescript not allowing to have both optional and
 * non-optional signatures for the same interface member.
 *
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export interface BaseWrappers$ResourceWrapperInterface {
    /**
     * @return original return type: 'java.lang.String'
     */
    getName(): string | null;
    /**
     * @return original return type: 'org.hl7.fhir.r5.model.Resource'
     */
    getResource(): org_hl7_fhir_r5_model_Resource | null;
    /**
     * @return original return type: 'org.hl7.fhir.r5.renderers.utils.BaseWrappers$BaseWrapper'
     */
    root(): org_hl7_fhir_r5_renderers_utils_BaseWrappers$BaseWrapper | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getId(): string | null;
    /**
     * @return original return type: 'org.hl7.fhir.r5.model.StructureDefinition'
     */
    getDefinition(): org_hl7_fhir_r5_model_StructureDefinition | null;
    /**
     * @return original return type: 'org.hl7.fhir.r5.model.Base'
     */
    getBase(): org_hl7_fhir_r5_model_Base | null;
    /**
     * @return original return type: 'java.util.List'
     */
    getContained(): java_util_List | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.r5.renderers.utils.BaseWrappers$PropertyWrapper'
     */
    getChildByName(var0: string | null): org_hl7_fhir_r5_renderers_utils_BaseWrappers$PropertyWrapper | null;
    /**
     * @return original return type: 'boolean'
     */
    hasNarrative(): boolean;
    /**
     * @return original return type: 'org.hl7.fhir.utilities.xhtml.XhtmlNode'
     */
    getNarrative(): org_hl7_fhir_utilities_xhtml_XhtmlNode | null;
    /**
     * @param var0 original type: 'org.hl7.fhir.utilities.xhtml.XhtmlNode'
     * @return original return type: 'void'
     */
    describe(var0: org_hl7_fhir_utilities_xhtml_XhtmlNode | null): void;
    /**
     * @param var0 original type: 'org.hl7.fhir.utilities.xhtml.XhtmlNode'
     * @param var1 original type: 'org.hl7.fhir.r5.model.Narrative$NarrativeStatus'
     * @return original return type: 'void'
     */
    injectNarrative(var0: org_hl7_fhir_utilities_xhtml_XhtmlNode | null, var1: org_hl7_fhir_r5_model_Narrative$NarrativeStatus | null): void;
    /**
     * @return original return type: 'java.lang.String'
     */
    getNameFromResource(): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.r5.model.Base'
     */
    get(var0: string | null): org_hl7_fhir_r5_model_Base | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    has(var0: string | null): boolean;
    /**
     * @return original return type: 'java.util.List'
     */
    children(): java_util_List | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.util.List'
     */
    children(var0: string | null): java_util_List | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    fhirType(): string | null;
    /**
     * @return original return type: 'org.hl7.fhir.r5.renderers.utils.RenderingContext'
     */
    getContext(): org_hl7_fhir_r5_renderers_utils_RenderingContext | null;
}
/**
 * Create a proxy for the {@link BaseWrappers$ResourceWrapper} interface.
 * All required methods in {@link BaseWrappers$ResourceWrapperInterface} must be implemented.
 *
 * @param methods the methods to implement
 * @param opts the proxy options
 * @return the proxy
 */
export declare function createBaseWrappers$ResourceWrapperProxy(methods: BaseWrappers$ResourceWrapperInterface, opts?: InterfaceProxyOptions): JavaInterfaceProxy<BaseWrappers$ResourceWrapperInterface>;
declare const BaseWrappers$ResourceWrapper_base: typeof BaseWrappers$ResourceWrapperClass;
/**
 * Class org.hl7.fhir.r5.renderers.utils.BaseWrappers$ResourceWrapper.
 *
 * This actually imports the java class for further use.
 * The class {@link BaseWrappers$ResourceWrapperClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class BaseWrappers$ResourceWrapper extends BaseWrappers$ResourceWrapper_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default BaseWrappers$ResourceWrapper;
//# sourceMappingURL=BaseWrappers$ResourceWrapper.d.ts.map