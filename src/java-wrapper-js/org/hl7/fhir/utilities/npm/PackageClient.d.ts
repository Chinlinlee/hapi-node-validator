import { JavaClass, BasicOrJavaType, JavaInterfaceProxy } from "java-bridge";
import { List as java_util_List, ListInterface as java_util_ListInterface } from "./../../../../../java/util/List";
import { Boolean as java_lang_Boolean } from "./../../../../../java/lang/Boolean";
import { InputStream as java_io_InputStream } from "./../../../../../java/io/InputStream";
import { PackageInfo as org_hl7_fhir_utilities_npm_PackageInfo } from "./PackageInfo";
import { Date as java_util_Date } from "./../../../../../java/util/Date";
import { Set as java_util_Set, SetInterface as java_util_SetInterface } from "./../../../../../java/util/Set";
import { Long as java_lang_Long } from "./../../../../../java/lang/Long";
import { Integer as java_lang_Integer } from "./../../../../../java/lang/Integer";
import { Class as java_lang_Class } from "./../../../../../java/lang/Class";
import { PackageServer as org_hl7_fhir_utilities_npm_PackageServer } from "./PackageServer";
/**
 * This class just defines types, you should import {@link PackageClient} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class PackageClientClass extends JavaClass {
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    url(var0: string | null, var1: string | null): Promise<string | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    urlSync(var0: string | null, var1: string | null): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'boolean'
     * @return original return type: 'java.util.List'
     */
    search(var0: string | null, var1: string | null, var2: string | null, var3: java_lang_Boolean | boolean): Promise<java_util_List | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'boolean'
     * @return original return type: 'java.util.List'
     */
    searchSync(var0: string | null, var1: string | null, var2: string | null, var3: java_lang_Boolean | boolean): java_util_List | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    exists(var0: string | null, var1: string | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    existsSync(var0: string | null, var1: string | null): boolean;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    getLatestVersion(var0: string | null, var1: string | null): Promise<string | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    getLatestVersionSync(var0: string | null, var1: string | null): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    getLatestVersion(var0: string | null): Promise<string | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    getLatestVersionSync(var0: string | null): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.io.InputStream'
     */
    fetch(var0: string | null, var1: string | null): Promise<java_io_InputStream | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.io.InputStream'
     */
    fetchSync(var0: string | null, var1: string | null): java_io_InputStream | null;
    /**
     * @param var0 original type: 'org.hl7.fhir.utilities.npm.PackageInfo'
     * @return original return type: 'java.io.InputStream'
     */
    fetch(var0: org_hl7_fhir_utilities_npm_PackageInfo | null): Promise<java_io_InputStream | null>;
    /**
     * @param var0 original type: 'org.hl7.fhir.utilities.npm.PackageInfo'
     * @return original return type: 'java.io.InputStream'
     */
    fetchSync(var0: org_hl7_fhir_utilities_npm_PackageInfo | null): java_io_InputStream | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.io.InputStream'
     */
    fetchCached(var0: string | null): Promise<java_io_InputStream | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.io.InputStream'
     */
    fetchCachedSync(var0: string | null): java_io_InputStream | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.util.List'
     */
    getVersions(var0: string | null): Promise<java_util_List | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.util.List'
     */
    getVersionsSync(var0: string | null): java_util_List | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.io.InputStream'
     */
    fetchNpm(var0: string | null, var1: string | null): Promise<java_io_InputStream | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.io.InputStream'
     */
    fetchNpmSync(var0: string | null, var1: string | null): java_io_InputStream | null;
    /**
     * @param var0 original type: 'java.util.Date'
     * @param var1 original type: 'java.util.List'
     * @return original return type: 'java.util.Date'
     */
    getNewPackages(var0: java_util_Date | null, var1: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null): Promise<java_util_Date | null>;
    /**
     * @param var0 original type: 'java.util.Date'
     * @param var1 original type: 'java.util.List'
     * @return original return type: 'java.util.Date'
     */
    getNewPackagesSync(var0: java_util_Date | null, var1: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null): java_util_Date | null;
    /**
     * @param var0 original type: 'java.util.Set'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    findDependents(var0: java_util_Set | JavaInterfaceProxy<java_util_SetInterface> | null, var1: string | null): Promise<void>;
    /**
     * @param var0 original type: 'java.util.Set'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    findDependentsSync(var0: java_util_Set | JavaInterfaceProxy<java_util_SetInterface> | null, var1: string | null): void;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'java.util.List'
     */
    listFromRegistry(var0: string | null, var1: string | null, var2: string | null): Promise<java_util_List | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'java.util.List'
     */
    listFromRegistrySync(var0: string | null, var1: string | null, var2: string | null): java_util_List | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @param var0 original type: 'org.hl7.fhir.utilities.npm.PackageServer'
     * @return original return type: 'org.hl7.fhir.utilities.npm.PackageClient'
     */
    static newInstanceAsync(var0: org_hl7_fhir_utilities_npm_PackageServer | null): Promise<PackageClient>;
    /**
     * @param var0 original type: 'org.hl7.fhir.utilities.npm.PackageServer'
     */
    constructor(var0: org_hl7_fhir_utilities_npm_PackageServer | null);
}
declare const PackageClient_base: typeof PackageClientClass;
/**
 * Class org.hl7.fhir.utilities.npm.PackageClient.
 *
 * This actually imports the java class for further use.
 * The class {@link PackageClientClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class PackageClient extends PackageClient_base {
}
export default PackageClient;
//# sourceMappingURL=PackageClient.d.ts.map