import { JavaClass, BasicOrJavaType } from "java-bridge";
import { Boolean as java_lang_Boolean } from "./../../../../../java/lang/Boolean";
import { ValidationOptions$ValueSetMode as org_hl7_fhir_utilities_validation_ValidationOptions$ValueSetMode } from "./ValidationOptions$ValueSetMode";
import { Set as java_util_Set } from "./../../../../../java/util/Set";
import { Long as java_lang_Long } from "./../../../../../java/lang/Long";
import { Integer as java_lang_Integer } from "./../../../../../java/lang/Integer";
import { Class as java_lang_Class } from "./../../../../../java/lang/Class";
/**
 * This class just defines types, you should import {@link ValidationOptions} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ValidationOptionsClass extends JavaClass {
    /**
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    static defaults(): Promise<ValidationOptions | null>;
    /**
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    static defaultsSync(): ValidationOptions | null;
    /**
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    copy(): Promise<ValidationOptions | null>;
    /**
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    copySync(): ValidationOptions | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    addLanguage(var0: string | null): Promise<ValidationOptions | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    addLanguageSync(var0: string | null): ValidationOptions | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    toJson(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toJsonSync(): string | null;
    /**
     * @return original return type: 'boolean'
     */
    isGuessSystem(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isGuessSystemSync(): boolean;
    /**
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    withNoClient(): Promise<ValidationOptions | null>;
    /**
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    withNoClientSync(): ValidationOptions | null;
    /**
     * @return original return type: 'boolean'
     */
    isUseServer(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isUseServerSync(): boolean;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    withEnglishOk(var0: java_lang_Boolean | boolean): Promise<ValidationOptions | null>;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    withEnglishOkSync(var0: java_lang_Boolean | boolean): ValidationOptions | null;
    /**
     * @return original return type: 'boolean'
     */
    hasLanguages(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    hasLanguagesSync(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    isEnglishOk(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isEnglishOkSync(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    isVersionFlexible(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isVersionFlexibleSync(): boolean;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    setGuessSystem(var0: java_lang_Boolean | boolean): Promise<ValidationOptions | null>;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    setGuessSystemSync(var0: java_lang_Boolean | boolean): ValidationOptions | null;
    /**
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    withNoServer(): Promise<ValidationOptions | null>;
    /**
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    withNoServerSync(): ValidationOptions | null;
    /**
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions$ValueSetMode'
     */
    getValueSetMode(): Promise<org_hl7_fhir_utilities_validation_ValidationOptions$ValueSetMode | null>;
    /**
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions$ValueSetMode'
     */
    getValueSetModeSync(): org_hl7_fhir_utilities_validation_ValidationOptions$ValueSetMode | null;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    setNoServer(var0: java_lang_Boolean | boolean): Promise<ValidationOptions | null>;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    setNoServerSync(var0: java_lang_Boolean | boolean): ValidationOptions | null;
    /**
     * @return original return type: 'java.util.Set'
     */
    getLanguages(): Promise<java_util_Set | null>;
    /**
     * @return original return type: 'java.util.Set'
     */
    getLanguagesSync(): java_util_Set | null;
    /**
     * @return original return type: 'boolean'
     */
    getVsAsUrl(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    getVsAsUrlSync(): boolean;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    setVsAsUrl(var0: java_lang_Boolean | boolean): Promise<ValidationOptions | null>;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    setVsAsUrlSync(var0: java_lang_Boolean | boolean): ValidationOptions | null;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    setVersionFlexible(var0: java_lang_Boolean | boolean): Promise<ValidationOptions | null>;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    setVersionFlexibleSync(var0: java_lang_Boolean | boolean): ValidationOptions | null;
    /**
     * @return original return type: 'boolean'
     */
    isUseClient(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isUseClientSync(): boolean;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    withLanguage(var0: string | null): Promise<ValidationOptions | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    withLanguageSync(var0: string | null): ValidationOptions | null;
    /**
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    withVsAsUrl(): Promise<ValidationOptions | null>;
    /**
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    withVsAsUrlSync(): ValidationOptions | null;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    setNoClient(var0: java_lang_Boolean | boolean): Promise<ValidationOptions | null>;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    setNoClientSync(var0: java_lang_Boolean | boolean): ValidationOptions | null;
    /**
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    withGuessSystem(): Promise<ValidationOptions | null>;
    /**
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    withGuessSystemSync(): ValidationOptions | null;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    setEnglishOk(var0: java_lang_Boolean | boolean): Promise<ValidationOptions | null>;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    setEnglishOkSync(var0: java_lang_Boolean | boolean): ValidationOptions | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    langSummary(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    langSummarySync(): string | null;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    setDisplayWarningMode(var0: java_lang_Boolean | boolean): Promise<ValidationOptions | null>;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    setDisplayWarningModeSync(var0: java_lang_Boolean | boolean): ValidationOptions | null;
    /**
     * @return original return type: 'boolean'
     */
    isUseValueSetDisplays(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isUseValueSetDisplaysSync(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    isDisplayWarningMode(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isDisplayWarningModeSync(): boolean;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    withVersionFlexible(var0: java_lang_Boolean | boolean): Promise<ValidationOptions | null>;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    withVersionFlexibleSync(var0: java_lang_Boolean | boolean): ValidationOptions | null;
    /**
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    withCheckValueSetOnly(): Promise<ValidationOptions | null>;
    /**
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    withCheckValueSetOnlySync(): ValidationOptions | null;
    /**
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    setCheckValueSetOnly(): Promise<ValidationOptions | null>;
    /**
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    setCheckValueSetOnlySync(): ValidationOptions | null;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    withUseValueSetDisplays(var0: java_lang_Boolean | boolean): Promise<ValidationOptions | null>;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    withUseValueSetDisplaysSync(var0: java_lang_Boolean | boolean): ValidationOptions | null;
    /**
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    setNoCheckValueSetMembership(): Promise<ValidationOptions | null>;
    /**
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    setNoCheckValueSetMembershipSync(): ValidationOptions | null;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    setUseValueSetDisplays(var0: java_lang_Boolean | boolean): Promise<ValidationOptions | null>;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    setUseValueSetDisplaysSync(var0: java_lang_Boolean | boolean): ValidationOptions | null;
    /**
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    withNoCheckValueSetMembership(): Promise<ValidationOptions | null>;
    /**
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    withNoCheckValueSetMembershipSync(): ValidationOptions | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @param var0 original type: 'java.lang.String[]'
     * @return original return type: 'org.hl7.fhir.utilities.validation.ValidationOptions'
     */
    static newInstanceAsync(var0: (string | null)[] | null): Promise<ValidationOptions>;
    /**
     * @param var0 original type: 'java.lang.String[]'
     */
    constructor(var0: (string | null)[] | null);
}
declare const ValidationOptions_base: typeof ValidationOptionsClass;
/**
 * Class org.hl7.fhir.utilities.validation.ValidationOptions.
 *
 * This actually imports the java class for further use.
 * The class {@link ValidationOptionsClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ValidationOptions extends ValidationOptions_base {
}
export default ValidationOptions;
//# sourceMappingURL=ValidationOptions.d.ts.map