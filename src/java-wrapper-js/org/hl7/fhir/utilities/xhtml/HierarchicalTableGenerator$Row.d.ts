import { JavaClass, BasicOrJavaType } from "java-bridge";
import { Integer as java_lang_Integer } from "./../../../../../java/lang/Integer";
import { List as java_util_List } from "./../../../../../java/util/List";
import { Long as java_lang_Long } from "./../../../../../java/lang/Long";
import { Class as java_lang_Class } from "./../../../../../java/lang/Class";
import { HierarchicalTableGenerator as org_hl7_fhir_utilities_xhtml_HierarchicalTableGenerator } from "./HierarchicalTableGenerator";
/**
 * This class just defines types, you should import {@link HierarchicalTableGenerator$Row} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class HierarchicalTableGenerator$RowClass extends JavaClass {
    /**
     * @return original return type: 'java.lang.String'
     */
    getId(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getIdSync(): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setColor(var0: string | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setColorSync(var0: string | null): void;
    /**
     * @return original return type: 'java.lang.String'
     */
    getHint(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getHintSync(): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setAnchor(var0: string | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setAnchorSync(var0: string | null): void;
    /**
     * @return original return type: 'java.lang.String'
     */
    getAnchor(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getAnchorSync(): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setId(var0: string | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setIdSync(var0: string | null): void;
    /**
     * @return original return type: 'java.lang.String'
     */
    getColor(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getColorSync(): string | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getIcon(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getIconSync(): string | null;
    /**
     * @return original return type: 'int'
     */
    getLineColor(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getLineColorSync(): number;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'void'
     */
    setLineColor(var0: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'void'
     */
    setLineColorSync(var0: java_lang_Integer | number): void;
    /**
     * @return original return type: 'java.lang.String'
     */
    getOpacity(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getOpacitySync(): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setOpacity(var0: string | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setOpacitySync(var0: string | null): void;
    /**
     * @return original return type: 'java.util.List'
     */
    getCells(): Promise<java_util_List | null>;
    /**
     * @return original return type: 'java.util.List'
     */
    getCellsSync(): java_util_List | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setIcon(var0: string | null, var1: string | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setIconSync(var0: string | null, var1: string | null): void;
    /**
     * @return original return type: 'java.util.List'
     */
    getSubRows(): Promise<java_util_List | null>;
    /**
     * @return original return type: 'java.util.List'
     */
    getSubRowsSync(): java_util_List | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @param var0 original type: 'org.hl7.fhir.utilities.xhtml.HierarchicalTableGenerator'
     * @return original return type: 'org.hl7.fhir.utilities.xhtml.HierarchicalTableGenerator$Row'
     */
    static newInstanceAsync(var0: org_hl7_fhir_utilities_xhtml_HierarchicalTableGenerator | null): Promise<HierarchicalTableGenerator$Row>;
    /**
     * @param var0 original type: 'org.hl7.fhir.utilities.xhtml.HierarchicalTableGenerator'
     */
    constructor(var0: org_hl7_fhir_utilities_xhtml_HierarchicalTableGenerator | null);
}
declare const HierarchicalTableGenerator$Row_base: typeof HierarchicalTableGenerator$RowClass;
/**
 * Class org.hl7.fhir.utilities.xhtml.HierarchicalTableGenerator$Row.
 *
 * This actually imports the java class for further use.
 * The class {@link HierarchicalTableGenerator$RowClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class HierarchicalTableGenerator$Row extends HierarchicalTableGenerator$Row_base {
}
export default HierarchicalTableGenerator$Row;
//# sourceMappingURL=HierarchicalTableGenerator$Row.d.ts.map