import { JavaClass, BasicOrJavaType, InterfaceProxyOptions, JavaInterfaceProxy } from "java-bridge";
import { IPrimitiveType as org_hl7_fhir_instance_model_api_IPrimitiveType } from "./IPrimitiveType";
import { IBaseResource as org_hl7_fhir_instance_model_api_IBaseResource, IBaseResourceInterface as org_hl7_fhir_instance_model_api_IBaseResourceInterface } from "./IBaseResource";
import { List as java_util_List } from "./../../../../../../java/util/List";
/**
 * This class just defines types, you should import {@link IIdType} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class IIdTypeClass extends JavaClass {
    /**
     * @return original return type: 'java.lang.String'
     */
    getValue(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getValueSync(): string | null;
    /**
     * @return original return type: 'java.lang.Object'
     */
    getValue(): Promise<BasicOrJavaType | null>;
    /**
     * @return original return type: 'java.lang.Object'
     */
    getValueSync(): BasicOrJavaType | null;
    /**
     * @return original return type: 'boolean'
     */
    isEmpty(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isEmptySync(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    isAbsolute(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isAbsoluteSync(): boolean;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.instance.model.api.IIdType'
     */
    setValue(var0: string | null): Promise<IIdType | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.instance.model.api.IIdType'
     */
    setValueSync(var0: string | null): IIdType | null;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'org.hl7.fhir.instance.model.api.IPrimitiveType'
     */
    setValue(var0: BasicOrJavaType | null): Promise<org_hl7_fhir_instance_model_api_IPrimitiveType | null>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'org.hl7.fhir.instance.model.api.IPrimitiveType'
     */
    setValueSync(var0: BasicOrJavaType | null): org_hl7_fhir_instance_model_api_IPrimitiveType | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getIdPart(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getIdPartSync(): string | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getResourceType(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getResourceTypeSync(): string | null;
    /**
     * @return original return type: 'java.lang.Long'
     */
    getVersionIdPartAsLong(): Promise<number | null>;
    /**
     * @return original return type: 'java.lang.Long'
     */
    getVersionIdPartAsLongSync(): number | null;
    /**
     * @return original return type: 'boolean'
     */
    isVersionIdPartValidLong(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isVersionIdPartValidLongSync(): boolean;
    /**
     * @return original return type: 'org.hl7.fhir.instance.model.api.IIdType'
     */
    toUnqualifiedVersionless(): Promise<IIdType | null>;
    /**
     * @return original return type: 'org.hl7.fhir.instance.model.api.IIdType'
     */
    toUnqualifiedVersionlessSync(): IIdType | null;
    /**
     * @return original return type: 'java.lang.Long'
     */
    getIdPartAsLong(): Promise<number | null>;
    /**
     * @return original return type: 'java.lang.Long'
     */
    getIdPartAsLongSync(): number | null;
    /**
     * @param var0 original type: 'org.hl7.fhir.instance.model.api.IBaseResource'
     * @return original return type: 'void'
     */
    applyTo(var0: org_hl7_fhir_instance_model_api_IBaseResource | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IBaseResourceInterface> | null): Promise<void>;
    /**
     * @param var0 original type: 'org.hl7.fhir.instance.model.api.IBaseResource'
     * @return original return type: 'void'
     */
    applyToSync(var0: org_hl7_fhir_instance_model_api_IBaseResource | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IBaseResourceInterface> | null): void;
    /**
     * @return original return type: 'java.lang.String'
     */
    getBaseUrl(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getBaseUrlSync(): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.instance.model.api.IIdType'
     */
    withServerBase(var0: string | null, var1: string | null): Promise<IIdType | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.instance.model.api.IIdType'
     */
    withServerBaseSync(var0: string | null, var1: string | null): IIdType | null;
    /**
     * @return original return type: 'boolean'
     */
    hasResourceType(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    hasResourceTypeSync(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    hasIdPart(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    hasIdPartSync(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    hasVersionIdPart(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    hasVersionIdPartSync(): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    getVersionIdPart(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getVersionIdPartSync(): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.instance.model.api.IIdType'
     */
    withResourceType(var0: string | null): Promise<IIdType | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.instance.model.api.IIdType'
     */
    withResourceTypeSync(var0: string | null): IIdType | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.instance.model.api.IIdType'
     */
    withVersion(var0: string | null): Promise<IIdType | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.instance.model.api.IIdType'
     */
    withVersionSync(var0: string | null): IIdType | null;
    /**
     * @return original return type: 'boolean'
     */
    hasBaseUrl(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    hasBaseUrlSync(): boolean;
    /**
     * @return original return type: 'org.hl7.fhir.instance.model.api.IIdType'
     */
    toUnqualified(): Promise<IIdType | null>;
    /**
     * @return original return type: 'org.hl7.fhir.instance.model.api.IIdType'
     */
    toUnqualifiedSync(): IIdType | null;
    /**
     * @return original return type: 'boolean'
     */
    isIdPartValidLong(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isIdPartValidLongSync(): boolean;
    /**
     * @return original return type: 'org.hl7.fhir.instance.model.api.IIdType'
     */
    toVersionless(): Promise<IIdType | null>;
    /**
     * @return original return type: 'org.hl7.fhir.instance.model.api.IIdType'
     */
    toVersionlessSync(): IIdType | null;
    /**
     * @return original return type: 'boolean'
     */
    isLocal(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isLocalSync(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    isIdPartValid(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isIdPartValidSync(): boolean;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.instance.model.api.IIdType'
     */
    setParts(var0: string | null, var1: string | null, var2: string | null, var3: string | null): Promise<IIdType | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.instance.model.api.IIdType'
     */
    setPartsSync(var0: string | null, var1: string | null, var2: string | null, var3: string | null): IIdType | null;
    /**
     * @return original return type: 'boolean'
     */
    hasValue(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    hasValueSync(): boolean;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setValueAsString(var0: string | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setValueAsStringSync(var0: string | null): void;
    /**
     * @return original return type: 'java.lang.String'
     */
    getValueAsString(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getValueAsStringSync(): string | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    fhirType(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    fhirTypeSync(): string | null;
    /**
     * @return original return type: 'java.util.List'
     */
    getFormatCommentsPost(): Promise<java_util_List | null>;
    /**
     * @return original return type: 'java.util.List'
     */
    getFormatCommentsPostSync(): java_util_List | null;
    /**
     * @return original return type: 'java.util.List'
     */
    getFormatCommentsPre(): Promise<java_util_List | null>;
    /**
     * @return original return type: 'java.util.List'
     */
    getFormatCommentsPreSync(): java_util_List | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.Object'
     * @return original return type: 'void'
     */
    setUserData(var0: string | null, var1: BasicOrJavaType | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.Object'
     * @return original return type: 'void'
     */
    setUserDataSync(var0: string | null, var1: BasicOrJavaType | null): void;
    /**
     * @return original return type: 'boolean'
     */
    hasFormatComment(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    hasFormatCommentSync(): boolean;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Object'
     */
    getUserData(var0: string | null): Promise<BasicOrJavaType | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Object'
     */
    getUserDataSync(var0: string | null): BasicOrJavaType | null;
}
/**
 * This interface just defines types for creating proxies,
 * you should use {@link createIIdTypeProxy} for actually creating the proxies.
 *
 * Optional methods in here may still be required by java.
 * This is caused by typescript not allowing to have both optional and
 * non-optional signatures for the same interface member.
 *
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export interface IIdTypeInterface {
    /**
     * **Note: Although this method is marked as optional, it actually must be implemented.**
     *
     * @return original return type: 'java.lang.String'
     */
    getValue?(): string | null;
    /**
     * @return original return type: 'java.lang.Object'
     */
    getValue?(): BasicOrJavaType | null;
    /**
     * @return original return type: 'boolean'
     */
    isEmpty(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    isAbsolute(): boolean;
    /**
     * **Note: Although this method is marked as optional, it actually must be implemented.**
     *
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.instance.model.api.IIdType'
     */
    setValue?(var0: string | null): IIdType | null;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'org.hl7.fhir.instance.model.api.IPrimitiveType'
     */
    setValue?(var0: BasicOrJavaType | null): org_hl7_fhir_instance_model_api_IPrimitiveType | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getIdPart(): string | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getResourceType(): string | null;
    /**
     * @return original return type: 'java.lang.Long'
     */
    getVersionIdPartAsLong(): number | null;
    /**
     * @return original return type: 'boolean'
     */
    isVersionIdPartValidLong(): boolean;
    /**
     * @return original return type: 'org.hl7.fhir.instance.model.api.IIdType'
     */
    toUnqualifiedVersionless(): IIdType | null;
    /**
     * @return original return type: 'java.lang.Long'
     */
    getIdPartAsLong(): number | null;
    /**
     * @param var0 original type: 'org.hl7.fhir.instance.model.api.IBaseResource'
     * @return original return type: 'void'
     */
    applyTo(var0: org_hl7_fhir_instance_model_api_IBaseResource | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IBaseResourceInterface> | null): void;
    /**
     * @return original return type: 'java.lang.String'
     */
    getBaseUrl(): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.instance.model.api.IIdType'
     */
    withServerBase(var0: string | null, var1: string | null): IIdType | null;
    /**
     * @return original return type: 'boolean'
     */
    hasResourceType(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    hasIdPart(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    hasVersionIdPart(): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    getVersionIdPart(): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.instance.model.api.IIdType'
     */
    withResourceType(var0: string | null): IIdType | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.instance.model.api.IIdType'
     */
    withVersion(var0: string | null): IIdType | null;
    /**
     * @return original return type: 'boolean'
     */
    hasBaseUrl(): boolean;
    /**
     * @return original return type: 'org.hl7.fhir.instance.model.api.IIdType'
     */
    toUnqualified(): IIdType | null;
    /**
     * @return original return type: 'boolean'
     */
    isIdPartValidLong(): boolean;
    /**
     * @return original return type: 'org.hl7.fhir.instance.model.api.IIdType'
     */
    toVersionless(): IIdType | null;
    /**
     * @return original return type: 'boolean'
     */
    isLocal(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    isIdPartValid(): boolean;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.instance.model.api.IIdType'
     */
    setParts(var0: string | null, var1: string | null, var2: string | null, var3: string | null): IIdType | null;
    /**
     * @return original return type: 'boolean'
     */
    hasValue(): boolean;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setValueAsString(var0: string | null): void;
    /**
     * @return original return type: 'java.lang.String'
     */
    getValueAsString(): string | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    fhirType?(): string | null;
    /**
     * @return original return type: 'java.util.List'
     */
    getFormatCommentsPost(): java_util_List | null;
    /**
     * @return original return type: 'java.util.List'
     */
    getFormatCommentsPre(): java_util_List | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.Object'
     * @return original return type: 'void'
     */
    setUserData(var0: string | null, var1: BasicOrJavaType | null): void;
    /**
     * @return original return type: 'boolean'
     */
    hasFormatComment(): boolean;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Object'
     */
    getUserData(var0: string | null): BasicOrJavaType | null;
}
/**
 * Create a proxy for the {@link IIdType} interface.
 * All required methods in {@link IIdTypeInterface} must be implemented.
 *
 * @param methods the methods to implement
 * @param opts the proxy options
 * @return the proxy
 */
export declare function createIIdTypeProxy(methods: IIdTypeInterface, opts?: InterfaceProxyOptions): JavaInterfaceProxy<IIdTypeInterface>;
declare const IIdType_base: typeof IIdTypeClass;
/**
 * Class org.hl7.fhir.instance.model.api.IIdType.
 *
 * This actually imports the java class for further use.
 * The class {@link IIdTypeClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class IIdType extends IIdType_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default IIdType;
//# sourceMappingURL=IIdType.d.ts.map