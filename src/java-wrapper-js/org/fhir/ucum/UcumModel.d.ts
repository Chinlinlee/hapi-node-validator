import { JavaClass, BasicOrJavaType } from "java-bridge";
import { BaseUnit as org_fhir_ucum_BaseUnit } from "./BaseUnit";
import { Unit as org_fhir_ucum_Unit } from "./Unit";
import { List as java_util_List } from "./../../../java/util/List";
import { Date as java_util_Date } from "./../../../java/util/Date";
import { Long as java_lang_Long } from "./../../../java/lang/Long";
import { Integer as java_lang_Integer } from "./../../../java/lang/Integer";
import { Class as java_lang_Class } from "./../../../java/lang/Class";
/**
 * This class just defines types, you should import {@link UcumModel} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class UcumModelClass extends JavaClass {
    /**
     * @return original return type: 'java.lang.String'
     */
    getVersion(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getVersionSync(): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.fhir.ucum.BaseUnit'
     */
    getBaseUnit(var0: string | null): Promise<org_fhir_ucum_BaseUnit | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.fhir.ucum.BaseUnit'
     */
    getBaseUnitSync(var0: string | null): org_fhir_ucum_BaseUnit | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setVersion(var0: string | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setVersionSync(var0: string | null): void;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.fhir.ucum.Unit'
     */
    getUnit(var0: string | null): Promise<org_fhir_ucum_Unit | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.fhir.ucum.Unit'
     */
    getUnitSync(var0: string | null): org_fhir_ucum_Unit | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getRevision(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getRevisionSync(): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setRevision(var0: string | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setRevisionSync(var0: string | null): void;
    /**
     * @return original return type: 'java.util.List'
     */
    getDefinedUnits(): Promise<java_util_List | null>;
    /**
     * @return original return type: 'java.util.List'
     */
    getDefinedUnitsSync(): java_util_List | null;
    /**
     * @return original return type: 'java.util.List'
     */
    getPrefixes(): Promise<java_util_List | null>;
    /**
     * @return original return type: 'java.util.List'
     */
    getPrefixesSync(): java_util_List | null;
    /**
     * @return original return type: 'java.util.Date'
     */
    getRevisionDate(): Promise<java_util_Date | null>;
    /**
     * @return original return type: 'java.util.Date'
     */
    getRevisionDateSync(): java_util_Date | null;
    /**
     * @param var0 original type: 'java.util.Date'
     * @return original return type: 'void'
     */
    setRevisionDate(var0: java_util_Date | null): Promise<void>;
    /**
     * @param var0 original type: 'java.util.Date'
     * @return original return type: 'void'
     */
    setRevisionDateSync(var0: java_util_Date | null): void;
    /**
     * @return original return type: 'java.util.List'
     */
    getBaseUnits(): Promise<java_util_List | null>;
    /**
     * @return original return type: 'java.util.List'
     */
    getBaseUnitsSync(): java_util_List | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.util.Date'
     * @return original return type: 'org.fhir.ucum.UcumModel'
     */
    static newInstanceAsync(var0: string | null, var1: string | null, var2: java_util_Date | null): Promise<UcumModel>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.util.Date'
     */
    constructor(var0: string | null, var1: string | null, var2: java_util_Date | null);
}
declare const UcumModel_base: typeof UcumModelClass;
/**
 * Class org.fhir.ucum.UcumModel.
 *
 * This actually imports the java class for further use.
 * The class {@link UcumModelClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class UcumModel extends UcumModel_base {
}
export default UcumModel;
//# sourceMappingURL=UcumModel.d.ts.map