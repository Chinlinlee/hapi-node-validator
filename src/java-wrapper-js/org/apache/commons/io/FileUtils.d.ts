/// <reference types="node" />
import { JavaClass, BasicOrJavaType, JavaInterfaceProxy } from "java-bridge";
import { Long as java_lang_Long } from "./../../../../java/lang/Long";
import { BigInteger as java_math_BigInteger } from "./../../../../java/math/BigInteger";
import { File as java_io_File } from "./../../../../java/io/File";
import { CharSequence as java_lang_CharSequence, CharSequenceInterface as java_lang_CharSequenceInterface } from "./../../../../java/lang/CharSequence";
import { Charset as java_nio_charset_Charset } from "./../../../../java/nio/charset/Charset";
import { Boolean as java_lang_Boolean } from "./../../../../java/lang/Boolean";
import { URL as java_net_URL } from "./../../../../java/net/URL";
import { Integer as java_lang_Integer } from "./../../../../java/lang/Integer";
import { LinkOption as java_nio_file_LinkOption } from "./../../../../java/nio/file/LinkOption";
import { Collection as java_util_Collection, CollectionInterface as java_util_CollectionInterface } from "./../../../../java/util/Collection";
import { IOFileFilter as org_apache_commons_io_filefilter_IOFileFilter, IOFileFilterInterface as org_apache_commons_io_filefilter_IOFileFilterInterface } from "./filefilter/IOFileFilter";
import { Checksum as java_util_zip_Checksum, ChecksumInterface as java_util_zip_ChecksumInterface } from "./../../../../java/util/zip/Checksum";
import { FileFilter as java_io_FileFilter, FileFilterInterface as java_io_FileFilterInterface } from "./../../../../java/io/FileFilter";
import { CopyOption as java_nio_file_CopyOption, CopyOptionInterface as java_nio_file_CopyOptionInterface } from "./../../../../java/nio/file/CopyOption";
import { OutputStream as java_io_OutputStream } from "./../../../../java/io/OutputStream";
import { InputStream as java_io_InputStream } from "./../../../../java/io/InputStream";
import { Iterable as java_lang_Iterable, IterableInterface as java_lang_IterableInterface } from "./../../../../java/lang/Iterable";
import { Instant as java_time_Instant } from "./../../../../java/time/Instant";
import { ChronoLocalDateTime as java_time_chrono_ChronoLocalDateTime, ChronoLocalDateTimeInterface as java_time_chrono_ChronoLocalDateTimeInterface } from "./../../../../java/time/chrono/ChronoLocalDateTime";
import { ZoneId as java_time_ZoneId } from "./../../../../java/time/ZoneId";
import { ChronoLocalDate as java_time_chrono_ChronoLocalDate, ChronoLocalDateInterface as java_time_chrono_ChronoLocalDateInterface } from "./../../../../java/time/chrono/ChronoLocalDate";
import { LocalTime as java_time_LocalTime } from "./../../../../java/time/LocalTime";
import { ChronoZonedDateTime as java_time_chrono_ChronoZonedDateTime, ChronoZonedDateTimeInterface as java_time_chrono_ChronoZonedDateTimeInterface } from "./../../../../java/time/chrono/ChronoZonedDateTime";
import { Date as java_util_Date } from "./../../../../java/util/Date";
import { Iterator as java_util_Iterator } from "./../../../../java/util/Iterator";
import { FileOutputStream as java_io_FileOutputStream } from "./../../../../java/io/FileOutputStream";
import { LineIterator as org_apache_commons_io_LineIterator } from "./LineIterator";
import { FileInputStream as java_io_FileInputStream } from "./../../../../java/io/FileInputStream";
import { List as java_util_List } from "./../../../../java/util/List";
import { Stream as java_util_stream_Stream } from "./../../../../java/util/stream/Stream";
import { Class as java_lang_Class } from "./../../../../java/lang/Class";
/**
 * This class just defines types, you should import {@link FileUtils} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class FileUtilsClass extends JavaClass {
    /**
     * Original type: 'long'
     */
    static readonly ONE_KB: java_lang_Long | bigint | number;
    /**
     * Original type: 'java.math.BigInteger'
     */
    static readonly ONE_KB_BI: java_math_BigInteger | null;
    /**
     * Original type: 'long'
     */
    static readonly ONE_MB: java_lang_Long | bigint | number;
    /**
     * Original type: 'java.math.BigInteger'
     */
    static readonly ONE_MB_BI: java_math_BigInteger | null;
    /**
     * Original type: 'long'
     */
    static readonly ONE_GB: java_lang_Long | bigint | number;
    /**
     * Original type: 'java.math.BigInteger'
     */
    static readonly ONE_GB_BI: java_math_BigInteger | null;
    /**
     * Original type: 'long'
     */
    static readonly ONE_TB: java_lang_Long | bigint | number;
    /**
     * Original type: 'java.math.BigInteger'
     */
    static readonly ONE_TB_BI: java_math_BigInteger | null;
    /**
     * Original type: 'long'
     */
    static readonly ONE_PB: java_lang_Long | bigint | number;
    /**
     * Original type: 'java.math.BigInteger'
     */
    static readonly ONE_PB_BI: java_math_BigInteger | null;
    /**
     * Original type: 'long'
     */
    static readonly ONE_EB: java_lang_Long | bigint | number;
    /**
     * Original type: 'java.math.BigInteger'
     */
    static readonly ONE_EB_BI: java_math_BigInteger | null;
    /**
     * Original type: 'java.math.BigInteger'
     */
    static readonly ONE_ZB: java_math_BigInteger | null;
    /**
     * Original type: 'java.math.BigInteger'
     */
    static readonly ONE_YB: java_math_BigInteger | null;
    /**
     * Original type: 'java.io.File[]'
     */
    static readonly EMPTY_FILE_ARRAY: (java_io_File | null)[] | null;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @return original return type: 'boolean'
     */
    static contentEquals(var0: java_io_File | null, var1: java_io_File | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @return original return type: 'boolean'
     */
    static contentEqualsSync(var0: java_io_File | null, var1: java_io_File | null): boolean;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.CharSequence'
     * @param var2 original type: 'java.nio.charset.Charset'
     * @return original return type: 'void'
     */
    static write(var0: java_io_File | null, var1: java_lang_CharSequence | JavaInterfaceProxy<java_lang_CharSequenceInterface> | null, var2: java_nio_charset_Charset | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.CharSequence'
     * @param var2 original type: 'java.nio.charset.Charset'
     * @return original return type: 'void'
     */
    static writeSync(var0: java_io_File | null, var1: java_lang_CharSequence | JavaInterfaceProxy<java_lang_CharSequenceInterface> | null, var2: java_nio_charset_Charset | null): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.CharSequence'
     * @return original return type: 'void'
     */
    static write(var0: java_io_File | null, var1: java_lang_CharSequence | JavaInterfaceProxy<java_lang_CharSequenceInterface> | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.CharSequence'
     * @return original return type: 'void'
     */
    static writeSync(var0: java_io_File | null, var1: java_lang_CharSequence | JavaInterfaceProxy<java_lang_CharSequenceInterface> | null): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.CharSequence'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'boolean'
     * @return original return type: 'void'
     */
    static write(var0: java_io_File | null, var1: java_lang_CharSequence | JavaInterfaceProxy<java_lang_CharSequenceInterface> | null, var2: string | null, var3: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.CharSequence'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'boolean'
     * @return original return type: 'void'
     */
    static writeSync(var0: java_io_File | null, var1: java_lang_CharSequence | JavaInterfaceProxy<java_lang_CharSequenceInterface> | null, var2: string | null, var3: java_lang_Boolean | boolean): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.CharSequence'
     * @param var2 original type: 'java.nio.charset.Charset'
     * @param var3 original type: 'boolean'
     * @return original return type: 'void'
     */
    static write(var0: java_io_File | null, var1: java_lang_CharSequence | JavaInterfaceProxy<java_lang_CharSequenceInterface> | null, var2: java_nio_charset_Charset | null, var3: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.CharSequence'
     * @param var2 original type: 'java.nio.charset.Charset'
     * @param var3 original type: 'boolean'
     * @return original return type: 'void'
     */
    static writeSync(var0: java_io_File | null, var1: java_lang_CharSequence | JavaInterfaceProxy<java_lang_CharSequenceInterface> | null, var2: java_nio_charset_Charset | null, var3: java_lang_Boolean | boolean): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.CharSequence'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    static write(var0: java_io_File | null, var1: java_lang_CharSequence | JavaInterfaceProxy<java_lang_CharSequenceInterface> | null, var2: string | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.CharSequence'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    static writeSync(var0: java_io_File | null, var1: java_lang_CharSequence | JavaInterfaceProxy<java_lang_CharSequenceInterface> | null, var2: string | null): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.CharSequence'
     * @param var2 original type: 'boolean'
     * @return original return type: 'void'
     */
    static write(var0: java_io_File | null, var1: java_lang_CharSequence | JavaInterfaceProxy<java_lang_CharSequenceInterface> | null, var2: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.CharSequence'
     * @param var2 original type: 'boolean'
     * @return original return type: 'void'
     */
    static writeSync(var0: java_io_File | null, var1: java_lang_CharSequence | JavaInterfaceProxy<java_lang_CharSequenceInterface> | null, var2: java_lang_Boolean | boolean): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'java.io.File'
     */
    static delete(var0: java_io_File | null): Promise<java_io_File | null>;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'java.io.File'
     */
    static deleteSync(var0: java_io_File | null): java_io_File | null;
    /**
     * @param var0 original type: 'java.lang.String[]'
     * @return original return type: 'java.io.File'
     */
    static getFile(var0: (string | null)[] | null): Promise<java_io_File | null>;
    /**
     * @param var0 original type: 'java.lang.String[]'
     * @return original return type: 'java.io.File'
     */
    static getFileSync(var0: (string | null)[] | null): java_io_File | null;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.String[]'
     * @return original return type: 'java.io.File'
     */
    static getFile(var0: java_io_File | null, var1: (string | null)[] | null): Promise<java_io_File | null>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.String[]'
     * @return original return type: 'java.io.File'
     */
    static getFileSync(var0: java_io_File | null, var1: (string | null)[] | null): java_io_File | null;
    /**
     * @param var0 original type: 'java.net.URL'
     * @return original return type: 'java.io.File'
     */
    static toFile(var0: java_net_URL | null): Promise<java_io_File | null>;
    /**
     * @param var0 original type: 'java.net.URL'
     * @return original return type: 'java.io.File'
     */
    static toFileSync(var0: java_net_URL | null): java_io_File | null;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'int'
     * @return original return type: 'boolean'
     */
    static waitFor(var0: java_io_File | null, var1: java_lang_Integer | number): Promise<boolean>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'int'
     * @return original return type: 'boolean'
     */
    static waitForSync(var0: java_io_File | null, var1: java_lang_Integer | number): boolean;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.nio.file.LinkOption[]'
     * @return original return type: 'boolean'
     */
    static isDirectory(var0: java_io_File | null, var1: (java_nio_file_LinkOption | null)[] | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.nio.file.LinkOption[]'
     * @return original return type: 'boolean'
     */
    static isDirectorySync(var0: java_io_File | null, var1: (java_nio_file_LinkOption | null)[] | null): boolean;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'long'
     */
    static lastModified(var0: java_io_File | null): Promise<number>;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'long'
     */
    static lastModifiedSync(var0: java_io_File | null): number;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.String[]'
     * @param var2 original type: 'boolean'
     * @return original return type: 'java.util.Collection'
     */
    static listFiles(var0: java_io_File | null, var1: (string | null)[] | null, var2: java_lang_Boolean | boolean): Promise<java_util_Collection | null>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.String[]'
     * @param var2 original type: 'boolean'
     * @return original return type: 'java.util.Collection'
     */
    static listFilesSync(var0: java_io_File | null, var1: (string | null)[] | null, var2: java_lang_Boolean | boolean): java_util_Collection | null;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'org.apache.commons.io.filefilter.IOFileFilter'
     * @param var2 original type: 'org.apache.commons.io.filefilter.IOFileFilter'
     * @return original return type: 'java.util.Collection'
     */
    static listFiles(var0: java_io_File | null, var1: org_apache_commons_io_filefilter_IOFileFilter | JavaInterfaceProxy<org_apache_commons_io_filefilter_IOFileFilterInterface> | null, var2: org_apache_commons_io_filefilter_IOFileFilter | JavaInterfaceProxy<org_apache_commons_io_filefilter_IOFileFilterInterface> | null): Promise<java_util_Collection | null>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'org.apache.commons.io.filefilter.IOFileFilter'
     * @param var2 original type: 'org.apache.commons.io.filefilter.IOFileFilter'
     * @return original return type: 'java.util.Collection'
     */
    static listFilesSync(var0: java_io_File | null, var1: org_apache_commons_io_filefilter_IOFileFilter | JavaInterfaceProxy<org_apache_commons_io_filefilter_IOFileFilterInterface> | null, var2: org_apache_commons_io_filefilter_IOFileFilter | JavaInterfaceProxy<org_apache_commons_io_filefilter_IOFileFilterInterface> | null): java_util_Collection | null;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.nio.file.LinkOption[]'
     * @return original return type: 'boolean'
     */
    static isRegularFile(var0: java_io_File | null, var1: (java_nio_file_LinkOption | null)[] | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.nio.file.LinkOption[]'
     * @return original return type: 'boolean'
     */
    static isRegularFileSync(var0: java_io_File | null, var1: (java_nio_file_LinkOption | null)[] | null): boolean;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.util.zip.Checksum'
     * @return original return type: 'java.util.zip.Checksum'
     */
    static checksum(var0: java_io_File | null, var1: java_util_zip_Checksum | JavaInterfaceProxy<java_util_zip_ChecksumInterface> | null): Promise<java_util_zip_Checksum | null>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.util.zip.Checksum'
     * @return original return type: 'java.util.zip.Checksum'
     */
    static checksumSync(var0: java_io_File | null, var1: java_util_zip_Checksum | JavaInterfaceProxy<java_util_zip_ChecksumInterface> | null): java_util_zip_Checksum | null;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static forceDelete(var0: java_io_File | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static forceDeleteSync(var0: java_io_File | null): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static deleteDirectory(var0: java_io_File | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static deleteDirectorySync(var0: java_io_File | null): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'byte[]'
     * @param var2 original type: 'boolean'
     * @return original return type: 'void'
     */
    static writeByteArrayToFile(var0: java_io_File | null, var1: Buffer | null, var2: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'byte[]'
     * @param var2 original type: 'boolean'
     * @return original return type: 'void'
     */
    static writeByteArrayToFileSync(var0: java_io_File | null, var1: Buffer | null, var2: java_lang_Boolean | boolean): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'byte[]'
     * @return original return type: 'void'
     */
    static writeByteArrayToFile(var0: java_io_File | null, var1: Buffer | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'byte[]'
     * @return original return type: 'void'
     */
    static writeByteArrayToFileSync(var0: java_io_File | null, var1: Buffer | null): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'byte[]'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @param var4 original type: 'boolean'
     * @return original return type: 'void'
     */
    static writeByteArrayToFile(var0: java_io_File | null, var1: Buffer | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number, var4: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'byte[]'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @param var4 original type: 'boolean'
     * @return original return type: 'void'
     */
    static writeByteArrayToFileSync(var0: java_io_File | null, var1: Buffer | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number, var4: java_lang_Boolean | boolean): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'byte[]'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @return original return type: 'void'
     */
    static writeByteArrayToFile(var0: java_io_File | null, var1: Buffer | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'byte[]'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @return original return type: 'void'
     */
    static writeByteArrayToFileSync(var0: java_io_File | null, var1: Buffer | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static cleanDirectory(var0: java_io_File | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static cleanDirectorySync(var0: java_io_File | null): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'long'
     */
    static checksumCRC32(var0: java_io_File | null): Promise<number>;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'long'
     */
    static checksumCRC32Sync(var0: java_io_File | null): number;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @param var2 original type: 'java.io.FileFilter'
     * @param var3 original type: 'boolean'
     * @param var4 original type: 'java.nio.file.CopyOption[]'
     * @return original return type: 'void'
     */
    static copyDirectory(var0: java_io_File | null, var1: java_io_File | null, var2: java_io_FileFilter | JavaInterfaceProxy<java_io_FileFilterInterface> | null, var3: java_lang_Boolean | boolean, var4: (java_nio_file_CopyOption | JavaInterfaceProxy<java_nio_file_CopyOptionInterface> | null)[] | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @param var2 original type: 'java.io.FileFilter'
     * @param var3 original type: 'boolean'
     * @param var4 original type: 'java.nio.file.CopyOption[]'
     * @return original return type: 'void'
     */
    static copyDirectorySync(var0: java_io_File | null, var1: java_io_File | null, var2: java_io_FileFilter | JavaInterfaceProxy<java_io_FileFilterInterface> | null, var3: java_lang_Boolean | boolean, var4: (java_nio_file_CopyOption | JavaInterfaceProxy<java_nio_file_CopyOptionInterface> | null)[] | null): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static copyDirectory(var0: java_io_File | null, var1: java_io_File | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static copyDirectorySync(var0: java_io_File | null, var1: java_io_File | null): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @param var2 original type: 'java.io.FileFilter'
     * @param var3 original type: 'boolean'
     * @return original return type: 'void'
     */
    static copyDirectory(var0: java_io_File | null, var1: java_io_File | null, var2: java_io_FileFilter | JavaInterfaceProxy<java_io_FileFilterInterface> | null, var3: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @param var2 original type: 'java.io.FileFilter'
     * @param var3 original type: 'boolean'
     * @return original return type: 'void'
     */
    static copyDirectorySync(var0: java_io_File | null, var1: java_io_File | null, var2: java_io_FileFilter | JavaInterfaceProxy<java_io_FileFilterInterface> | null, var3: java_lang_Boolean | boolean): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @param var2 original type: 'boolean'
     * @return original return type: 'void'
     */
    static copyDirectory(var0: java_io_File | null, var1: java_io_File | null, var2: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @param var2 original type: 'boolean'
     * @return original return type: 'void'
     */
    static copyDirectorySync(var0: java_io_File | null, var1: java_io_File | null, var2: java_lang_Boolean | boolean): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @param var2 original type: 'java.io.FileFilter'
     * @return original return type: 'void'
     */
    static copyDirectory(var0: java_io_File | null, var1: java_io_File | null, var2: java_io_FileFilter | JavaInterfaceProxy<java_io_FileFilterInterface> | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @param var2 original type: 'java.io.FileFilter'
     * @return original return type: 'void'
     */
    static copyDirectorySync(var0: java_io_File | null, var1: java_io_File | null, var2: java_io_FileFilter | JavaInterfaceProxy<java_io_FileFilterInterface> | null): void;
    /**
     * @param var0 original type: 'java.net.URL'
     * @param var1 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static copyURLToFile(var0: java_net_URL | null, var1: java_io_File | null): Promise<void>;
    /**
     * @param var0 original type: 'java.net.URL'
     * @param var1 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static copyURLToFileSync(var0: java_net_URL | null, var1: java_io_File | null): void;
    /**
     * @param var0 original type: 'java.net.URL'
     * @param var1 original type: 'java.io.File'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @return original return type: 'void'
     */
    static copyURLToFile(var0: java_net_URL | null, var1: java_io_File | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'java.net.URL'
     * @param var1 original type: 'java.io.File'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @return original return type: 'void'
     */
    static copyURLToFileSync(var0: java_net_URL | null, var1: java_io_File | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static copyFile(var0: java_io_File | null, var1: java_io_File | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static copyFileSync(var0: java_io_File | null, var1: java_io_File | null): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @param var2 original type: 'boolean'
     * @return original return type: 'void'
     */
    static copyFile(var0: java_io_File | null, var1: java_io_File | null, var2: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @param var2 original type: 'boolean'
     * @return original return type: 'void'
     */
    static copyFileSync(var0: java_io_File | null, var1: java_io_File | null, var2: java_lang_Boolean | boolean): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.OutputStream'
     * @return original return type: 'long'
     */
    static copyFile(var0: java_io_File | null, var1: java_io_OutputStream | null): Promise<number>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.OutputStream'
     * @return original return type: 'long'
     */
    static copyFileSync(var0: java_io_File | null, var1: java_io_OutputStream | null): number;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @param var2 original type: 'java.nio.file.CopyOption[]'
     * @return original return type: 'void'
     */
    static copyFile(var0: java_io_File | null, var1: java_io_File | null, var2: (java_nio_file_CopyOption | JavaInterfaceProxy<java_nio_file_CopyOptionInterface> | null)[] | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @param var2 original type: 'java.nio.file.CopyOption[]'
     * @return original return type: 'void'
     */
    static copyFileSync(var0: java_io_File | null, var1: java_io_File | null, var2: (java_nio_file_CopyOption | JavaInterfaceProxy<java_nio_file_CopyOptionInterface> | null)[] | null): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @param var2 original type: 'boolean'
     * @param var3 original type: 'java.nio.file.CopyOption[]'
     * @return original return type: 'void'
     */
    static copyFile(var0: java_io_File | null, var1: java_io_File | null, var2: java_lang_Boolean | boolean, var3: (java_nio_file_CopyOption | JavaInterfaceProxy<java_nio_file_CopyOptionInterface> | null)[] | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @param var2 original type: 'boolean'
     * @param var3 original type: 'java.nio.file.CopyOption[]'
     * @return original return type: 'void'
     */
    static copyFileSync(var0: java_io_File | null, var1: java_io_File | null, var2: java_lang_Boolean | boolean, var3: (java_nio_file_CopyOption | JavaInterfaceProxy<java_nio_file_CopyOptionInterface> | null)[] | null): void;
    /**
     * @param var0 original type: 'java.io.InputStream'
     * @param var1 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static copyToFile(var0: java_io_InputStream | null, var1: java_io_File | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.InputStream'
     * @param var1 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static copyToFileSync(var0: java_io_InputStream | null, var1: java_io_File | null): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static copyToDirectory(var0: java_io_File | null, var1: java_io_File | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static copyToDirectorySync(var0: java_io_File | null, var1: java_io_File | null): void;
    /**
     * @param var0 original type: 'java.lang.Iterable'
     * @param var1 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static copyToDirectory(var0: java_lang_Iterable | JavaInterfaceProxy<java_lang_IterableInterface> | null, var1: java_io_File | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.Iterable'
     * @param var1 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static copyToDirectorySync(var0: java_lang_Iterable | JavaInterfaceProxy<java_lang_IterableInterface> | null, var1: java_io_File | null): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static forceMkdir(var0: java_io_File | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static forceMkdirSync(var0: java_io_File | null): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @return original return type: 'boolean'
     */
    static directoryContains(var0: java_io_File | null, var1: java_io_File | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @return original return type: 'boolean'
     */
    static directoryContainsSync(var0: java_io_File | null, var1: java_io_File | null): boolean;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'boolean'
     */
    static deleteQuietly(var0: java_io_File | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'boolean'
     */
    static deleteQuietlySync(var0: java_io_File | null): boolean;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @return original return type: 'boolean'
     */
    static isFileNewer(var0: java_io_File | null, var1: java_io_File | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @return original return type: 'boolean'
     */
    static isFileNewerSync(var0: java_io_File | null, var1: java_io_File | null): boolean;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.time.Instant'
     * @return original return type: 'boolean'
     */
    static isFileNewer(var0: java_io_File | null, var1: java_time_Instant | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.time.Instant'
     * @return original return type: 'boolean'
     */
    static isFileNewerSync(var0: java_io_File | null, var1: java_time_Instant | null): boolean;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'long'
     * @return original return type: 'boolean'
     */
    static isFileNewer(var0: java_io_File | null, var1: java_lang_Long | bigint | number): Promise<boolean>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'long'
     * @return original return type: 'boolean'
     */
    static isFileNewerSync(var0: java_io_File | null, var1: java_lang_Long | bigint | number): boolean;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.time.chrono.ChronoLocalDateTime'
     * @param var2 original type: 'java.time.ZoneId'
     * @return original return type: 'boolean'
     */
    static isFileNewer(var0: java_io_File | null, var1: java_time_chrono_ChronoLocalDateTime | JavaInterfaceProxy<java_time_chrono_ChronoLocalDateTimeInterface> | null, var2: java_time_ZoneId | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.time.chrono.ChronoLocalDateTime'
     * @param var2 original type: 'java.time.ZoneId'
     * @return original return type: 'boolean'
     */
    static isFileNewerSync(var0: java_io_File | null, var1: java_time_chrono_ChronoLocalDateTime | JavaInterfaceProxy<java_time_chrono_ChronoLocalDateTimeInterface> | null, var2: java_time_ZoneId | null): boolean;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.time.chrono.ChronoLocalDateTime'
     * @return original return type: 'boolean'
     */
    static isFileNewer(var0: java_io_File | null, var1: java_time_chrono_ChronoLocalDateTime | JavaInterfaceProxy<java_time_chrono_ChronoLocalDateTimeInterface> | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.time.chrono.ChronoLocalDateTime'
     * @return original return type: 'boolean'
     */
    static isFileNewerSync(var0: java_io_File | null, var1: java_time_chrono_ChronoLocalDateTime | JavaInterfaceProxy<java_time_chrono_ChronoLocalDateTimeInterface> | null): boolean;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.time.chrono.ChronoLocalDate'
     * @param var2 original type: 'java.time.LocalTime'
     * @return original return type: 'boolean'
     */
    static isFileNewer(var0: java_io_File | null, var1: java_time_chrono_ChronoLocalDate | JavaInterfaceProxy<java_time_chrono_ChronoLocalDateInterface> | null, var2: java_time_LocalTime | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.time.chrono.ChronoLocalDate'
     * @param var2 original type: 'java.time.LocalTime'
     * @return original return type: 'boolean'
     */
    static isFileNewerSync(var0: java_io_File | null, var1: java_time_chrono_ChronoLocalDate | JavaInterfaceProxy<java_time_chrono_ChronoLocalDateInterface> | null, var2: java_time_LocalTime | null): boolean;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.time.chrono.ChronoLocalDate'
     * @return original return type: 'boolean'
     */
    static isFileNewer(var0: java_io_File | null, var1: java_time_chrono_ChronoLocalDate | JavaInterfaceProxy<java_time_chrono_ChronoLocalDateInterface> | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.time.chrono.ChronoLocalDate'
     * @return original return type: 'boolean'
     */
    static isFileNewerSync(var0: java_io_File | null, var1: java_time_chrono_ChronoLocalDate | JavaInterfaceProxy<java_time_chrono_ChronoLocalDateInterface> | null): boolean;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.time.chrono.ChronoZonedDateTime'
     * @return original return type: 'boolean'
     */
    static isFileNewer(var0: java_io_File | null, var1: java_time_chrono_ChronoZonedDateTime | JavaInterfaceProxy<java_time_chrono_ChronoZonedDateTimeInterface> | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.time.chrono.ChronoZonedDateTime'
     * @return original return type: 'boolean'
     */
    static isFileNewerSync(var0: java_io_File | null, var1: java_time_chrono_ChronoZonedDateTime | JavaInterfaceProxy<java_time_chrono_ChronoZonedDateTimeInterface> | null): boolean;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.util.Date'
     * @return original return type: 'boolean'
     */
    static isFileNewer(var0: java_io_File | null, var1: java_util_Date | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.util.Date'
     * @return original return type: 'boolean'
     */
    static isFileNewerSync(var0: java_io_File | null, var1: java_util_Date | null): boolean;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'boolean'
     */
    static isEmptyDirectory(var0: java_io_File | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'boolean'
     */
    static isEmptyDirectorySync(var0: java_io_File | null): boolean;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static forceMkdirParent(var0: java_io_File | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static forceMkdirParentSync(var0: java_io_File | null): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.time.chrono.ChronoLocalDate'
     * @param var2 original type: 'java.time.LocalTime'
     * @return original return type: 'boolean'
     */
    static isFileOlder(var0: java_io_File | null, var1: java_time_chrono_ChronoLocalDate | JavaInterfaceProxy<java_time_chrono_ChronoLocalDateInterface> | null, var2: java_time_LocalTime | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.time.chrono.ChronoLocalDate'
     * @param var2 original type: 'java.time.LocalTime'
     * @return original return type: 'boolean'
     */
    static isFileOlderSync(var0: java_io_File | null, var1: java_time_chrono_ChronoLocalDate | JavaInterfaceProxy<java_time_chrono_ChronoLocalDateInterface> | null, var2: java_time_LocalTime | null): boolean;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.time.chrono.ChronoLocalDateTime'
     * @return original return type: 'boolean'
     */
    static isFileOlder(var0: java_io_File | null, var1: java_time_chrono_ChronoLocalDateTime | JavaInterfaceProxy<java_time_chrono_ChronoLocalDateTimeInterface> | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.time.chrono.ChronoLocalDateTime'
     * @return original return type: 'boolean'
     */
    static isFileOlderSync(var0: java_io_File | null, var1: java_time_chrono_ChronoLocalDateTime | JavaInterfaceProxy<java_time_chrono_ChronoLocalDateTimeInterface> | null): boolean;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.time.chrono.ChronoLocalDate'
     * @return original return type: 'boolean'
     */
    static isFileOlder(var0: java_io_File | null, var1: java_time_chrono_ChronoLocalDate | JavaInterfaceProxy<java_time_chrono_ChronoLocalDateInterface> | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.time.chrono.ChronoLocalDate'
     * @return original return type: 'boolean'
     */
    static isFileOlderSync(var0: java_io_File | null, var1: java_time_chrono_ChronoLocalDate | JavaInterfaceProxy<java_time_chrono_ChronoLocalDateInterface> | null): boolean;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @return original return type: 'boolean'
     */
    static isFileOlder(var0: java_io_File | null, var1: java_io_File | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @return original return type: 'boolean'
     */
    static isFileOlderSync(var0: java_io_File | null, var1: java_io_File | null): boolean;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.util.Date'
     * @return original return type: 'boolean'
     */
    static isFileOlder(var0: java_io_File | null, var1: java_util_Date | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.util.Date'
     * @return original return type: 'boolean'
     */
    static isFileOlderSync(var0: java_io_File | null, var1: java_util_Date | null): boolean;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.time.chrono.ChronoZonedDateTime'
     * @return original return type: 'boolean'
     */
    static isFileOlder(var0: java_io_File | null, var1: java_time_chrono_ChronoZonedDateTime | JavaInterfaceProxy<java_time_chrono_ChronoZonedDateTimeInterface> | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.time.chrono.ChronoZonedDateTime'
     * @return original return type: 'boolean'
     */
    static isFileOlderSync(var0: java_io_File | null, var1: java_time_chrono_ChronoZonedDateTime | JavaInterfaceProxy<java_time_chrono_ChronoZonedDateTimeInterface> | null): boolean;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.time.chrono.ChronoLocalDateTime'
     * @param var2 original type: 'java.time.ZoneId'
     * @return original return type: 'boolean'
     */
    static isFileOlder(var0: java_io_File | null, var1: java_time_chrono_ChronoLocalDateTime | JavaInterfaceProxy<java_time_chrono_ChronoLocalDateTimeInterface> | null, var2: java_time_ZoneId | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.time.chrono.ChronoLocalDateTime'
     * @param var2 original type: 'java.time.ZoneId'
     * @return original return type: 'boolean'
     */
    static isFileOlderSync(var0: java_io_File | null, var1: java_time_chrono_ChronoLocalDateTime | JavaInterfaceProxy<java_time_chrono_ChronoLocalDateTimeInterface> | null, var2: java_time_ZoneId | null): boolean;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'long'
     * @return original return type: 'boolean'
     */
    static isFileOlder(var0: java_io_File | null, var1: java_lang_Long | bigint | number): Promise<boolean>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'long'
     * @return original return type: 'boolean'
     */
    static isFileOlderSync(var0: java_io_File | null, var1: java_lang_Long | bigint | number): boolean;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.time.Instant'
     * @return original return type: 'boolean'
     */
    static isFileOlder(var0: java_io_File | null, var1: java_time_Instant | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.time.Instant'
     * @return original return type: 'boolean'
     */
    static isFileOlderSync(var0: java_io_File | null, var1: java_time_Instant | null): boolean;
    /**
     * @return original return type: 'java.io.File'
     */
    static getUserDirectory(): Promise<java_io_File | null>;
    /**
     * @return original return type: 'java.io.File'
     */
    static getUserDirectorySync(): java_io_File | null;
    /**
     * @return original return type: 'java.io.File'
     */
    static getTempDirectory(): Promise<java_io_File | null>;
    /**
     * @return original return type: 'java.io.File'
     */
    static getTempDirectorySync(): java_io_File | null;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'org.apache.commons.io.filefilter.IOFileFilter'
     * @param var2 original type: 'org.apache.commons.io.filefilter.IOFileFilter'
     * @return original return type: 'java.util.Iterator'
     */
    static iterateFiles(var0: java_io_File | null, var1: org_apache_commons_io_filefilter_IOFileFilter | JavaInterfaceProxy<org_apache_commons_io_filefilter_IOFileFilterInterface> | null, var2: org_apache_commons_io_filefilter_IOFileFilter | JavaInterfaceProxy<org_apache_commons_io_filefilter_IOFileFilterInterface> | null): Promise<java_util_Iterator | null>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'org.apache.commons.io.filefilter.IOFileFilter'
     * @param var2 original type: 'org.apache.commons.io.filefilter.IOFileFilter'
     * @return original return type: 'java.util.Iterator'
     */
    static iterateFilesSync(var0: java_io_File | null, var1: org_apache_commons_io_filefilter_IOFileFilter | JavaInterfaceProxy<org_apache_commons_io_filefilter_IOFileFilterInterface> | null, var2: org_apache_commons_io_filefilter_IOFileFilter | JavaInterfaceProxy<org_apache_commons_io_filefilter_IOFileFilterInterface> | null): java_util_Iterator | null;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.String[]'
     * @param var2 original type: 'boolean'
     * @return original return type: 'java.util.Iterator'
     */
    static iterateFiles(var0: java_io_File | null, var1: (string | null)[] | null, var2: java_lang_Boolean | boolean): Promise<java_util_Iterator | null>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.String[]'
     * @param var2 original type: 'boolean'
     * @return original return type: 'java.util.Iterator'
     */
    static iterateFilesSync(var0: java_io_File | null, var1: (string | null)[] | null, var2: java_lang_Boolean | boolean): java_util_Iterator | null;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'boolean'
     */
    static isSymlink(var0: java_io_File | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'boolean'
     */
    static isSymlinkSync(var0: java_io_File | null): boolean;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static forceDeleteOnExit(var0: java_io_File | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static forceDeleteOnExitSync(var0: java_io_File | null): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'boolean'
     * @return original return type: 'java.io.FileOutputStream'
     */
    static openOutputStream(var0: java_io_File | null, var1: java_lang_Boolean | boolean): Promise<java_io_FileOutputStream | null>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'boolean'
     * @return original return type: 'java.io.FileOutputStream'
     */
    static openOutputStreamSync(var0: java_io_File | null, var1: java_lang_Boolean | boolean): java_io_FileOutputStream | null;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'java.io.FileOutputStream'
     */
    static openOutputStream(var0: java_io_File | null): Promise<java_io_FileOutputStream | null>;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'java.io.FileOutputStream'
     */
    static openOutputStreamSync(var0: java_io_File | null): java_io_FileOutputStream | null;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @param var2 original type: 'java.nio.file.CopyOption[]'
     * @return original return type: 'void'
     */
    static moveFile(var0: java_io_File | null, var1: java_io_File | null, var2: (java_nio_file_CopyOption | JavaInterfaceProxy<java_nio_file_CopyOptionInterface> | null)[] | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @param var2 original type: 'java.nio.file.CopyOption[]'
     * @return original return type: 'void'
     */
    static moveFileSync(var0: java_io_File | null, var1: java_io_File | null, var2: (java_nio_file_CopyOption | JavaInterfaceProxy<java_nio_file_CopyOptionInterface> | null)[] | null): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static moveFile(var0: java_io_File | null, var1: java_io_File | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static moveFileSync(var0: java_io_File | null, var1: java_io_File | null): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'java.lang.String'
     */
    static readFileToString(var0: java_io_File | null): Promise<string | null>;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'java.lang.String'
     */
    static readFileToStringSync(var0: java_io_File | null): string | null;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    static readFileToString(var0: java_io_File | null, var1: string | null): Promise<string | null>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    static readFileToStringSync(var0: java_io_File | null, var1: string | null): string | null;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.nio.charset.Charset'
     * @return original return type: 'java.lang.String'
     */
    static readFileToString(var0: java_io_File | null, var1: java_nio_charset_Charset | null): Promise<string | null>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.nio.charset.Charset'
     * @return original return type: 'java.lang.String'
     */
    static readFileToStringSync(var0: java_io_File | null, var1: java_nio_charset_Charset | null): string | null;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @param var2 original type: 'boolean'
     * @return original return type: 'void'
     */
    static moveToDirectory(var0: java_io_File | null, var1: java_io_File | null, var2: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @param var2 original type: 'boolean'
     * @return original return type: 'void'
     */
    static moveToDirectorySync(var0: java_io_File | null, var1: java_io_File | null, var2: java_lang_Boolean | boolean): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'org.apache.commons.io.LineIterator'
     */
    static lineIterator(var0: java_io_File | null): Promise<org_apache_commons_io_LineIterator | null>;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'org.apache.commons.io.LineIterator'
     */
    static lineIteratorSync(var0: java_io_File | null): org_apache_commons_io_LineIterator | null;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'org.apache.commons.io.LineIterator'
     */
    static lineIterator(var0: java_io_File | null, var1: string | null): Promise<org_apache_commons_io_LineIterator | null>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'org.apache.commons.io.LineIterator'
     */
    static lineIteratorSync(var0: java_io_File | null, var1: string | null): org_apache_commons_io_LineIterator | null;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'java.io.FileInputStream'
     */
    static openInputStream(var0: java_io_File | null): Promise<java_io_FileInputStream | null>;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'java.io.FileInputStream'
     */
    static openInputStreamSync(var0: java_io_File | null): java_io_FileInputStream | null;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'java.util.List'
     */
    static readLines(var0: java_io_File | null): Promise<java_util_List | null>;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'java.util.List'
     */
    static readLinesSync(var0: java_io_File | null): java_util_List | null;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.nio.charset.Charset'
     * @return original return type: 'java.util.List'
     */
    static readLines(var0: java_io_File | null, var1: java_nio_charset_Charset | null): Promise<java_util_List | null>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.nio.charset.Charset'
     * @return original return type: 'java.util.List'
     */
    static readLinesSync(var0: java_io_File | null, var1: java_nio_charset_Charset | null): java_util_List | null;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.util.List'
     */
    static readLines(var0: java_io_File | null, var1: string | null): Promise<java_util_List | null>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.util.List'
     */
    static readLinesSync(var0: java_io_File | null, var1: string | null): java_util_List | null;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'org.apache.commons.io.filefilter.IOFileFilter'
     * @param var2 original type: 'org.apache.commons.io.filefilter.IOFileFilter'
     * @return original return type: 'java.util.Collection'
     */
    static listFilesAndDirs(var0: java_io_File | null, var1: org_apache_commons_io_filefilter_IOFileFilter | JavaInterfaceProxy<org_apache_commons_io_filefilter_IOFileFilterInterface> | null, var2: org_apache_commons_io_filefilter_IOFileFilter | JavaInterfaceProxy<org_apache_commons_io_filefilter_IOFileFilterInterface> | null): Promise<java_util_Collection | null>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'org.apache.commons.io.filefilter.IOFileFilter'
     * @param var2 original type: 'org.apache.commons.io.filefilter.IOFileFilter'
     * @return original return type: 'java.util.Collection'
     */
    static listFilesAndDirsSync(var0: java_io_File | null, var1: org_apache_commons_io_filefilter_IOFileFilter | JavaInterfaceProxy<org_apache_commons_io_filefilter_IOFileFilterInterface> | null, var2: org_apache_commons_io_filefilter_IOFileFilter | JavaInterfaceProxy<org_apache_commons_io_filefilter_IOFileFilterInterface> | null): java_util_Collection | null;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static moveDirectory(var0: java_io_File | null, var1: java_io_File | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static moveDirectorySync(var0: java_io_File | null, var1: java_io_File | null): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'long'
     */
    static sizeOfDirectory(var0: java_io_File | null): Promise<number>;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'long'
     */
    static sizeOfDirectorySync(var0: java_io_File | null): number;
    /**
     * @param var0 original type: 'java.net.URL[]'
     * @return original return type: 'java.io.File[]'
     */
    static toFiles(var0: (java_net_URL | null)[] | null): Promise<(java_io_File | null)[] | null>;
    /**
     * @param var0 original type: 'java.net.URL[]'
     * @return original return type: 'java.io.File[]'
     */
    static toFilesSync(var0: (java_net_URL | null)[] | null): (java_io_File | null)[] | null;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'long'
     */
    static sizeOf(var0: java_io_File | null): Promise<number>;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'long'
     */
    static sizeOfSync(var0: java_io_File | null): number;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'boolean'
     * @param var2 original type: 'java.lang.String[]'
     * @return original return type: 'java.util.stream.Stream'
     */
    static streamFiles(var0: java_io_File | null, var1: java_lang_Boolean | boolean, var2: (string | null)[] | null): Promise<java_util_stream_Stream | null>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'boolean'
     * @param var2 original type: 'java.lang.String[]'
     * @return original return type: 'java.util.stream.Stream'
     */
    static streamFilesSync(var0: java_io_File | null, var1: java_lang_Boolean | boolean, var2: (string | null)[] | null): java_util_stream_Stream | null;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'java.math.BigInteger'
     */
    static sizeOfAsBigInteger(var0: java_io_File | null): Promise<java_math_BigInteger | null>;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'java.math.BigInteger'
     */
    static sizeOfAsBigIntegerSync(var0: java_io_File | null): java_math_BigInteger | null;
    /**
     * @param var0 original type: 'java.io.File[]'
     * @return original return type: 'java.net.URL[]'
     */
    static toURLs(var0: (java_io_File | null)[] | null): Promise<(java_net_URL | null)[] | null>;
    /**
     * @param var0 original type: 'java.io.File[]'
     * @return original return type: 'java.net.URL[]'
     */
    static toURLsSync(var0: (java_io_File | null)[] | null): (java_net_URL | null)[] | null;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static touch(var0: java_io_File | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static touchSync(var0: java_io_File | null): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.util.Collection'
     * @return original return type: 'void'
     */
    static writeLines(var0: java_io_File | null, var1: java_util_Collection | JavaInterfaceProxy<java_util_CollectionInterface> | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.util.Collection'
     * @return original return type: 'void'
     */
    static writeLinesSync(var0: java_io_File | null, var1: java_util_Collection | JavaInterfaceProxy<java_util_CollectionInterface> | null): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.util.Collection'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    static writeLines(var0: java_io_File | null, var1: java_util_Collection | JavaInterfaceProxy<java_util_CollectionInterface> | null, var2: string | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.util.Collection'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    static writeLinesSync(var0: java_io_File | null, var1: java_util_Collection | JavaInterfaceProxy<java_util_CollectionInterface> | null, var2: string | null): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.util.Collection'
     * @param var2 original type: 'boolean'
     * @return original return type: 'void'
     */
    static writeLines(var0: java_io_File | null, var1: java_util_Collection | JavaInterfaceProxy<java_util_CollectionInterface> | null, var2: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.util.Collection'
     * @param var2 original type: 'boolean'
     * @return original return type: 'void'
     */
    static writeLinesSync(var0: java_io_File | null, var1: java_util_Collection | JavaInterfaceProxy<java_util_CollectionInterface> | null, var2: java_lang_Boolean | boolean): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.util.Collection'
     * @param var3 original type: 'java.lang.String'
     * @param var4 original type: 'boolean'
     * @return original return type: 'void'
     */
    static writeLines(var0: java_io_File | null, var1: string | null, var2: java_util_Collection | JavaInterfaceProxy<java_util_CollectionInterface> | null, var3: string | null, var4: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.util.Collection'
     * @param var3 original type: 'java.lang.String'
     * @param var4 original type: 'boolean'
     * @return original return type: 'void'
     */
    static writeLinesSync(var0: java_io_File | null, var1: string | null, var2: java_util_Collection | JavaInterfaceProxy<java_util_CollectionInterface> | null, var3: string | null, var4: java_lang_Boolean | boolean): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.util.Collection'
     * @param var3 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    static writeLines(var0: java_io_File | null, var1: string | null, var2: java_util_Collection | JavaInterfaceProxy<java_util_CollectionInterface> | null, var3: string | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.util.Collection'
     * @param var3 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    static writeLinesSync(var0: java_io_File | null, var1: string | null, var2: java_util_Collection | JavaInterfaceProxy<java_util_CollectionInterface> | null, var3: string | null): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.util.Collection'
     * @param var3 original type: 'boolean'
     * @return original return type: 'void'
     */
    static writeLines(var0: java_io_File | null, var1: string | null, var2: java_util_Collection | JavaInterfaceProxy<java_util_CollectionInterface> | null, var3: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.util.Collection'
     * @param var3 original type: 'boolean'
     * @return original return type: 'void'
     */
    static writeLinesSync(var0: java_io_File | null, var1: string | null, var2: java_util_Collection | JavaInterfaceProxy<java_util_CollectionInterface> | null, var3: java_lang_Boolean | boolean): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.util.Collection'
     * @return original return type: 'void'
     */
    static writeLines(var0: java_io_File | null, var1: string | null, var2: java_util_Collection | JavaInterfaceProxy<java_util_CollectionInterface> | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.util.Collection'
     * @return original return type: 'void'
     */
    static writeLinesSync(var0: java_io_File | null, var1: string | null, var2: java_util_Collection | JavaInterfaceProxy<java_util_CollectionInterface> | null): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.util.Collection'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'boolean'
     * @return original return type: 'void'
     */
    static writeLines(var0: java_io_File | null, var1: java_util_Collection | JavaInterfaceProxy<java_util_CollectionInterface> | null, var2: string | null, var3: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.util.Collection'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'boolean'
     * @return original return type: 'void'
     */
    static writeLinesSync(var0: java_io_File | null, var1: java_util_Collection | JavaInterfaceProxy<java_util_CollectionInterface> | null, var2: string | null, var3: java_lang_Boolean | boolean): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'boolean'
     * @return original return type: 'void'
     */
    static writeStringToFile(var0: java_io_File | null, var1: string | null, var2: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'boolean'
     * @return original return type: 'void'
     */
    static writeStringToFileSync(var0: java_io_File | null, var1: string | null, var2: java_lang_Boolean | boolean): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    static writeStringToFile(var0: java_io_File | null, var1: string | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    static writeStringToFileSync(var0: java_io_File | null, var1: string | null): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    static writeStringToFile(var0: java_io_File | null, var1: string | null, var2: string | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    static writeStringToFileSync(var0: java_io_File | null, var1: string | null, var2: string | null): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.nio.charset.Charset'
     * @param var3 original type: 'boolean'
     * @return original return type: 'void'
     */
    static writeStringToFile(var0: java_io_File | null, var1: string | null, var2: java_nio_charset_Charset | null, var3: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.nio.charset.Charset'
     * @param var3 original type: 'boolean'
     * @return original return type: 'void'
     */
    static writeStringToFileSync(var0: java_io_File | null, var1: string | null, var2: java_nio_charset_Charset | null, var3: java_lang_Boolean | boolean): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.nio.charset.Charset'
     * @return original return type: 'void'
     */
    static writeStringToFile(var0: java_io_File | null, var1: string | null, var2: java_nio_charset_Charset | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.nio.charset.Charset'
     * @return original return type: 'void'
     */
    static writeStringToFileSync(var0: java_io_File | null, var1: string | null, var2: java_nio_charset_Charset | null): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'boolean'
     * @return original return type: 'void'
     */
    static writeStringToFile(var0: java_io_File | null, var1: string | null, var2: string | null, var3: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'boolean'
     * @return original return type: 'void'
     */
    static writeStringToFileSync(var0: java_io_File | null, var1: string | null, var2: string | null, var3: java_lang_Boolean | boolean): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'byte[]'
     */
    static readFileToByteArray(var0: java_io_File | null): Promise<Buffer | null>;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'byte[]'
     */
    static readFileToByteArraySync(var0: java_io_File | null): Buffer | null;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    static contentEqualsIgnoreEOL(var0: java_io_File | null, var1: java_io_File | null, var2: string | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    static contentEqualsIgnoreEOLSync(var0: java_io_File | null, var1: java_io_File | null, var2: string | null): boolean;
    /**
     * @param var0 original type: 'java.util.Collection'
     * @return original return type: 'java.io.File[]'
     */
    static convertFileCollectionToFileArray(var0: java_util_Collection | JavaInterfaceProxy<java_util_CollectionInterface> | null): Promise<(java_io_File | null)[] | null>;
    /**
     * @param var0 original type: 'java.util.Collection'
     * @return original return type: 'java.io.File[]'
     */
    static convertFileCollectionToFileArraySync(var0: java_util_Collection | JavaInterfaceProxy<java_util_CollectionInterface> | null): (java_io_File | null)[] | null;
    /**
     * @param var0 original type: 'java.math.BigInteger'
     * @return original return type: 'java.lang.String'
     */
    static byteCountToDisplaySize(var0: java_math_BigInteger | null): Promise<string | null>;
    /**
     * @param var0 original type: 'java.math.BigInteger'
     * @return original return type: 'java.lang.String'
     */
    static byteCountToDisplaySizeSync(var0: java_math_BigInteger | null): string | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.lang.String'
     */
    static byteCountToDisplaySize(var0: java_lang_Long | bigint | number): Promise<string | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.lang.String'
     */
    static byteCountToDisplaySizeSync(var0: java_lang_Long | bigint | number): string | null;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'java.math.BigInteger'
     */
    static sizeOfDirectoryAsBigInteger(var0: java_io_File | null): Promise<java_math_BigInteger | null>;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'java.math.BigInteger'
     */
    static sizeOfDirectoryAsBigIntegerSync(var0: java_io_File | null): java_math_BigInteger | null;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @param var2 original type: 'boolean'
     * @return original return type: 'void'
     */
    static moveFileToDirectory(var0: java_io_File | null, var1: java_io_File | null, var2: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @param var2 original type: 'boolean'
     * @return original return type: 'void'
     */
    static moveFileToDirectorySync(var0: java_io_File | null, var1: java_io_File | null, var2: java_lang_Boolean | boolean): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'java.io.File'
     */
    static createParentDirectories(var0: java_io_File | null): Promise<java_io_File | null>;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'java.io.File'
     */
    static createParentDirectoriesSync(var0: java_io_File | null): java_io_File | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    static getTempDirectoryPath(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    static getTempDirectoryPathSync(): string | null;
    /**
     * @param var0 original type: 'java.io.InputStream'
     * @param var1 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static copyInputStreamToFile(var0: java_io_InputStream | null, var1: java_io_File | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.InputStream'
     * @param var1 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static copyInputStreamToFileSync(var0: java_io_InputStream | null, var1: java_io_File | null): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static copyDirectoryToDirectory(var0: java_io_File | null, var1: java_io_File | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static copyDirectoryToDirectorySync(var0: java_io_File | null, var1: java_io_File | null): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @param var2 original type: 'boolean'
     * @return original return type: 'void'
     */
    static copyFileToDirectory(var0: java_io_File | null, var1: java_io_File | null, var2: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @param var2 original type: 'boolean'
     * @return original return type: 'void'
     */
    static copyFileToDirectorySync(var0: java_io_File | null, var1: java_io_File | null, var2: java_lang_Boolean | boolean): void;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static copyFileToDirectory(var0: java_io_File | null, var1: java_io_File | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @return original return type: 'void'
     */
    static copyFileToDirectorySync(var0: java_io_File | null, var1: java_io_File | null): void;
    /**
     * @return original return type: 'java.lang.String'
     */
    static getUserDirectoryPath(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    static getUserDirectoryPathSync(): string | null;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'org.apache.commons.io.filefilter.IOFileFilter'
     * @param var2 original type: 'org.apache.commons.io.filefilter.IOFileFilter'
     * @return original return type: 'java.util.Iterator'
     */
    static iterateFilesAndDirs(var0: java_io_File | null, var1: org_apache_commons_io_filefilter_IOFileFilter | JavaInterfaceProxy<org_apache_commons_io_filefilter_IOFileFilterInterface> | null, var2: org_apache_commons_io_filefilter_IOFileFilter | JavaInterfaceProxy<org_apache_commons_io_filefilter_IOFileFilterInterface> | null): Promise<java_util_Iterator | null>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'org.apache.commons.io.filefilter.IOFileFilter'
     * @param var2 original type: 'org.apache.commons.io.filefilter.IOFileFilter'
     * @return original return type: 'java.util.Iterator'
     */
    static iterateFilesAndDirsSync(var0: java_io_File | null, var1: org_apache_commons_io_filefilter_IOFileFilter | JavaInterfaceProxy<org_apache_commons_io_filefilter_IOFileFilterInterface> | null, var2: org_apache_commons_io_filefilter_IOFileFilter | JavaInterfaceProxy<org_apache_commons_io_filefilter_IOFileFilterInterface> | null): java_util_Iterator | null;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'long'
     */
    static lastModifiedUnchecked(var0: java_io_File | null): Promise<number>;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'long'
     */
    static lastModifiedUncheckedSync(var0: java_io_File | null): number;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @param var2 original type: 'boolean'
     * @return original return type: 'void'
     */
    static moveDirectoryToDirectory(var0: java_io_File | null, var1: java_io_File | null, var2: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.io.File'
     * @param var2 original type: 'boolean'
     * @return original return type: 'void'
     */
    static moveDirectoryToDirectorySync(var0: java_io_File | null, var1: java_io_File | null, var2: java_lang_Boolean | boolean): void;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @return original return type: 'org.apache.commons.io.FileUtils'
     */
    static newInstanceAsync(): Promise<FileUtils>;
    constructor();
}
declare const FileUtils_base: typeof FileUtilsClass;
/**
 * Class org.apache.commons.io.FileUtils.
 *
 * This actually imports the java class for further use.
 * The class {@link FileUtilsClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class FileUtils extends FileUtils_base {
}
export default FileUtils;
//# sourceMappingURL=FileUtils.d.ts.map