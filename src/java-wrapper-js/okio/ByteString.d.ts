/// <reference types="node" />
import { JavaClass, BasicOrJavaType } from "java-bridge";
import { ByteString$Companion as okio_ByteString$Companion } from "./ByteString$Companion";
import { Integer as java_lang_Integer } from "./../java/lang/Integer";
import { ByteBuffer as java_nio_ByteBuffer } from "./../java/nio/ByteBuffer";
import { OutputStream as java_io_OutputStream } from "./../java/io/OutputStream";
import { InputStream as java_io_InputStream } from "./../java/io/InputStream";
import { Charset as java_nio_charset_Charset } from "./../java/nio/charset/Charset";
import { Buffer as okio_Buffer } from "./Buffer";
import { Long as java_lang_Long } from "./../java/lang/Long";
import { Class as java_lang_Class } from "./../java/lang/Class";
/**
 * This class just defines types, you should import {@link ByteString} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ByteStringClass extends JavaClass {
    /**
     * Original type: 'okio.ByteString'
     */
    static readonly EMPTY: ByteStringClass | null;
    /**
     * Original type: 'okio.ByteString$Companion'
     */
    static readonly Companion: okio_ByteString$Companion | null;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    compareTo(var0: BasicOrJavaType | null): Promise<number>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    compareToSync(var0: BasicOrJavaType | null): number;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @return original return type: 'int'
     */
    compareTo(var0: ByteStringClass | null): Promise<number>;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @return original return type: 'int'
     */
    compareToSync(var0: ByteStringClass | null): number;
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'int'
     */
    indexOf(var0: Buffer | null): Promise<number>;
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'int'
     */
    indexOfSync(var0: Buffer | null): number;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @return original return type: 'int'
     */
    indexOf(var0: ByteStringClass | null): Promise<number>;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @return original return type: 'int'
     */
    indexOfSync(var0: ByteStringClass | null): number;
    /**
     * @param var0 original type: 'byte[]'
     * @param var1 original type: 'int'
     * @return original return type: 'int'
     */
    indexOf(var0: Buffer | null, var1: java_lang_Integer | number): Promise<number>;
    /**
     * @param var0 original type: 'byte[]'
     * @param var1 original type: 'int'
     * @return original return type: 'int'
     */
    indexOfSync(var0: Buffer | null, var1: java_lang_Integer | number): number;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @param var1 original type: 'int'
     * @return original return type: 'int'
     */
    indexOf(var0: ByteStringClass | null, var1: java_lang_Integer | number): Promise<number>;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @param var1 original type: 'int'
     * @return original return type: 'int'
     */
    indexOfSync(var0: ByteStringClass | null, var1: java_lang_Integer | number): number;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'byte'
     */
    getByte(var0: java_lang_Integer | number): Promise<number>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'byte'
     */
    getByteSync(var0: java_lang_Integer | number): number;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @return original return type: 'boolean'
     */
    startsWith(var0: ByteStringClass | null): Promise<boolean>;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @return original return type: 'boolean'
     */
    startsWithSync(var0: ByteStringClass | null): boolean;
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'boolean'
     */
    startsWith(var0: Buffer | null): Promise<boolean>;
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'boolean'
     */
    startsWithSync(var0: Buffer | null): boolean;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @return original return type: 'int'
     */
    lastIndexOf(var0: ByteStringClass | null): Promise<number>;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @return original return type: 'int'
     */
    lastIndexOfSync(var0: ByteStringClass | null): number;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @param var1 original type: 'int'
     * @return original return type: 'int'
     */
    lastIndexOf(var0: ByteStringClass | null, var1: java_lang_Integer | number): Promise<number>;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @param var1 original type: 'int'
     * @return original return type: 'int'
     */
    lastIndexOfSync(var0: ByteStringClass | null, var1: java_lang_Integer | number): number;
    /**
     * @param var0 original type: 'byte[]'
     * @param var1 original type: 'int'
     * @return original return type: 'int'
     */
    lastIndexOf(var0: Buffer | null, var1: java_lang_Integer | number): Promise<number>;
    /**
     * @param var0 original type: 'byte[]'
     * @param var1 original type: 'int'
     * @return original return type: 'int'
     */
    lastIndexOfSync(var0: Buffer | null, var1: java_lang_Integer | number): number;
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'int'
     */
    lastIndexOf(var0: Buffer | null): Promise<number>;
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'int'
     */
    lastIndexOfSync(var0: Buffer | null): number;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'okio.ByteString'
     */
    substring(var0: java_lang_Integer | number): Promise<ByteString | null>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'okio.ByteString'
     */
    substringSync(var0: java_lang_Integer | number): ByteString | null;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @return original return type: 'okio.ByteString'
     */
    substring(var0: java_lang_Integer | number, var1: java_lang_Integer | number): Promise<ByteString | null>;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @return original return type: 'okio.ByteString'
     */
    substringSync(var0: java_lang_Integer | number, var1: java_lang_Integer | number): ByteString | null;
    /**
     * @return original return type: 'okio.ByteString'
     */
    substring(): Promise<ByteString | null>;
    /**
     * @return original return type: 'okio.ByteString'
     */
    substringSync(): ByteString | null;
    /**
     * @return original return type: 'int'
     */
    size(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    sizeSync(): number;
    /**
     * @param var0 original type: 'byte[]'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'okio.ByteString'
     */
    static of(var0: Buffer | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): Promise<ByteString | null>;
    /**
     * @param var0 original type: 'byte[]'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'okio.ByteString'
     */
    static ofSync(var0: Buffer | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): ByteString | null;
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'okio.ByteString'
     */
    static of(var0: Buffer | null): Promise<ByteString | null>;
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'okio.ByteString'
     */
    static ofSync(var0: Buffer | null): ByteString | null;
    /**
     * @param var0 original type: 'java.nio.ByteBuffer'
     * @return original return type: 'okio.ByteString'
     */
    static of(var0: java_nio_ByteBuffer | null): Promise<ByteString | null>;
    /**
     * @param var0 original type: 'java.nio.ByteBuffer'
     * @return original return type: 'okio.ByteString'
     */
    static ofSync(var0: java_nio_ByteBuffer | null): ByteString | null;
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'boolean'
     */
    endsWith(var0: Buffer | null): Promise<boolean>;
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'boolean'
     */
    endsWithSync(var0: Buffer | null): boolean;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @return original return type: 'boolean'
     */
    endsWith(var0: ByteStringClass | null): Promise<boolean>;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @return original return type: 'boolean'
     */
    endsWithSync(var0: ByteStringClass | null): boolean;
    /**
     * @param var0 original type: 'java.io.OutputStream'
     * @return original return type: 'void'
     */
    write(var0: java_io_OutputStream | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.OutputStream'
     * @return original return type: 'void'
     */
    writeSync(var0: java_io_OutputStream | null): void;
    /**
     * @param var0 original type: 'java.io.InputStream'
     * @param var1 original type: 'int'
     * @return original return type: 'okio.ByteString'
     */
    static read(var0: java_io_InputStream | null, var1: java_lang_Integer | number): Promise<ByteString | null>;
    /**
     * @param var0 original type: 'java.io.InputStream'
     * @param var1 original type: 'int'
     * @return original return type: 'okio.ByteString'
     */
    static readSync(var0: java_io_InputStream | null, var1: java_lang_Integer | number): ByteString | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    hex(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    hexSync(): string | null;
    /**
     * @return original return type: 'byte[]'
     */
    toByteArray(): Promise<Buffer | null>;
    /**
     * @return original return type: 'byte[]'
     */
    toByteArraySync(): Buffer | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    utf8(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    utf8Sync(): string | null;
    /**
     * @param var0 original type: 'java.nio.charset.Charset'
     * @return original return type: 'java.lang.String'
     */
    string(var0: java_nio_charset_Charset | null): Promise<string | null>;
    /**
     * @param var0 original type: 'java.nio.charset.Charset'
     * @return original return type: 'java.lang.String'
     */
    stringSync(var0: java_nio_charset_Charset | null): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'okio.ByteString'
     */
    static encodeUtf8(var0: string | null): Promise<ByteString | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'okio.ByteString'
     */
    static encodeUtf8Sync(var0: string | null): ByteString | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    base64(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    base64Sync(): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'okio.ByteString'
     */
    static decodeBase64(var0: string | null): Promise<ByteString | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'okio.ByteString'
     */
    static decodeBase64Sync(var0: string | null): ByteString | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.nio.charset.Charset'
     * @return original return type: 'okio.ByteString'
     */
    static encodeString(var0: string | null, var1: java_nio_charset_Charset | null): Promise<ByteString | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.nio.charset.Charset'
     * @return original return type: 'okio.ByteString'
     */
    static encodeStringSync(var0: string | null, var1: java_nio_charset_Charset | null): ByteString | null;
    /**
     * @return original return type: 'int'
     */
    /**
     * @return original return type: 'int'
     */
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'okio.ByteString'
     */
    static decodeHex(var0: string | null): Promise<ByteString | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'okio.ByteString'
     */
    static decodeHexSync(var0: string | null): ByteString | null;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'void'
     */
    setHashCode$okio(var0: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'void'
     */
    setHashCode$okioSync(var0: java_lang_Integer | number): void;
    /**
     * @return original return type: 'java.lang.String'
     */
    getUtf8$okio(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getUtf8$okioSync(): string | null;
    /**
     * @return original return type: 'int'
     */
    getHashCode$okio(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getHashCode$okioSync(): number;
    /**
     * @return original return type: 'okio.ByteString'
     */
    sha1(): Promise<ByteString | null>;
    /**
     * @return original return type: 'okio.ByteString'
     */
    sha1Sync(): ByteString | null;
    /**
     * @return original return type: 'okio.ByteString'
     */
    sha512(): Promise<ByteString | null>;
    /**
     * @return original return type: 'okio.ByteString'
     */
    sha512Sync(): ByteString | null;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @return original return type: 'okio.ByteString'
     */
    hmacSha512(var0: ByteStringClass | null): Promise<ByteString | null>;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @return original return type: 'okio.ByteString'
     */
    hmacSha512Sync(var0: ByteStringClass | null): ByteString | null;
    /**
     * @return original return type: 'byte[]'
     */
    getData$okio(): Promise<Buffer | null>;
    /**
     * @return original return type: 'byte[]'
     */
    getData$okioSync(): Buffer | null;
    /**
     * @return original return type: 'okio.ByteString'
     */
    sha256(): Promise<ByteString | null>;
    /**
     * @return original return type: 'okio.ByteString'
     */
    sha256Sync(): ByteString | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'okio.ByteString'
     * @return original return type: 'okio.ByteString'
     */
    hmac$okio(var0: string | null, var1: ByteStringClass | null): Promise<ByteString | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'okio.ByteString'
     * @return original return type: 'okio.ByteString'
     */
    hmac$okioSync(var0: string | null, var1: ByteStringClass | null): ByteString | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'okio.ByteString'
     */
    digest$okio(var0: string | null): Promise<ByteString | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'okio.ByteString'
     */
    digest$okioSync(var0: string | null): ByteString | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setUtf8$okio(var0: string | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    setUtf8$okioSync(var0: string | null): void;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @return original return type: 'okio.ByteString'
     */
    hmacSha256(var0: ByteStringClass | null): Promise<ByteString | null>;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @return original return type: 'okio.ByteString'
     */
    hmacSha256Sync(var0: ByteStringClass | null): ByteString | null;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @return original return type: 'okio.ByteString'
     */
    hmacSha1(var0: ByteStringClass | null): Promise<ByteString | null>;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @return original return type: 'okio.ByteString'
     */
    hmacSha1Sync(var0: ByteStringClass | null): ByteString | null;
    /**
     * @return original return type: 'okio.ByteString'
     */
    md5(): Promise<ByteString | null>;
    /**
     * @return original return type: 'okio.ByteString'
     */
    md5Sync(): ByteString | null;
    /**
     * @return original return type: 'byte[]'
     */
    internalArray$okio(): Promise<Buffer | null>;
    /**
     * @return original return type: 'byte[]'
     */
    internalArray$okioSync(): Buffer | null;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'byte'
     */
    internalGet$okio(var0: java_lang_Integer | number): Promise<number>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'byte'
     */
    internalGet$okioSync(var0: java_lang_Integer | number): number;
    /**
     * @return original return type: 'okio.ByteString'
     */
    toAsciiUppercase(): Promise<ByteString | null>;
    /**
     * @return original return type: 'okio.ByteString'
     */
    toAsciiUppercaseSync(): ByteString | null;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @param var4 original type: 'java.lang.Object'
     * @return original return type: 'okio.ByteString'
     */
    static substring$default(var0: ByteStringClass | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number, var3: java_lang_Integer | number, var4: BasicOrJavaType | null): Promise<ByteString | null>;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @param var4 original type: 'java.lang.Object'
     * @return original return type: 'okio.ByteString'
     */
    static substring$defaultSync(var0: ByteStringClass | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number, var3: java_lang_Integer | number, var4: BasicOrJavaType | null): ByteString | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    base64Url(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    base64UrlSync(): string | null;
    /**
     * @return original return type: 'okio.ByteString'
     */
    toAsciiLowercase(): Promise<ByteString | null>;
    /**
     * @return original return type: 'okio.ByteString'
     */
    toAsciiLowercaseSync(): ByteString | null;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'byte[]'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @return original return type: 'boolean'
     */
    rangeEquals(var0: java_lang_Integer | number, var1: Buffer | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number): Promise<boolean>;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'byte[]'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @return original return type: 'boolean'
     */
    rangeEqualsSync(var0: java_lang_Integer | number, var1: Buffer | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number): boolean;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'okio.ByteString'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @return original return type: 'boolean'
     */
    rangeEquals(var0: java_lang_Integer | number, var1: ByteStringClass | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number): Promise<boolean>;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'okio.ByteString'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @return original return type: 'boolean'
     */
    rangeEqualsSync(var0: java_lang_Integer | number, var1: ByteStringClass | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number): boolean;
    /**
     * @return original return type: 'java.nio.ByteBuffer'
     */
    asByteBuffer(): Promise<java_nio_ByteBuffer | null>;
    /**
     * @return original return type: 'java.nio.ByteBuffer'
     */
    asByteBufferSync(): java_nio_ByteBuffer | null;
    /**
     * @return original return type: 'int'
     */
    getSize$okio(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getSize$okioSync(): number;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @param var1 original type: 'okio.ByteString'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @param var4 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    static indexOf$default(var0: ByteStringClass | null, var1: ByteStringClass | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number, var4: BasicOrJavaType | null): Promise<number>;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @param var1 original type: 'okio.ByteString'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @param var4 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    static indexOf$defaultSync(var0: ByteStringClass | null, var1: ByteStringClass | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number, var4: BasicOrJavaType | null): number;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @param var1 original type: 'byte[]'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @param var4 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    static indexOf$default(var0: ByteStringClass | null, var1: Buffer | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number, var4: BasicOrJavaType | null): Promise<number>;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @param var1 original type: 'byte[]'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @param var4 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    static indexOf$defaultSync(var0: ByteStringClass | null, var1: Buffer | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number, var4: BasicOrJavaType | null): number;
    /**
     * @param var0 original type: 'okio.Buffer'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'void'
     */
    write$okio(var0: okio_Buffer | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'okio.Buffer'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'void'
     */
    write$okioSync(var0: okio_Buffer | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): void;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'byte'
     */
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'byte'
     */
    /**
     * @param var0 original type: 'okio.ByteString'
     * @param var1 original type: 'okio.ByteString'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @param var4 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    static lastIndexOf$default(var0: ByteStringClass | null, var1: ByteStringClass | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number, var4: BasicOrJavaType | null): Promise<number>;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @param var1 original type: 'okio.ByteString'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @param var4 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    static lastIndexOf$defaultSync(var0: ByteStringClass | null, var1: ByteStringClass | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number, var4: BasicOrJavaType | null): number;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @param var1 original type: 'byte[]'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @param var4 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    static lastIndexOf$default(var0: ByteStringClass | null, var1: Buffer | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number, var4: BasicOrJavaType | null): Promise<number>;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @param var1 original type: 'byte[]'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @param var4 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    static lastIndexOf$defaultSync(var0: ByteStringClass | null, var1: Buffer | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number, var4: BasicOrJavaType | null): number;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'okio.ByteString'
     */
    static newInstanceAsync(var0: Buffer | null): Promise<ByteString>;
    /**
     * @param var0 original type: 'byte[]'
     */
    constructor(var0: Buffer | null);
}
declare const ByteString_base: typeof ByteStringClass;
/**
 * Class okio.ByteString.
 *
 * This actually imports the java class for further use.
 * The class {@link ByteStringClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ByteString extends ByteString_base {
}
export default ByteString;
//# sourceMappingURL=ByteString.d.ts.map