import { JavaClass, BasicOrJavaType, JavaInterfaceProxy } from "java-bridge";
import { Segment as okio_Segment } from "./Segment";
import { Byte as java_lang_Byte } from "./../java/lang/Byte";
import { Long as java_lang_Long } from "./../java/lang/Long";
import { ByteString as okio_ByteString } from "./ByteString";
import { BufferedSink as okio_BufferedSink } from "./BufferedSink";
import { Source as okio_Source, SourceInterface as okio_SourceInterface } from "./Source";
import { Integer as java_lang_Integer } from "./../java/lang/Integer";
import { ByteBuffer as java_nio_ByteBuffer } from "./../java/nio/ByteBuffer";
import { BufferedSource as okio_BufferedSource } from "./BufferedSource";
import { Timeout as okio_Timeout } from "./Timeout";
import { InputStream as java_io_InputStream } from "./../java/io/InputStream";
import { OutputStream as java_io_OutputStream } from "./../java/io/OutputStream";
import { Charset as java_nio_charset_Charset } from "./../java/nio/charset/Charset";
import { Options as okio_Options } from "./Options";
import { Buffer$UnsafeCursor as okio_Buffer$UnsafeCursor } from "./Buffer$UnsafeCursor";
import { Sink as okio_Sink, SinkInterface as okio_SinkInterface } from "./Sink";
import { Class as java_lang_Class } from "./../java/lang/Class";
/**
 * This class just defines types, you should import {@link Buffer} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class BufferClass extends JavaClass {
    /**
     * Original type: 'okio.Segment'
     */
    head: okio_Segment | null;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'okio.Buffer'
     */
    clone(): Promise<Buffer | null>;
    /**
     * @return original return type: 'okio.Buffer'
     */
    cloneSync(): Buffer | null;
    /**
     * @return original return type: 'java.lang.Object'
     */
    clone(): Promise<BasicOrJavaType | null>;
    /**
     * @return original return type: 'java.lang.Object'
     */
    cloneSync(): BasicOrJavaType | null;
    /**
     * @param var0 original type: 'byte'
     * @param var1 original type: 'long'
     * @return original return type: 'long'
     */
    indexOf(var0: java_lang_Byte | number, var1: java_lang_Long | bigint | number): Promise<number>;
    /**
     * @param var0 original type: 'byte'
     * @param var1 original type: 'long'
     * @return original return type: 'long'
     */
    indexOfSync(var0: java_lang_Byte | number, var1: java_lang_Long | bigint | number): number;
    /**
     * @param var0 original type: 'byte'
     * @param var1 original type: 'long'
     * @param var2 original type: 'long'
     * @return original return type: 'long'
     */
    indexOf(var0: java_lang_Byte | number, var1: java_lang_Long | bigint | number, var2: java_lang_Long | bigint | number): Promise<number>;
    /**
     * @param var0 original type: 'byte'
     * @param var1 original type: 'long'
     * @param var2 original type: 'long'
     * @return original return type: 'long'
     */
    indexOfSync(var0: java_lang_Byte | number, var1: java_lang_Long | bigint | number, var2: java_lang_Long | bigint | number): number;
    /**
     * @param var0 original type: 'byte'
     * @return original return type: 'long'
     */
    indexOf(var0: java_lang_Byte | number): Promise<number>;
    /**
     * @param var0 original type: 'byte'
     * @return original return type: 'long'
     */
    indexOfSync(var0: java_lang_Byte | number): number;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @return original return type: 'long'
     */
    indexOf(var0: okio_ByteString | null): Promise<number>;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @return original return type: 'long'
     */
    indexOfSync(var0: okio_ByteString | null): number;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @param var1 original type: 'long'
     * @return original return type: 'long'
     */
    indexOf(var0: okio_ByteString | null, var1: java_lang_Long | bigint | number): Promise<number>;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @param var1 original type: 'long'
     * @return original return type: 'long'
     */
    indexOfSync(var0: okio_ByteString | null, var1: java_lang_Long | bigint | number): number;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'byte'
     */
    getByte(var0: java_lang_Long | bigint | number): Promise<number>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'byte'
     */
    getByteSync(var0: java_lang_Long | bigint | number): number;
    /**
     * @return original return type: 'void'
     */
    clear(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    clearSync(): void;
    /**
     * @return original return type: 'void'
     */
    flush(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    flushSync(): void;
    /**
     * @return original return type: 'long'
     */
    size(): Promise<number>;
    /**
     * @return original return type: 'long'
     */
    sizeSync(): number;
    /**
     * @return original return type: 'okio.Buffer'
     */
    buffer(): Promise<Buffer | null>;
    /**
     * @return original return type: 'okio.Buffer'
     */
    bufferSync(): Buffer | null;
    /**
     * @return original return type: 'boolean'
     */
    isOpen(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isOpenSync(): boolean;
    /**
     * @param var0 original type: 'okio.Buffer'
     * @param var1 original type: 'long'
     * @return original return type: 'void'
     */
    write(var0: BufferClass | null, var1: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'okio.Buffer'
     * @param var1 original type: 'long'
     * @return original return type: 'void'
     */
    writeSync(var0: BufferClass | null, var1: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'okio.BufferedSink'
     */
    write(var0: Buffer | null): Promise<okio_BufferedSink | null>;
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'okio.BufferedSink'
     */
    writeSync(var0: Buffer | null): okio_BufferedSink | null;
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'okio.Buffer'
     */
    write(var0: Buffer | null): Promise<Buffer | null>;
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'okio.Buffer'
     */
    writeSync(var0: Buffer | null): Buffer | null;
    /**
     * @param var0 original type: 'okio.Source'
     * @param var1 original type: 'long'
     * @return original return type: 'okio.Buffer'
     */
    write(var0: okio_Source | JavaInterfaceProxy<okio_SourceInterface> | null, var1: java_lang_Long | bigint | number): Promise<Buffer | null>;
    /**
     * @param var0 original type: 'okio.Source'
     * @param var1 original type: 'long'
     * @return original return type: 'okio.Buffer'
     */
    writeSync(var0: okio_Source | JavaInterfaceProxy<okio_SourceInterface> | null, var1: java_lang_Long | bigint | number): Buffer | null;
    /**
     * @param var0 original type: 'okio.Source'
     * @param var1 original type: 'long'
     * @return original return type: 'okio.BufferedSink'
     */
    write(var0: okio_Source | JavaInterfaceProxy<okio_SourceInterface> | null, var1: java_lang_Long | bigint | number): Promise<okio_BufferedSink | null>;
    /**
     * @param var0 original type: 'okio.Source'
     * @param var1 original type: 'long'
     * @return original return type: 'okio.BufferedSink'
     */
    writeSync(var0: okio_Source | JavaInterfaceProxy<okio_SourceInterface> | null, var1: java_lang_Long | bigint | number): okio_BufferedSink | null;
    /**
     * @param var0 original type: 'byte[]'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'okio.BufferedSink'
     */
    write(var0: Buffer | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): Promise<okio_BufferedSink | null>;
    /**
     * @param var0 original type: 'byte[]'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'okio.BufferedSink'
     */
    writeSync(var0: Buffer | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): okio_BufferedSink | null;
    /**
     * @param var0 original type: 'byte[]'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'okio.Buffer'
     */
    write(var0: Buffer | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): Promise<Buffer | null>;
    /**
     * @param var0 original type: 'byte[]'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'okio.Buffer'
     */
    writeSync(var0: Buffer | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): Buffer | null;
    /**
     * @param var0 original type: 'java.nio.ByteBuffer'
     * @return original return type: 'int'
     */
    write(var0: java_nio_ByteBuffer | null): Promise<number>;
    /**
     * @param var0 original type: 'java.nio.ByteBuffer'
     * @return original return type: 'int'
     */
    writeSync(var0: java_nio_ByteBuffer | null): number;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @return original return type: 'okio.Buffer'
     */
    write(var0: okio_ByteString | null): Promise<Buffer | null>;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @return original return type: 'okio.Buffer'
     */
    writeSync(var0: okio_ByteString | null): Buffer | null;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @return original return type: 'okio.BufferedSink'
     */
    write(var0: okio_ByteString | null): Promise<okio_BufferedSink | null>;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @return original return type: 'okio.BufferedSink'
     */
    writeSync(var0: okio_ByteString | null): okio_BufferedSink | null;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'okio.Buffer'
     */
    write(var0: okio_ByteString | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): Promise<Buffer | null>;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'okio.Buffer'
     */
    writeSync(var0: okio_ByteString | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): Buffer | null;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'okio.BufferedSink'
     */
    write(var0: okio_ByteString | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): Promise<okio_BufferedSink | null>;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'okio.BufferedSink'
     */
    writeSync(var0: okio_ByteString | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): okio_BufferedSink | null;
    /**
     * @param var0 original type: 'byte[]'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'int'
     */
    read(var0: Buffer | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): Promise<number>;
    /**
     * @param var0 original type: 'byte[]'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'int'
     */
    readSync(var0: Buffer | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): number;
    /**
     * @param var0 original type: 'java.nio.ByteBuffer'
     * @return original return type: 'int'
     */
    read(var0: java_nio_ByteBuffer | null): Promise<number>;
    /**
     * @param var0 original type: 'java.nio.ByteBuffer'
     * @return original return type: 'int'
     */
    readSync(var0: java_nio_ByteBuffer | null): number;
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'int'
     */
    read(var0: Buffer | null): Promise<number>;
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'int'
     */
    readSync(var0: Buffer | null): number;
    /**
     * @param var0 original type: 'okio.Buffer'
     * @param var1 original type: 'long'
     * @return original return type: 'long'
     */
    read(var0: BufferClass | null, var1: java_lang_Long | bigint | number): Promise<number>;
    /**
     * @param var0 original type: 'okio.Buffer'
     * @param var1 original type: 'long'
     * @return original return type: 'long'
     */
    readSync(var0: BufferClass | null, var1: java_lang_Long | bigint | number): number;
    /**
     * @return original return type: 'void'
     */
    close(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    closeSync(): void;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'okio.Buffer'
     */
    writeInt(var0: java_lang_Integer | number): Promise<Buffer | null>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'okio.Buffer'
     */
    writeIntSync(var0: java_lang_Integer | number): Buffer | null;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'okio.BufferedSink'
     */
    writeInt(var0: java_lang_Integer | number): Promise<okio_BufferedSink | null>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'okio.BufferedSink'
     */
    writeIntSync(var0: java_lang_Integer | number): okio_BufferedSink | null;
    /**
     * @return original return type: 'int'
     */
    readInt(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    readIntSync(): number;
    /**
     * @return original return type: 'okio.Buffer'
     */
    copy(): Promise<Buffer | null>;
    /**
     * @return original return type: 'okio.Buffer'
     */
    copySync(): Buffer | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    skip(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    skipSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'okio.BufferedSource'
     */
    peek(): Promise<okio_BufferedSource | null>;
    /**
     * @return original return type: 'okio.BufferedSource'
     */
    peekSync(): okio_BufferedSource | null;
    /**
     * @return original return type: 'okio.Timeout'
     */
    timeout(): Promise<okio_Timeout | null>;
    /**
     * @return original return type: 'okio.Timeout'
     */
    timeoutSync(): okio_Timeout | null;
    /**
     * @return original return type: 'okio.ByteString'
     */
    snapshot(): Promise<okio_ByteString | null>;
    /**
     * @return original return type: 'okio.ByteString'
     */
    snapshotSync(): okio_ByteString | null;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'okio.ByteString'
     */
    snapshot(var0: java_lang_Integer | number): Promise<okio_ByteString | null>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'okio.ByteString'
     */
    snapshotSync(var0: java_lang_Integer | number): okio_ByteString | null;
    /**
     * @return original return type: 'long'
     */
    readLong(): Promise<number>;
    /**
     * @return original return type: 'long'
     */
    readLongSync(): number;
    /**
     * @return original return type: 'byte'
     */
    readByte(): Promise<number>;
    /**
     * @return original return type: 'byte'
     */
    readByteSync(): number;
    /**
     * @return original return type: 'short'
     */
    readShort(): Promise<number>;
    /**
     * @return original return type: 'short'
     */
    readShortSync(): number;
    /**
     * @return original return type: 'java.io.InputStream'
     */
    inputStream(): Promise<java_io_InputStream | null>;
    /**
     * @return original return type: 'java.io.InputStream'
     */
    inputStreamSync(): java_io_InputStream | null;
    /**
     * @return original return type: 'java.io.OutputStream'
     */
    outputStream(): Promise<java_io_OutputStream | null>;
    /**
     * @return original return type: 'java.io.OutputStream'
     */
    outputStreamSync(): java_io_OutputStream | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.nio.charset.Charset'
     * @return original return type: 'java.lang.String'
     */
    readString(var0: java_lang_Long | bigint | number, var1: java_nio_charset_Charset | null): Promise<string | null>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.nio.charset.Charset'
     * @return original return type: 'java.lang.String'
     */
    readStringSync(var0: java_lang_Long | bigint | number, var1: java_nio_charset_Charset | null): string | null;
    /**
     * @param var0 original type: 'java.nio.charset.Charset'
     * @return original return type: 'java.lang.String'
     */
    readString(var0: java_nio_charset_Charset | null): Promise<string | null>;
    /**
     * @param var0 original type: 'java.nio.charset.Charset'
     * @return original return type: 'java.lang.String'
     */
    readStringSync(var0: java_nio_charset_Charset | null): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.nio.charset.Charset'
     * @return original return type: 'okio.BufferedSink'
     */
    writeString(var0: string | null, var1: java_nio_charset_Charset | null): Promise<okio_BufferedSink | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.nio.charset.Charset'
     * @return original return type: 'okio.BufferedSink'
     */
    writeStringSync(var0: string | null, var1: java_nio_charset_Charset | null): okio_BufferedSink | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.nio.charset.Charset'
     * @return original return type: 'okio.Buffer'
     */
    writeString(var0: string | null, var1: java_nio_charset_Charset | null): Promise<Buffer | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.nio.charset.Charset'
     * @return original return type: 'okio.Buffer'
     */
    writeStringSync(var0: string | null, var1: java_nio_charset_Charset | null): Buffer | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @param var3 original type: 'java.nio.charset.Charset'
     * @return original return type: 'okio.Buffer'
     */
    writeString(var0: string | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number, var3: java_nio_charset_Charset | null): Promise<Buffer | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @param var3 original type: 'java.nio.charset.Charset'
     * @return original return type: 'okio.Buffer'
     */
    writeStringSync(var0: string | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number, var3: java_nio_charset_Charset | null): Buffer | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @param var3 original type: 'java.nio.charset.Charset'
     * @return original return type: 'okio.BufferedSink'
     */
    writeString(var0: string | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number, var3: java_nio_charset_Charset | null): Promise<okio_BufferedSink | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @param var3 original type: 'java.nio.charset.Charset'
     * @return original return type: 'okio.BufferedSink'
     */
    writeStringSync(var0: string | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number, var3: java_nio_charset_Charset | null): okio_BufferedSink | null;
    /**
     * @param var0 original type: 'okio.Buffer'
     * @param var1 original type: 'long'
     * @return original return type: 'void'
     */
    readFully(var0: BufferClass | null, var1: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'okio.Buffer'
     * @param var1 original type: 'long'
     * @return original return type: 'void'
     */
    readFullySync(var0: BufferClass | null, var1: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'void'
     */
    readFully(var0: Buffer | null): Promise<void>;
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'void'
     */
    readFullySync(var0: Buffer | null): void;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'okio.BufferedSink'
     */
    writeByte(var0: java_lang_Integer | number): Promise<okio_BufferedSink | null>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'okio.BufferedSink'
     */
    writeByteSync(var0: java_lang_Integer | number): okio_BufferedSink | null;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'okio.Buffer'
     */
    writeByte(var0: java_lang_Integer | number): Promise<Buffer | null>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'okio.Buffer'
     */
    writeByteSync(var0: java_lang_Integer | number): Buffer | null;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'okio.BufferedSink'
     */
    writeShort(var0: java_lang_Integer | number): Promise<okio_BufferedSink | null>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'okio.BufferedSink'
     */
    writeShortSync(var0: java_lang_Integer | number): okio_BufferedSink | null;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'okio.Buffer'
     */
    writeShort(var0: java_lang_Integer | number): Promise<Buffer | null>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'okio.Buffer'
     */
    writeShortSync(var0: java_lang_Integer | number): Buffer | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'okio.BufferedSink'
     */
    writeLong(var0: java_lang_Long | bigint | number): Promise<okio_BufferedSink | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'okio.BufferedSink'
     */
    writeLongSync(var0: java_lang_Long | bigint | number): okio_BufferedSink | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'okio.Buffer'
     */
    writeLong(var0: java_lang_Long | bigint | number): Promise<Buffer | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'okio.Buffer'
     */
    writeLongSync(var0: java_lang_Long | bigint | number): Buffer | null;
    /**
     * @param var0 original type: 'java.io.OutputStream'
     * @return original return type: 'okio.Buffer'
     */
    writeTo(var0: java_io_OutputStream | null): Promise<Buffer | null>;
    /**
     * @param var0 original type: 'java.io.OutputStream'
     * @return original return type: 'okio.Buffer'
     */
    writeToSync(var0: java_io_OutputStream | null): Buffer | null;
    /**
     * @param var0 original type: 'java.io.OutputStream'
     * @param var1 original type: 'long'
     * @return original return type: 'okio.Buffer'
     */
    writeTo(var0: java_io_OutputStream | null, var1: java_lang_Long | bigint | number): Promise<Buffer | null>;
    /**
     * @param var0 original type: 'java.io.OutputStream'
     * @param var1 original type: 'long'
     * @return original return type: 'okio.Buffer'
     */
    writeToSync(var0: java_io_OutputStream | null, var1: java_lang_Long | bigint | number): Buffer | null;
    /**
     * @param var0 original type: 'java.io.InputStream'
     * @param var1 original type: 'long'
     * @return original return type: 'okio.Buffer'
     */
    readFrom(var0: java_io_InputStream | null, var1: java_lang_Long | bigint | number): Promise<Buffer | null>;
    /**
     * @param var0 original type: 'java.io.InputStream'
     * @param var1 original type: 'long'
     * @return original return type: 'okio.Buffer'
     */
    readFromSync(var0: java_io_InputStream | null, var1: java_lang_Long | bigint | number): Buffer | null;
    /**
     * @param var0 original type: 'java.io.InputStream'
     * @return original return type: 'okio.Buffer'
     */
    readFrom(var0: java_io_InputStream | null): Promise<Buffer | null>;
    /**
     * @param var0 original type: 'java.io.InputStream'
     * @return original return type: 'okio.Buffer'
     */
    readFromSync(var0: java_io_InputStream | null): Buffer | null;
    /**
     * @return original return type: 'okio.Buffer'
     */
    getBuffer(): Promise<Buffer | null>;
    /**
     * @return original return type: 'okio.Buffer'
     */
    getBufferSync(): Buffer | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    require(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    requireSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'okio.Options'
     * @return original return type: 'int'
     */
    select(var0: okio_Options | null): Promise<number>;
    /**
     * @param var0 original type: 'okio.Options'
     * @return original return type: 'int'
     */
    selectSync(var0: okio_Options | null): number;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'boolean'
     */
    request(var0: java_lang_Long | bigint | number): Promise<boolean>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'boolean'
     */
    requestSync(var0: java_lang_Long | bigint | number): boolean;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @param var1 original type: 'long'
     * @return original return type: 'long'
     */
    indexOfElement(var0: okio_ByteString | null, var1: java_lang_Long | bigint | number): Promise<number>;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @param var1 original type: 'long'
     * @return original return type: 'long'
     */
    indexOfElementSync(var0: okio_ByteString | null, var1: java_lang_Long | bigint | number): number;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @return original return type: 'long'
     */
    indexOfElement(var0: okio_ByteString | null): Promise<number>;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @return original return type: 'long'
     */
    indexOfElementSync(var0: okio_ByteString | null): number;
    /**
     * @param var0 original type: 'okio.Buffer$UnsafeCursor'
     * @return original return type: 'okio.Buffer$UnsafeCursor'
     */
    readUnsafe(var0: okio_Buffer$UnsafeCursor | null): Promise<okio_Buffer$UnsafeCursor | null>;
    /**
     * @param var0 original type: 'okio.Buffer$UnsafeCursor'
     * @return original return type: 'okio.Buffer$UnsafeCursor'
     */
    readUnsafeSync(var0: okio_Buffer$UnsafeCursor | null): okio_Buffer$UnsafeCursor | null;
    /**
     * @return original return type: 'okio.Buffer$UnsafeCursor'
     */
    readUnsafe(): Promise<okio_Buffer$UnsafeCursor | null>;
    /**
     * @return original return type: 'okio.Buffer$UnsafeCursor'
     */
    readUnsafeSync(): okio_Buffer$UnsafeCursor | null;
    /**
     * @return original return type: 'okio.Buffer$UnsafeCursor'
     */
    readAndWriteUnsafe(): Promise<okio_Buffer$UnsafeCursor | null>;
    /**
     * @return original return type: 'okio.Buffer$UnsafeCursor'
     */
    readAndWriteUnsafeSync(): okio_Buffer$UnsafeCursor | null;
    /**
     * @param var0 original type: 'okio.Buffer$UnsafeCursor'
     * @return original return type: 'okio.Buffer$UnsafeCursor'
     */
    readAndWriteUnsafe(var0: okio_Buffer$UnsafeCursor | null): Promise<okio_Buffer$UnsafeCursor | null>;
    /**
     * @param var0 original type: 'okio.Buffer$UnsafeCursor'
     * @return original return type: 'okio.Buffer$UnsafeCursor'
     */
    readAndWriteUnsafeSync(var0: okio_Buffer$UnsafeCursor | null): okio_Buffer$UnsafeCursor | null;
    /**
     * @param var0 original type: 'okio.Buffer'
     * @param var1 original type: 'okio.Buffer$UnsafeCursor'
     * @param var2 original type: 'int'
     * @param var3 original type: 'java.lang.Object'
     * @return original return type: 'okio.Buffer$UnsafeCursor'
     */
    static readUnsafe$default(var0: BufferClass | null, var1: okio_Buffer$UnsafeCursor | null, var2: java_lang_Integer | number, var3: BasicOrJavaType | null): Promise<okio_Buffer$UnsafeCursor | null>;
    /**
     * @param var0 original type: 'okio.Buffer'
     * @param var1 original type: 'okio.Buffer$UnsafeCursor'
     * @param var2 original type: 'int'
     * @param var3 original type: 'java.lang.Object'
     * @return original return type: 'okio.Buffer$UnsafeCursor'
     */
    static readUnsafe$defaultSync(var0: BufferClass | null, var1: okio_Buffer$UnsafeCursor | null, var2: java_lang_Integer | number, var3: BasicOrJavaType | null): okio_Buffer$UnsafeCursor | null;
    /**
     * @param var0 original type: 'okio.Buffer'
     * @param var1 original type: 'java.io.OutputStream'
     * @param var2 original type: 'long'
     * @param var3 original type: 'long'
     * @param var4 original type: 'int'
     * @param var5 original type: 'java.lang.Object'
     * @return original return type: 'okio.Buffer'
     */
    static copyTo$default(var0: BufferClass | null, var1: java_io_OutputStream | null, var2: java_lang_Long | bigint | number, var3: java_lang_Long | bigint | number, var4: java_lang_Integer | number, var5: BasicOrJavaType | null): Promise<Buffer | null>;
    /**
     * @param var0 original type: 'okio.Buffer'
     * @param var1 original type: 'java.io.OutputStream'
     * @param var2 original type: 'long'
     * @param var3 original type: 'long'
     * @param var4 original type: 'int'
     * @param var5 original type: 'java.lang.Object'
     * @return original return type: 'okio.Buffer'
     */
    static copyTo$defaultSync(var0: BufferClass | null, var1: java_io_OutputStream | null, var2: java_lang_Long | bigint | number, var3: java_lang_Long | bigint | number, var4: java_lang_Integer | number, var5: BasicOrJavaType | null): Buffer | null;
    /**
     * @param var0 original type: 'okio.Buffer'
     * @param var1 original type: 'okio.Buffer'
     * @param var2 original type: 'long'
     * @param var3 original type: 'long'
     * @param var4 original type: 'int'
     * @param var5 original type: 'java.lang.Object'
     * @return original return type: 'okio.Buffer'
     */
    static copyTo$default(var0: BufferClass | null, var1: BufferClass | null, var2: java_lang_Long | bigint | number, var3: java_lang_Long | bigint | number, var4: java_lang_Integer | number, var5: BasicOrJavaType | null): Promise<Buffer | null>;
    /**
     * @param var0 original type: 'okio.Buffer'
     * @param var1 original type: 'okio.Buffer'
     * @param var2 original type: 'long'
     * @param var3 original type: 'long'
     * @param var4 original type: 'int'
     * @param var5 original type: 'java.lang.Object'
     * @return original return type: 'okio.Buffer'
     */
    static copyTo$defaultSync(var0: BufferClass | null, var1: BufferClass | null, var2: java_lang_Long | bigint | number, var3: java_lang_Long | bigint | number, var4: java_lang_Integer | number, var5: BasicOrJavaType | null): Buffer | null;
    /**
     * @param var0 original type: 'okio.Buffer'
     * @param var1 original type: 'okio.Buffer'
     * @param var2 original type: 'long'
     * @param var3 original type: 'int'
     * @param var4 original type: 'java.lang.Object'
     * @return original return type: 'okio.Buffer'
     */
    static copyTo$default(var0: BufferClass | null, var1: BufferClass | null, var2: java_lang_Long | bigint | number, var3: java_lang_Integer | number, var4: BasicOrJavaType | null): Promise<Buffer | null>;
    /**
     * @param var0 original type: 'okio.Buffer'
     * @param var1 original type: 'okio.Buffer'
     * @param var2 original type: 'long'
     * @param var3 original type: 'int'
     * @param var4 original type: 'java.lang.Object'
     * @return original return type: 'okio.Buffer'
     */
    static copyTo$defaultSync(var0: BufferClass | null, var1: BufferClass | null, var2: java_lang_Long | bigint | number, var3: java_lang_Integer | number, var4: BasicOrJavaType | null): Buffer | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    setSize$okio(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    setSize$okioSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'okio.BufferedSink'
     */
    emit(): Promise<okio_BufferedSink | null>;
    /**
     * @return original return type: 'okio.BufferedSink'
     */
    emitSync(): okio_BufferedSink | null;
    /**
     * @return original return type: 'okio.Buffer'
     */
    emit(): Promise<Buffer | null>;
    /**
     * @return original return type: 'okio.Buffer'
     */
    emitSync(): Buffer | null;
    /**
     * @return original return type: 'boolean'
     */
    exhausted(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    exhaustedSync(): boolean;
    /**
     * @param var0 original type: 'okio.Buffer'
     * @param var1 original type: 'long'
     * @param var2 original type: 'long'
     * @return original return type: 'okio.Buffer'
     */
    copyTo(var0: BufferClass | null, var1: java_lang_Long | bigint | number, var2: java_lang_Long | bigint | number): Promise<Buffer | null>;
    /**
     * @param var0 original type: 'okio.Buffer'
     * @param var1 original type: 'long'
     * @param var2 original type: 'long'
     * @return original return type: 'okio.Buffer'
     */
    copyToSync(var0: BufferClass | null, var1: java_lang_Long | bigint | number, var2: java_lang_Long | bigint | number): Buffer | null;
    /**
     * @param var0 original type: 'okio.Buffer'
     * @param var1 original type: 'long'
     * @return original return type: 'okio.Buffer'
     */
    copyTo(var0: BufferClass | null, var1: java_lang_Long | bigint | number): Promise<Buffer | null>;
    /**
     * @param var0 original type: 'okio.Buffer'
     * @param var1 original type: 'long'
     * @return original return type: 'okio.Buffer'
     */
    copyToSync(var0: BufferClass | null, var1: java_lang_Long | bigint | number): Buffer | null;
    /**
     * @param var0 original type: 'java.io.OutputStream'
     * @param var1 original type: 'long'
     * @param var2 original type: 'long'
     * @return original return type: 'okio.Buffer'
     */
    copyTo(var0: java_io_OutputStream | null, var1: java_lang_Long | bigint | number, var2: java_lang_Long | bigint | number): Promise<Buffer | null>;
    /**
     * @param var0 original type: 'java.io.OutputStream'
     * @param var1 original type: 'long'
     * @param var2 original type: 'long'
     * @return original return type: 'okio.Buffer'
     */
    copyToSync(var0: java_io_OutputStream | null, var1: java_lang_Long | bigint | number, var2: java_lang_Long | bigint | number): Buffer | null;
    /**
     * @param var0 original type: 'java.io.OutputStream'
     * @param var1 original type: 'long'
     * @return original return type: 'okio.Buffer'
     */
    copyTo(var0: java_io_OutputStream | null, var1: java_lang_Long | bigint | number): Promise<Buffer | null>;
    /**
     * @param var0 original type: 'java.io.OutputStream'
     * @param var1 original type: 'long'
     * @return original return type: 'okio.Buffer'
     */
    copyToSync(var0: java_io_OutputStream | null, var1: java_lang_Long | bigint | number): Buffer | null;
    /**
     * @param var0 original type: 'java.io.OutputStream'
     * @return original return type: 'okio.Buffer'
     */
    copyTo(var0: java_io_OutputStream | null): Promise<Buffer | null>;
    /**
     * @param var0 original type: 'java.io.OutputStream'
     * @return original return type: 'okio.Buffer'
     */
    copyToSync(var0: java_io_OutputStream | null): Buffer | null;
    /**
     * @return original return type: 'long'
     */
    readDecimalLong(): Promise<number>;
    /**
     * @return original return type: 'long'
     */
    readDecimalLongSync(): number;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'okio.BufferedSink'
     */
    writeDecimalLong(var0: java_lang_Long | bigint | number): Promise<okio_BufferedSink | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'okio.BufferedSink'
     */
    writeDecimalLongSync(var0: java_lang_Long | bigint | number): okio_BufferedSink | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'okio.Buffer'
     */
    writeDecimalLong(var0: java_lang_Long | bigint | number): Promise<Buffer | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'okio.Buffer'
     */
    writeDecimalLongSync(var0: java_lang_Long | bigint | number): Buffer | null;
    /**
     * @return original return type: 'short'
     */
    readShortLe(): Promise<number>;
    /**
     * @return original return type: 'short'
     */
    readShortLeSync(): number;
    /**
     * @param var0 original type: 'okio.Buffer'
     * @param var1 original type: 'java.io.OutputStream'
     * @param var2 original type: 'long'
     * @param var3 original type: 'int'
     * @param var4 original type: 'java.lang.Object'
     * @return original return type: 'okio.Buffer'
     */
    static writeTo$default(var0: BufferClass | null, var1: java_io_OutputStream | null, var2: java_lang_Long | bigint | number, var3: java_lang_Integer | number, var4: BasicOrJavaType | null): Promise<Buffer | null>;
    /**
     * @param var0 original type: 'okio.Buffer'
     * @param var1 original type: 'java.io.OutputStream'
     * @param var2 original type: 'long'
     * @param var3 original type: 'int'
     * @param var4 original type: 'java.lang.Object'
     * @return original return type: 'okio.Buffer'
     */
    static writeTo$defaultSync(var0: BufferClass | null, var1: java_io_OutputStream | null, var2: java_lang_Long | bigint | number, var3: java_lang_Integer | number, var4: BasicOrJavaType | null): Buffer | null;
    /**
     * @return original return type: 'int'
     */
    readIntLe(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    readIntLeSync(): number;
    /**
     * @return original return type: 'long'
     */
    readLongLe(): Promise<number>;
    /**
     * @return original return type: 'long'
     */
    readLongLeSync(): number;
    /**
     * @return original return type: 'byte[]'
     */
    readByteArray(): Promise<Buffer | null>;
    /**
     * @return original return type: 'byte[]'
     */
    readByteArraySync(): Buffer | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'byte[]'
     */
    readByteArray(var0: java_lang_Long | bigint | number): Promise<Buffer | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'byte[]'
     */
    readByteArraySync(var0: java_lang_Long | bigint | number): Buffer | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.lang.String'
     */
    readUtf8(var0: java_lang_Long | bigint | number): Promise<string | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.lang.String'
     */
    readUtf8Sync(var0: java_lang_Long | bigint | number): string | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    readUtf8(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    readUtf8Sync(): string | null;
    /**
     * @param var0 original type: 'okio.Sink'
     * @return original return type: 'long'
     */
    readAll(var0: okio_Sink | JavaInterfaceProxy<okio_SinkInterface> | null): Promise<number>;
    /**
     * @param var0 original type: 'okio.Sink'
     * @return original return type: 'long'
     */
    readAllSync(var0: okio_Sink | JavaInterfaceProxy<okio_SinkInterface> | null): number;
    /**
     * @return original return type: 'int'
     */
    readUtf8CodePoint(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    readUtf8CodePointSync(): number;
    /**
     * @return original return type: 'java.lang.String'
     */
    readUtf8Line(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    readUtf8LineSync(): string | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.lang.String'
     */
    readUtf8LineStrict(var0: java_lang_Long | bigint | number): Promise<string | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.lang.String'
     */
    readUtf8LineStrictSync(var0: java_lang_Long | bigint | number): string | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    readUtf8LineStrict(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    readUtf8LineStrictSync(): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'okio.Buffer'
     */
    writeUtf8(var0: string | null): Promise<Buffer | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'okio.Buffer'
     */
    writeUtf8Sync(var0: string | null): Buffer | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'okio.BufferedSink'
     */
    writeUtf8(var0: string | null): Promise<okio_BufferedSink | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'okio.BufferedSink'
     */
    writeUtf8Sync(var0: string | null): okio_BufferedSink | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'okio.Buffer'
     */
    writeUtf8(var0: string | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): Promise<Buffer | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'okio.Buffer'
     */
    writeUtf8Sync(var0: string | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): Buffer | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'okio.BufferedSink'
     */
    writeUtf8(var0: string | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): Promise<okio_BufferedSink | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'okio.BufferedSink'
     */
    writeUtf8Sync(var0: string | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): okio_BufferedSink | null;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'okio.BufferedSink'
     */
    writeShortLe(var0: java_lang_Integer | number): Promise<okio_BufferedSink | null>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'okio.BufferedSink'
     */
    writeShortLeSync(var0: java_lang_Integer | number): okio_BufferedSink | null;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'okio.Buffer'
     */
    writeShortLe(var0: java_lang_Integer | number): Promise<Buffer | null>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'okio.Buffer'
     */
    writeShortLeSync(var0: java_lang_Integer | number): Buffer | null;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'okio.Buffer'
     */
    writeUtf8CodePoint(var0: java_lang_Integer | number): Promise<Buffer | null>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'okio.Buffer'
     */
    writeUtf8CodePointSync(var0: java_lang_Integer | number): Buffer | null;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'okio.BufferedSink'
     */
    writeUtf8CodePoint(var0: java_lang_Integer | number): Promise<okio_BufferedSink | null>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'okio.BufferedSink'
     */
    writeUtf8CodePointSync(var0: java_lang_Integer | number): okio_BufferedSink | null;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'okio.BufferedSink'
     */
    writeIntLe(var0: java_lang_Integer | number): Promise<okio_BufferedSink | null>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'okio.BufferedSink'
     */
    writeIntLeSync(var0: java_lang_Integer | number): okio_BufferedSink | null;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'okio.Buffer'
     */
    writeIntLe(var0: java_lang_Integer | number): Promise<Buffer | null>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'okio.Buffer'
     */
    writeIntLeSync(var0: java_lang_Integer | number): Buffer | null;
    /**
     * @param var0 original type: 'okio.Source'
     * @return original return type: 'long'
     */
    writeAll(var0: okio_Source | JavaInterfaceProxy<okio_SourceInterface> | null): Promise<number>;
    /**
     * @param var0 original type: 'okio.Source'
     * @return original return type: 'long'
     */
    writeAllSync(var0: okio_Source | JavaInterfaceProxy<okio_SourceInterface> | null): number;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'okio.Buffer'
     */
    writeLongLe(var0: java_lang_Long | bigint | number): Promise<Buffer | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'okio.Buffer'
     */
    writeLongLeSync(var0: java_lang_Long | bigint | number): Buffer | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'okio.BufferedSink'
     */
    writeLongLe(var0: java_lang_Long | bigint | number): Promise<okio_BufferedSink | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'okio.BufferedSink'
     */
    writeLongLeSync(var0: java_lang_Long | bigint | number): okio_BufferedSink | null;
    /**
     * @return original return type: 'long'
     */
    /**
     * @return original return type: 'long'
     */
    /**
     * @return original return type: 'okio.ByteString'
     */
    readByteString(): Promise<okio_ByteString | null>;
    /**
     * @return original return type: 'okio.ByteString'
     */
    readByteStringSync(): okio_ByteString | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'okio.ByteString'
     */
    readByteString(var0: java_lang_Long | bigint | number): Promise<okio_ByteString | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'okio.ByteString'
     */
    readByteStringSync(var0: java_lang_Long | bigint | number): okio_ByteString | null;
    /**
     * @return original return type: 'okio.ByteString'
     */
    sha1(): Promise<okio_ByteString | null>;
    /**
     * @return original return type: 'okio.ByteString'
     */
    sha1Sync(): okio_ByteString | null;
    /**
     * @return original return type: 'okio.ByteString'
     */
    sha512(): Promise<okio_ByteString | null>;
    /**
     * @return original return type: 'okio.ByteString'
     */
    sha512Sync(): okio_ByteString | null;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @return original return type: 'okio.ByteString'
     */
    hmacSha512(var0: okio_ByteString | null): Promise<okio_ByteString | null>;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @return original return type: 'okio.ByteString'
     */
    hmacSha512Sync(var0: okio_ByteString | null): okio_ByteString | null;
    /**
     * @return original return type: 'okio.ByteString'
     */
    sha256(): Promise<okio_ByteString | null>;
    /**
     * @return original return type: 'okio.ByteString'
     */
    sha256Sync(): okio_ByteString | null;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @return original return type: 'okio.ByteString'
     */
    hmacSha256(var0: okio_ByteString | null): Promise<okio_ByteString | null>;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @return original return type: 'okio.ByteString'
     */
    hmacSha256Sync(var0: okio_ByteString | null): okio_ByteString | null;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @return original return type: 'okio.ByteString'
     */
    hmacSha1(var0: okio_ByteString | null): Promise<okio_ByteString | null>;
    /**
     * @param var0 original type: 'okio.ByteString'
     * @return original return type: 'okio.ByteString'
     */
    hmacSha1Sync(var0: okio_ByteString | null): okio_ByteString | null;
    /**
     * @return original return type: 'okio.ByteString'
     */
    md5(): Promise<okio_ByteString | null>;
    /**
     * @return original return type: 'okio.ByteString'
     */
    md5Sync(): okio_ByteString | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'okio.ByteString'
     * @return original return type: 'boolean'
     */
    rangeEquals(var0: java_lang_Long | bigint | number, var1: okio_ByteString | null): Promise<boolean>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'okio.ByteString'
     * @return original return type: 'boolean'
     */
    rangeEqualsSync(var0: java_lang_Long | bigint | number, var1: okio_ByteString | null): boolean;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'okio.ByteString'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @return original return type: 'boolean'
     */
    rangeEquals(var0: java_lang_Long | bigint | number, var1: okio_ByteString | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number): Promise<boolean>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'okio.ByteString'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @return original return type: 'boolean'
     */
    rangeEqualsSync(var0: java_lang_Long | bigint | number, var1: okio_ByteString | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number): boolean;
    /**
     * @return original return type: 'long'
     */
    readHexadecimalUnsignedLong(): Promise<number>;
    /**
     * @return original return type: 'long'
     */
    readHexadecimalUnsignedLongSync(): number;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'okio.BufferedSink'
     */
    writeHexadecimalUnsignedLong(var0: java_lang_Long | bigint | number): Promise<okio_BufferedSink | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'okio.BufferedSink'
     */
    writeHexadecimalUnsignedLongSync(var0: java_lang_Long | bigint | number): okio_BufferedSink | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'okio.Buffer'
     */
    writeHexadecimalUnsignedLong(var0: java_lang_Long | bigint | number): Promise<Buffer | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'okio.Buffer'
     */
    writeHexadecimalUnsignedLongSync(var0: java_lang_Long | bigint | number): Buffer | null;
    /**
     * @return original return type: 'long'
     */
    completeSegmentByteCount(): Promise<number>;
    /**
     * @return original return type: 'long'
     */
    completeSegmentByteCountSync(): number;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'okio.Segment'
     */
    writableSegment$okio(var0: java_lang_Integer | number): Promise<okio_Segment | null>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'okio.Segment'
     */
    writableSegment$okioSync(var0: java_lang_Integer | number): okio_Segment | null;
    /**
     * @param var0 original type: 'okio.Buffer'
     * @param var1 original type: 'okio.Buffer$UnsafeCursor'
     * @param var2 original type: 'int'
     * @param var3 original type: 'java.lang.Object'
     * @return original return type: 'okio.Buffer$UnsafeCursor'
     */
    static readAndWriteUnsafe$default(var0: BufferClass | null, var1: okio_Buffer$UnsafeCursor | null, var2: java_lang_Integer | number, var3: BasicOrJavaType | null): Promise<okio_Buffer$UnsafeCursor | null>;
    /**
     * @param var0 original type: 'okio.Buffer'
     * @param var1 original type: 'okio.Buffer$UnsafeCursor'
     * @param var2 original type: 'int'
     * @param var3 original type: 'java.lang.Object'
     * @return original return type: 'okio.Buffer$UnsafeCursor'
     */
    static readAndWriteUnsafe$defaultSync(var0: BufferClass | null, var1: okio_Buffer$UnsafeCursor | null, var2: java_lang_Integer | number, var3: BasicOrJavaType | null): okio_Buffer$UnsafeCursor | null;
    /**
     * @return original return type: 'okio.BufferedSink'
     */
    emitCompleteSegments(): Promise<okio_BufferedSink | null>;
    /**
     * @return original return type: 'okio.BufferedSink'
     */
    emitCompleteSegmentsSync(): okio_BufferedSink | null;
    /**
     * @return original return type: 'okio.Buffer'
     */
    emitCompleteSegments(): Promise<Buffer | null>;
    /**
     * @return original return type: 'okio.Buffer'
     */
    emitCompleteSegmentsSync(): Buffer | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'byte'
     */
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'byte'
     */
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @return original return type: 'okio.Buffer'
     */
    static newInstanceAsync(): Promise<Buffer>;
    constructor();
}
declare const Buffer_base: typeof BufferClass;
/**
 * Class okio.Buffer.
 *
 * This actually imports the java class for further use.
 * The class {@link BufferClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class Buffer extends Buffer_base {
}
export default Buffer;
//# sourceMappingURL=Buffer.d.ts.map