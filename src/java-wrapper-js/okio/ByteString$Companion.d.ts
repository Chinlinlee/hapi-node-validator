/// <reference types="node" />
import { JavaClass, BasicOrJavaType } from "java-bridge";
import { ByteString as okio_ByteString } from "./ByteString";
import { ByteBuffer as java_nio_ByteBuffer } from "./../java/nio/ByteBuffer";
import { Integer as java_lang_Integer } from "./../java/lang/Integer";
import { InputStream as java_io_InputStream } from "./../java/io/InputStream";
import { Charset as java_nio_charset_Charset } from "./../java/nio/charset/Charset";
import { Long as java_lang_Long } from "./../java/lang/Long";
import { Class as java_lang_Class } from "./../java/lang/Class";
import { DefaultConstructorMarker as kotlin_jvm_internal_DefaultConstructorMarker } from "./../kotlin/jvm/internal/DefaultConstructorMarker";
/**
 * This class just defines types, you should import {@link ByteString$Companion} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ByteString$CompanionClass extends JavaClass {
    /**
     * @param var0 original type: 'java.nio.ByteBuffer'
     * @return original return type: 'okio.ByteString'
     */
    of(var0: java_nio_ByteBuffer | null): Promise<okio_ByteString | null>;
    /**
     * @param var0 original type: 'java.nio.ByteBuffer'
     * @return original return type: 'okio.ByteString'
     */
    ofSync(var0: java_nio_ByteBuffer | null): okio_ByteString | null;
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'okio.ByteString'
     */
    of(var0: Buffer | null): Promise<okio_ByteString | null>;
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'okio.ByteString'
     */
    ofSync(var0: Buffer | null): okio_ByteString | null;
    /**
     * @param var0 original type: 'byte[]'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'okio.ByteString'
     */
    of(var0: Buffer | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): Promise<okio_ByteString | null>;
    /**
     * @param var0 original type: 'byte[]'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'okio.ByteString'
     */
    ofSync(var0: Buffer | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): okio_ByteString | null;
    /**
     * @param var0 original type: 'java.io.InputStream'
     * @param var1 original type: 'int'
     * @return original return type: 'okio.ByteString'
     */
    read(var0: java_io_InputStream | null, var1: java_lang_Integer | number): Promise<okio_ByteString | null>;
    /**
     * @param var0 original type: 'java.io.InputStream'
     * @param var1 original type: 'int'
     * @return original return type: 'okio.ByteString'
     */
    readSync(var0: java_io_InputStream | null, var1: java_lang_Integer | number): okio_ByteString | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'okio.ByteString'
     */
    encodeUtf8(var0: string | null): Promise<okio_ByteString | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'okio.ByteString'
     */
    encodeUtf8Sync(var0: string | null): okio_ByteString | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'okio.ByteString'
     */
    decodeBase64(var0: string | null): Promise<okio_ByteString | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'okio.ByteString'
     */
    decodeBase64Sync(var0: string | null): okio_ByteString | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.nio.charset.Charset'
     * @return original return type: 'okio.ByteString'
     */
    encodeString(var0: string | null, var1: java_nio_charset_Charset | null): Promise<okio_ByteString | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.nio.charset.Charset'
     * @return original return type: 'okio.ByteString'
     */
    encodeStringSync(var0: string | null, var1: java_nio_charset_Charset | null): okio_ByteString | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'okio.ByteString'
     */
    decodeHex(var0: string | null): Promise<okio_ByteString | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'okio.ByteString'
     */
    decodeHexSync(var0: string | null): okio_ByteString | null;
    /**
     * @param var0 original type: 'okio.ByteString$Companion'
     * @param var1 original type: 'byte[]'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @param var4 original type: 'int'
     * @param var5 original type: 'java.lang.Object'
     * @return original return type: 'okio.ByteString'
     */
    static of$default(var0: ByteString$CompanionClass | null, var1: Buffer | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number, var4: java_lang_Integer | number, var5: BasicOrJavaType | null): Promise<okio_ByteString | null>;
    /**
     * @param var0 original type: 'okio.ByteString$Companion'
     * @param var1 original type: 'byte[]'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @param var4 original type: 'int'
     * @param var5 original type: 'java.lang.Object'
     * @return original return type: 'okio.ByteString'
     */
    static of$defaultSync(var0: ByteString$CompanionClass | null, var1: Buffer | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number, var4: java_lang_Integer | number, var5: BasicOrJavaType | null): okio_ByteString | null;
    /**
     * @param var0 original type: 'java.io.InputStream'
     * @param var1 original type: 'int'
     * @return original return type: 'okio.ByteString'
     */
    /**
     * @param var0 original type: 'java.io.InputStream'
     * @param var1 original type: 'int'
     * @return original return type: 'okio.ByteString'
     */
    /**
     * @param var0 original type: 'java.nio.ByteBuffer'
     * @return original return type: 'okio.ByteString'
     */
    /**
     * @param var0 original type: 'java.nio.ByteBuffer'
     * @return original return type: 'okio.ByteString'
     */
    /**
     * @param var0 original type: 'byte[]'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'okio.ByteString'
     */
    /**
     * @param var0 original type: 'byte[]'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'okio.ByteString'
     */
    /**
     * @param var0 original type: 'okio.ByteString$Companion'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.nio.charset.Charset'
     * @param var3 original type: 'int'
     * @param var4 original type: 'java.lang.Object'
     * @return original return type: 'okio.ByteString'
     */
    static encodeString$default(var0: ByteString$CompanionClass | null, var1: string | null, var2: java_nio_charset_Charset | null, var3: java_lang_Integer | number, var4: BasicOrJavaType | null): Promise<okio_ByteString | null>;
    /**
     * @param var0 original type: 'okio.ByteString$Companion'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.nio.charset.Charset'
     * @param var3 original type: 'int'
     * @param var4 original type: 'java.lang.Object'
     * @return original return type: 'okio.ByteString'
     */
    static encodeString$defaultSync(var0: ByteString$CompanionClass | null, var1: string | null, var2: java_nio_charset_Charset | null, var3: java_lang_Integer | number, var4: BasicOrJavaType | null): okio_ByteString | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'okio.ByteString'
     */
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'okio.ByteString'
     */
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'okio.ByteString'
     */
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'okio.ByteString'
     */
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'okio.ByteString'
     */
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'okio.ByteString'
     */
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.nio.charset.Charset'
     * @return original return type: 'okio.ByteString'
     */
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.nio.charset.Charset'
     * @return original return type: 'okio.ByteString'
     */
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @param var0 original type: 'kotlin.jvm.internal.DefaultConstructorMarker'
     * @return original return type: 'okio.ByteString$Companion'
     */
    static newInstanceAsync(var0: kotlin_jvm_internal_DefaultConstructorMarker | null): Promise<ByteString$Companion>;
    /**
     * @param var0 original type: 'kotlin.jvm.internal.DefaultConstructorMarker'
     */
    constructor(var0: kotlin_jvm_internal_DefaultConstructorMarker | null);
}
declare const ByteString$Companion_base: typeof ByteString$CompanionClass;
/**
 * Class okio.ByteString$Companion.
 *
 * This actually imports the java class for further use.
 * The class {@link ByteString$CompanionClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ByteString$Companion extends ByteString$Companion_base {
}
export default ByteString$Companion;
//# sourceMappingURL=ByteString$Companion.d.ts.map