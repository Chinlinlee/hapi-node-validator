import { JavaClass, InterfaceProxyOptions, JavaInterfaceProxy } from "java-bridge";
import { IBaseResource as org_hl7_fhir_instance_model_api_IBaseResource, IBaseResourceInterface as org_hl7_fhir_instance_model_api_IBaseResourceInterface } from "./../../../../../org/hl7/fhir/instance/model/api/IBaseResource";
import { List as java_util_List, ListInterface as java_util_ListInterface } from "./../../../../../java/util/List";
import { Integer as java_lang_Integer } from "./../../../../../java/lang/Integer";
import { BundleTypeEnum as ca_uhn_fhir_model_valueset_BundleTypeEnum } from "./../../model/valueset/BundleTypeEnum";
import { BundleInclusionRule as ca_uhn_fhir_context_api_BundleInclusionRule } from "./../../context/api/BundleInclusionRule";
import { Set as java_util_Set, SetInterface as java_util_SetInterface } from "./../../../../../java/util/Set";
import { BundleLinks as ca_uhn_fhir_rest_api_BundleLinks } from "./BundleLinks";
import { IPrimitiveType as org_hl7_fhir_instance_model_api_IPrimitiveType, IPrimitiveTypeInterface as org_hl7_fhir_instance_model_api_IPrimitiveTypeInterface } from "./../../../../../org/hl7/fhir/instance/model/api/IPrimitiveType";
/**
 * This class just defines types, you should import {@link IVersionSpecificBundleFactory} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class IVersionSpecificBundleFactoryClass extends JavaClass {
    /**
     * @return original return type: 'org.hl7.fhir.instance.model.api.IBaseResource'
     */
    getResourceBundle(): Promise<org_hl7_fhir_instance_model_api_IBaseResource | null>;
    /**
     * @return original return type: 'org.hl7.fhir.instance.model.api.IBaseResource'
     */
    getResourceBundleSync(): org_hl7_fhir_instance_model_api_IBaseResource | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.List'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'java.lang.String'
     * @param var4 original type: 'int'
     * @param var5 original type: 'ca.uhn.fhir.model.valueset.BundleTypeEnum'
     * @return original return type: 'void'
     */
    initializeBundleFromResourceList(var0: string | null, var1: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null, var2: string | null, var3: string | null, var4: java_lang_Integer | number, var5: ca_uhn_fhir_model_valueset_BundleTypeEnum | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.List'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'java.lang.String'
     * @param var4 original type: 'int'
     * @param var5 original type: 'ca.uhn.fhir.model.valueset.BundleTypeEnum'
     * @return original return type: 'void'
     */
    initializeBundleFromResourceListSync(var0: string | null, var1: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null, var2: string | null, var3: string | null, var4: java_lang_Integer | number, var5: ca_uhn_fhir_model_valueset_BundleTypeEnum | null): void;
    /**
     * @param var0 original type: 'java.util.List'
     * @param var1 original type: 'ca.uhn.fhir.model.valueset.BundleTypeEnum'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'ca.uhn.fhir.context.api.BundleInclusionRule'
     * @param var4 original type: 'java.util.Set'
     * @return original return type: 'void'
     */
    addResourcesToBundle(var0: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null, var1: ca_uhn_fhir_model_valueset_BundleTypeEnum | null, var2: string | null, var3: ca_uhn_fhir_context_api_BundleInclusionRule | null, var4: java_util_Set | JavaInterfaceProxy<java_util_SetInterface> | null): Promise<void>;
    /**
     * @param var0 original type: 'java.util.List'
     * @param var1 original type: 'ca.uhn.fhir.model.valueset.BundleTypeEnum'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'ca.uhn.fhir.context.api.BundleInclusionRule'
     * @param var4 original type: 'java.util.Set'
     * @return original return type: 'void'
     */
    addResourcesToBundleSync(var0: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null, var1: ca_uhn_fhir_model_valueset_BundleTypeEnum | null, var2: string | null, var3: ca_uhn_fhir_context_api_BundleInclusionRule | null, var4: java_util_Set | JavaInterfaceProxy<java_util_SetInterface> | null): void;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'ca.uhn.fhir.rest.api.BundleLinks'
     * @param var2 original type: 'java.lang.Integer'
     * @param var3 original type: 'org.hl7.fhir.instance.model.api.IPrimitiveType'
     * @return original return type: 'void'
     */
    addRootPropertiesToBundle(var0: string | null, var1: ca_uhn_fhir_rest_api_BundleLinks | null, var2: java_lang_Integer | number | null, var3: org_hl7_fhir_instance_model_api_IPrimitiveType | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IPrimitiveTypeInterface> | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'ca.uhn.fhir.rest.api.BundleLinks'
     * @param var2 original type: 'java.lang.Integer'
     * @param var3 original type: 'org.hl7.fhir.instance.model.api.IPrimitiveType'
     * @return original return type: 'void'
     */
    addRootPropertiesToBundleSync(var0: string | null, var1: ca_uhn_fhir_rest_api_BundleLinks | null, var2: java_lang_Integer | number | null, var3: org_hl7_fhir_instance_model_api_IPrimitiveType | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IPrimitiveTypeInterface> | null): void;
    /**
     * @param var0 original type: 'java.lang.Integer'
     * @param var1 original type: 'ca.uhn.fhir.model.valueset.BundleTypeEnum'
     * @return original return type: 'void'
     */
    addTotalResultsToBundle(var0: java_lang_Integer | number | null, var1: ca_uhn_fhir_model_valueset_BundleTypeEnum | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.Integer'
     * @param var1 original type: 'ca.uhn.fhir.model.valueset.BundleTypeEnum'
     * @return original return type: 'void'
     */
    addTotalResultsToBundleSync(var0: java_lang_Integer | number | null, var1: ca_uhn_fhir_model_valueset_BundleTypeEnum | null): void;
    /**
     * @param var0 original type: 'org.hl7.fhir.instance.model.api.IBaseResource'
     * @return original return type: 'void'
     */
    initializeWithBundleResource(var0: org_hl7_fhir_instance_model_api_IBaseResource | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IBaseResourceInterface> | null): Promise<void>;
    /**
     * @param var0 original type: 'org.hl7.fhir.instance.model.api.IBaseResource'
     * @return original return type: 'void'
     */
    initializeWithBundleResourceSync(var0: org_hl7_fhir_instance_model_api_IBaseResource | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IBaseResourceInterface> | null): void;
    /**
     * @return original return type: 'java.util.List'
     */
    toListOfResources(): Promise<java_util_List | null>;
    /**
     * @return original return type: 'java.util.List'
     */
    toListOfResourcesSync(): java_util_List | null;
}
/**
 * This interface just defines types for creating proxies,
 * you should use {@link createIVersionSpecificBundleFactoryProxy} for actually creating the proxies.
 *
 * Optional methods in here may still be required by java.
 * This is caused by typescript not allowing to have both optional and
 * non-optional signatures for the same interface member.
 *
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export interface IVersionSpecificBundleFactoryInterface {
    /**
     * @return original return type: 'org.hl7.fhir.instance.model.api.IBaseResource'
     */
    getResourceBundle(): org_hl7_fhir_instance_model_api_IBaseResource | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.List'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'java.lang.String'
     * @param var4 original type: 'int'
     * @param var5 original type: 'ca.uhn.fhir.model.valueset.BundleTypeEnum'
     * @return original return type: 'void'
     */
    initializeBundleFromResourceList?(var0: string | null, var1: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null, var2: string | null, var3: string | null, var4: java_lang_Integer | number, var5: ca_uhn_fhir_model_valueset_BundleTypeEnum | null): void;
    /**
     * @param var0 original type: 'java.util.List'
     * @param var1 original type: 'ca.uhn.fhir.model.valueset.BundleTypeEnum'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'ca.uhn.fhir.context.api.BundleInclusionRule'
     * @param var4 original type: 'java.util.Set'
     * @return original return type: 'void'
     */
    addResourcesToBundle(var0: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null, var1: ca_uhn_fhir_model_valueset_BundleTypeEnum | null, var2: string | null, var3: ca_uhn_fhir_context_api_BundleInclusionRule | null, var4: java_util_Set | JavaInterfaceProxy<java_util_SetInterface> | null): void;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'ca.uhn.fhir.rest.api.BundleLinks'
     * @param var2 original type: 'java.lang.Integer'
     * @param var3 original type: 'org.hl7.fhir.instance.model.api.IPrimitiveType'
     * @return original return type: 'void'
     */
    addRootPropertiesToBundle(var0: string | null, var1: ca_uhn_fhir_rest_api_BundleLinks | null, var2: java_lang_Integer | number | null, var3: org_hl7_fhir_instance_model_api_IPrimitiveType | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IPrimitiveTypeInterface> | null): void;
    /**
     * @param var0 original type: 'java.lang.Integer'
     * @param var1 original type: 'ca.uhn.fhir.model.valueset.BundleTypeEnum'
     * @return original return type: 'void'
     */
    addTotalResultsToBundle(var0: java_lang_Integer | number | null, var1: ca_uhn_fhir_model_valueset_BundleTypeEnum | null): void;
    /**
     * @param var0 original type: 'org.hl7.fhir.instance.model.api.IBaseResource'
     * @return original return type: 'void'
     */
    initializeWithBundleResource(var0: org_hl7_fhir_instance_model_api_IBaseResource | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IBaseResourceInterface> | null): void;
    /**
     * @return original return type: 'java.util.List'
     */
    toListOfResources(): java_util_List | null;
}
/**
 * Create a proxy for the {@link IVersionSpecificBundleFactory} interface.
 * All required methods in {@link IVersionSpecificBundleFactoryInterface} must be implemented.
 *
 * @param methods the methods to implement
 * @param opts the proxy options
 * @return the proxy
 */
export declare function createIVersionSpecificBundleFactoryProxy(methods: IVersionSpecificBundleFactoryInterface, opts?: InterfaceProxyOptions): JavaInterfaceProxy<IVersionSpecificBundleFactoryInterface>;
declare const IVersionSpecificBundleFactory_base: typeof IVersionSpecificBundleFactoryClass;
/**
 * Class ca.uhn.fhir.rest.api.IVersionSpecificBundleFactory.
 *
 * This actually imports the java class for further use.
 * The class {@link IVersionSpecificBundleFactoryClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class IVersionSpecificBundleFactory extends IVersionSpecificBundleFactory_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default IVersionSpecificBundleFactory;
//# sourceMappingURL=IVersionSpecificBundleFactory.d.ts.map