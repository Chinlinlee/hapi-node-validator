import { JavaClass, InterfaceProxyOptions, JavaInterfaceProxy } from "java-bridge";
import { IReadExecutable as ca_uhn_fhir_rest_gclient_IReadExecutable } from "./IReadExecutable";
import { IIdType as org_hl7_fhir_instance_model_api_IIdType, IIdTypeInterface as org_hl7_fhir_instance_model_api_IIdTypeInterface } from "./../../../../../org/hl7/fhir/instance/model/api/IIdType";
import { Long as java_lang_Long } from "./../../../../../java/lang/Long";
/**
 * This class just defines types, you should import {@link IReadTyped} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class IReadTypedClass extends JavaClass {
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'ca.uhn.fhir.rest.gclient.IReadExecutable'
     */
    withIdAndVersion(var0: string | null, var1: string | null): Promise<ca_uhn_fhir_rest_gclient_IReadExecutable | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'ca.uhn.fhir.rest.gclient.IReadExecutable'
     */
    withIdAndVersionSync(var0: string | null, var1: string | null): ca_uhn_fhir_rest_gclient_IReadExecutable | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'ca.uhn.fhir.rest.gclient.IReadExecutable'
     */
    withUrl(var0: string | null): Promise<ca_uhn_fhir_rest_gclient_IReadExecutable | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'ca.uhn.fhir.rest.gclient.IReadExecutable'
     */
    withUrlSync(var0: string | null): ca_uhn_fhir_rest_gclient_IReadExecutable | null;
    /**
     * @param var0 original type: 'org.hl7.fhir.instance.model.api.IIdType'
     * @return original return type: 'ca.uhn.fhir.rest.gclient.IReadExecutable'
     */
    withUrl(var0: org_hl7_fhir_instance_model_api_IIdType | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IIdTypeInterface> | null): Promise<ca_uhn_fhir_rest_gclient_IReadExecutable | null>;
    /**
     * @param var0 original type: 'org.hl7.fhir.instance.model.api.IIdType'
     * @return original return type: 'ca.uhn.fhir.rest.gclient.IReadExecutable'
     */
    withUrlSync(var0: org_hl7_fhir_instance_model_api_IIdType | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IIdTypeInterface> | null): ca_uhn_fhir_rest_gclient_IReadExecutable | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'ca.uhn.fhir.rest.gclient.IReadExecutable'
     */
    withId(var0: string | null): Promise<ca_uhn_fhir_rest_gclient_IReadExecutable | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'ca.uhn.fhir.rest.gclient.IReadExecutable'
     */
    withIdSync(var0: string | null): ca_uhn_fhir_rest_gclient_IReadExecutable | null;
    /**
     * @param var0 original type: 'org.hl7.fhir.instance.model.api.IIdType'
     * @return original return type: 'ca.uhn.fhir.rest.gclient.IReadExecutable'
     */
    withId(var0: org_hl7_fhir_instance_model_api_IIdType | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IIdTypeInterface> | null): Promise<ca_uhn_fhir_rest_gclient_IReadExecutable | null>;
    /**
     * @param var0 original type: 'org.hl7.fhir.instance.model.api.IIdType'
     * @return original return type: 'ca.uhn.fhir.rest.gclient.IReadExecutable'
     */
    withIdSync(var0: org_hl7_fhir_instance_model_api_IIdType | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IIdTypeInterface> | null): ca_uhn_fhir_rest_gclient_IReadExecutable | null;
    /**
     * @param var0 original type: 'java.lang.Long'
     * @return original return type: 'ca.uhn.fhir.rest.gclient.IReadExecutable'
     */
    withId(var0: java_lang_Long | bigint | number | null): Promise<ca_uhn_fhir_rest_gclient_IReadExecutable | null>;
    /**
     * @param var0 original type: 'java.lang.Long'
     * @return original return type: 'ca.uhn.fhir.rest.gclient.IReadExecutable'
     */
    withIdSync(var0: java_lang_Long | bigint | number | null): ca_uhn_fhir_rest_gclient_IReadExecutable | null;
}
/**
 * This interface just defines types for creating proxies,
 * you should use {@link createIReadTypedProxy} for actually creating the proxies.
 *
 * Optional methods in here may still be required by java.
 * This is caused by typescript not allowing to have both optional and
 * non-optional signatures for the same interface member.
 *
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export interface IReadTypedInterface {
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'ca.uhn.fhir.rest.gclient.IReadExecutable'
     */
    withIdAndVersion(var0: string | null, var1: string | null): ca_uhn_fhir_rest_gclient_IReadExecutable | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'ca.uhn.fhir.rest.gclient.IReadExecutable'
     */
    withUrl(var0: string | null): ca_uhn_fhir_rest_gclient_IReadExecutable | null;
    /**
     * @param var0 original type: 'org.hl7.fhir.instance.model.api.IIdType'
     * @return original return type: 'ca.uhn.fhir.rest.gclient.IReadExecutable'
     */
    withUrl(var0: org_hl7_fhir_instance_model_api_IIdType | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IIdTypeInterface> | null): ca_uhn_fhir_rest_gclient_IReadExecutable | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'ca.uhn.fhir.rest.gclient.IReadExecutable'
     */
    withId(var0: string | null): ca_uhn_fhir_rest_gclient_IReadExecutable | null;
    /**
     * @param var0 original type: 'org.hl7.fhir.instance.model.api.IIdType'
     * @return original return type: 'ca.uhn.fhir.rest.gclient.IReadExecutable'
     */
    withId(var0: org_hl7_fhir_instance_model_api_IIdType | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IIdTypeInterface> | null): ca_uhn_fhir_rest_gclient_IReadExecutable | null;
    /**
     * @param var0 original type: 'java.lang.Long'
     * @return original return type: 'ca.uhn.fhir.rest.gclient.IReadExecutable'
     */
    withId(var0: java_lang_Long | bigint | number | null): ca_uhn_fhir_rest_gclient_IReadExecutable | null;
}
/**
 * Create a proxy for the {@link IReadTyped} interface.
 * All required methods in {@link IReadTypedInterface} must be implemented.
 *
 * @param methods the methods to implement
 * @param opts the proxy options
 * @return the proxy
 */
export declare function createIReadTypedProxy(methods: IReadTypedInterface, opts?: InterfaceProxyOptions): JavaInterfaceProxy<IReadTypedInterface>;
declare const IReadTyped_base: typeof IReadTypedClass;
/**
 * Class ca.uhn.fhir.rest.gclient.IReadTyped.
 *
 * This actually imports the java class for further use.
 * The class {@link IReadTypedClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class IReadTyped extends IReadTyped_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default IReadTyped;
//# sourceMappingURL=IReadTyped.d.ts.map