import { JavaClass, InterfaceProxyOptions, JavaInterfaceProxy } from "java-bridge";
import { IGetPageTyped as ca_uhn_fhir_rest_gclient_IGetPageTyped } from "./IGetPageTyped";
import { IBaseBundle as org_hl7_fhir_instance_model_api_IBaseBundle, IBaseBundleInterface as org_hl7_fhir_instance_model_api_IBaseBundleInterface } from "./../../../../../org/hl7/fhir/instance/model/api/IBaseBundle";
import { IGetPageUntyped as ca_uhn_fhir_rest_gclient_IGetPageUntyped } from "./IGetPageUntyped";
/**
 * This class just defines types, you should import {@link IGetPage} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class IGetPageClass extends JavaClass {
    /**
     * @param var0 original type: 'org.hl7.fhir.instance.model.api.IBaseBundle'
     * @return original return type: 'ca.uhn.fhir.rest.gclient.IGetPageTyped'
     */
    next(var0: org_hl7_fhir_instance_model_api_IBaseBundle | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IBaseBundleInterface> | null): Promise<ca_uhn_fhir_rest_gclient_IGetPageTyped | null>;
    /**
     * @param var0 original type: 'org.hl7.fhir.instance.model.api.IBaseBundle'
     * @return original return type: 'ca.uhn.fhir.rest.gclient.IGetPageTyped'
     */
    nextSync(var0: org_hl7_fhir_instance_model_api_IBaseBundle | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IBaseBundleInterface> | null): ca_uhn_fhir_rest_gclient_IGetPageTyped | null;
    /**
     * @param var0 original type: 'org.hl7.fhir.instance.model.api.IBaseBundle'
     * @return original return type: 'ca.uhn.fhir.rest.gclient.IGetPageTyped'
     */
    previous(var0: org_hl7_fhir_instance_model_api_IBaseBundle | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IBaseBundleInterface> | null): Promise<ca_uhn_fhir_rest_gclient_IGetPageTyped | null>;
    /**
     * @param var0 original type: 'org.hl7.fhir.instance.model.api.IBaseBundle'
     * @return original return type: 'ca.uhn.fhir.rest.gclient.IGetPageTyped'
     */
    previousSync(var0: org_hl7_fhir_instance_model_api_IBaseBundle | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IBaseBundleInterface> | null): ca_uhn_fhir_rest_gclient_IGetPageTyped | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'ca.uhn.fhir.rest.gclient.IGetPageUntyped'
     */
    byUrl(var0: string | null): Promise<ca_uhn_fhir_rest_gclient_IGetPageUntyped | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'ca.uhn.fhir.rest.gclient.IGetPageUntyped'
     */
    byUrlSync(var0: string | null): ca_uhn_fhir_rest_gclient_IGetPageUntyped | null;
}
/**
 * This interface just defines types for creating proxies,
 * you should use {@link createIGetPageProxy} for actually creating the proxies.
 *
 * Optional methods in here may still be required by java.
 * This is caused by typescript not allowing to have both optional and
 * non-optional signatures for the same interface member.
 *
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export interface IGetPageInterface {
    /**
     * @param var0 original type: 'org.hl7.fhir.instance.model.api.IBaseBundle'
     * @return original return type: 'ca.uhn.fhir.rest.gclient.IGetPageTyped'
     */
    next(var0: org_hl7_fhir_instance_model_api_IBaseBundle | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IBaseBundleInterface> | null): ca_uhn_fhir_rest_gclient_IGetPageTyped | null;
    /**
     * @param var0 original type: 'org.hl7.fhir.instance.model.api.IBaseBundle'
     * @return original return type: 'ca.uhn.fhir.rest.gclient.IGetPageTyped'
     */
    previous(var0: org_hl7_fhir_instance_model_api_IBaseBundle | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IBaseBundleInterface> | null): ca_uhn_fhir_rest_gclient_IGetPageTyped | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'ca.uhn.fhir.rest.gclient.IGetPageUntyped'
     */
    byUrl(var0: string | null): ca_uhn_fhir_rest_gclient_IGetPageUntyped | null;
}
/**
 * Create a proxy for the {@link IGetPage} interface.
 * All required methods in {@link IGetPageInterface} must be implemented.
 *
 * @param methods the methods to implement
 * @param opts the proxy options
 * @return the proxy
 */
export declare function createIGetPageProxy(methods: IGetPageInterface, opts?: InterfaceProxyOptions): JavaInterfaceProxy<IGetPageInterface>;
declare const IGetPage_base: typeof IGetPageClass;
/**
 * Class ca.uhn.fhir.rest.gclient.IGetPage.
 *
 * This actually imports the java class for further use.
 * The class {@link IGetPageClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class IGetPage extends IGetPage_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default IGetPage;
//# sourceMappingURL=IGetPage.d.ts.map