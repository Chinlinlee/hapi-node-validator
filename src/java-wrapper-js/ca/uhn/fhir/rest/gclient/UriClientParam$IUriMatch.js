"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UriClientParam$IUriMatch = exports.createUriClientParam$IUriMatchProxy = void 0;
const java_bridge_1 = require("java-bridge");
/**
 * Create a proxy for the {@link UriClientParam$IUriMatch} interface.
 * All required methods in {@link UriClientParam$IUriMatchInterface} must be implemented.
 *
 * @param methods the methods to implement
 * @param opts the proxy options
 * @return the proxy
 */
function createUriClientParam$IUriMatchProxy(methods, opts) {
    return (0, java_bridge_1.newProxy)('ca.uhn.fhir.rest.gclient.UriClientParam$IUriMatch', methods, opts);
}
exports.createUriClientParam$IUriMatchProxy = createUriClientParam$IUriMatchProxy;
/**
 * Class ca.uhn.fhir.rest.gclient.UriClientParam$IUriMatch.
 *
 * This actually imports the java class for further use.
 * The class {@link UriClientParam$IUriMatchClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
class UriClientParam$IUriMatch extends (0, java_bridge_1.importClass)('ca.uhn.fhir.rest.gclient.UriClientParam$IUriMatch') {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    constructor() {
        super();
    }
}
exports.UriClientParam$IUriMatch = UriClientParam$IUriMatch;
exports.default = UriClientParam$IUriMatch;
//# sourceMappingURL=UriClientParam$IUriMatch.js.map