import { JavaClass, BasicOrJavaType, InterfaceProxyOptions, JavaInterfaceProxy } from "java-bridge";
import { EncodingEnum as ca_uhn_fhir_rest_api_EncodingEnum } from "./../../api/EncodingEnum";
import { FhirContext as ca_uhn_fhir_context_FhirContext } from "./../../../context/FhirContext";
import { Boolean as java_lang_Boolean } from "./../../../../../../java/lang/Boolean";
import { IInterceptorService as ca_uhn_fhir_interceptor_api_IInterceptorService, IInterceptorServiceInterface as ca_uhn_fhir_interceptor_api_IInterceptorServiceInterface } from "./../../../interceptor/api/IInterceptorService";
import { IBaseResource as org_hl7_fhir_instance_model_api_IBaseResource } from "./../../../../../../org/hl7/fhir/instance/model/api/IBaseResource";
import { Class as java_lang_Class } from "./../../../../../../java/lang/Class";
import { RequestFormatParamStyleEnum as ca_uhn_fhir_rest_api_RequestFormatParamStyleEnum } from "./../../api/RequestFormatParamStyleEnum";
import { IHttpClient as ca_uhn_fhir_rest_client_api_IHttpClient } from "./IHttpClient";
import { SummaryEnum as ca_uhn_fhir_rest_api_SummaryEnum } from "./../../api/SummaryEnum";
/**
 * This class just defines types, you should import {@link IRestfulClient} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class IRestfulClientClass extends JavaClass {
    /**
     * @return original return type: 'ca.uhn.fhir.rest.api.EncodingEnum'
     */
    getEncoding(): Promise<ca_uhn_fhir_rest_api_EncodingEnum | null>;
    /**
     * @return original return type: 'ca.uhn.fhir.rest.api.EncodingEnum'
     */
    getEncodingSync(): ca_uhn_fhir_rest_api_EncodingEnum | null;
    /**
     * @param var0 original type: 'ca.uhn.fhir.rest.api.EncodingEnum'
     * @return original return type: 'void'
     */
    setEncoding(var0: ca_uhn_fhir_rest_api_EncodingEnum | null): Promise<void>;
    /**
     * @param var0 original type: 'ca.uhn.fhir.rest.api.EncodingEnum'
     * @return original return type: 'void'
     */
    setEncodingSync(var0: ca_uhn_fhir_rest_api_EncodingEnum | null): void;
    /**
     * @return original return type: 'ca.uhn.fhir.context.FhirContext'
     */
    getFhirContext(): Promise<ca_uhn_fhir_context_FhirContext | null>;
    /**
     * @return original return type: 'ca.uhn.fhir.context.FhirContext'
     */
    getFhirContextSync(): ca_uhn_fhir_context_FhirContext | null;
    /**
     * @param var0 original type: 'java.lang.Boolean'
     * @return original return type: 'void'
     */
    setPrettyPrint(var0: java_lang_Boolean | boolean | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.Boolean'
     * @return original return type: 'void'
     */
    setPrettyPrintSync(var0: java_lang_Boolean | boolean | null): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'void'
     */
    registerInterceptor(var0: BasicOrJavaType | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'void'
     */
    registerInterceptorSync(var0: BasicOrJavaType | null): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'void'
     */
    unregisterInterceptor(var0: BasicOrJavaType | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'void'
     */
    unregisterInterceptorSync(var0: BasicOrJavaType | null): void;
    /**
     * @return original return type: 'ca.uhn.fhir.interceptor.api.IInterceptorService'
     */
    getInterceptorService(): Promise<ca_uhn_fhir_interceptor_api_IInterceptorService | null>;
    /**
     * @return original return type: 'ca.uhn.fhir.interceptor.api.IInterceptorService'
     */
    getInterceptorServiceSync(): ca_uhn_fhir_interceptor_api_IInterceptorService | null;
    /**
     * @param var0 original type: 'ca.uhn.fhir.interceptor.api.IInterceptorService'
     * @return original return type: 'void'
     */
    setInterceptorService(var0: ca_uhn_fhir_interceptor_api_IInterceptorService | JavaInterfaceProxy<ca_uhn_fhir_interceptor_api_IInterceptorServiceInterface> | null): Promise<void>;
    /**
     * @param var0 original type: 'ca.uhn.fhir.interceptor.api.IInterceptorService'
     * @return original return type: 'void'
     */
    setInterceptorServiceSync(var0: ca_uhn_fhir_interceptor_api_IInterceptorService | JavaInterfaceProxy<ca_uhn_fhir_interceptor_api_IInterceptorServiceInterface> | null): void;
    /**
     * @param var0 original type: 'java.lang.Class'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.instance.model.api.IBaseResource'
     */
    fetchResourceFromUrl(var0: java_lang_Class | null, var1: string | null): Promise<org_hl7_fhir_instance_model_api_IBaseResource | null>;
    /**
     * @param var0 original type: 'java.lang.Class'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.instance.model.api.IBaseResource'
     */
    fetchResourceFromUrlSync(var0: java_lang_Class | null, var1: string | null): org_hl7_fhir_instance_model_api_IBaseResource | null;
    /**
     * @param var0 original type: 'ca.uhn.fhir.rest.api.RequestFormatParamStyleEnum'
     * @return original return type: 'void'
     */
    setFormatParamStyle(var0: ca_uhn_fhir_rest_api_RequestFormatParamStyleEnum | null): Promise<void>;
    /**
     * @param var0 original type: 'ca.uhn.fhir.rest.api.RequestFormatParamStyleEnum'
     * @return original return type: 'void'
     */
    setFormatParamStyleSync(var0: ca_uhn_fhir_rest_api_RequestFormatParamStyleEnum | null): void;
    /**
     * @return original return type: 'ca.uhn.fhir.rest.client.api.IHttpClient'
     */
    getHttpClient(): Promise<ca_uhn_fhir_rest_client_api_IHttpClient | null>;
    /**
     * @return original return type: 'ca.uhn.fhir.rest.client.api.IHttpClient'
     */
    getHttpClientSync(): ca_uhn_fhir_rest_client_api_IHttpClient | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getServerBase(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getServerBaseSync(): string | null;
    /**
     * @param var0 original type: 'ca.uhn.fhir.rest.api.SummaryEnum'
     * @return original return type: 'void'
     */
    setSummary(var0: ca_uhn_fhir_rest_api_SummaryEnum | null): Promise<void>;
    /**
     * @param var0 original type: 'ca.uhn.fhir.rest.api.SummaryEnum'
     * @return original return type: 'void'
     */
    setSummarySync(var0: ca_uhn_fhir_rest_api_SummaryEnum | null): void;
}
/**
 * This interface just defines types for creating proxies,
 * you should use {@link createIRestfulClientProxy} for actually creating the proxies.
 *
 * Optional methods in here may still be required by java.
 * This is caused by typescript not allowing to have both optional and
 * non-optional signatures for the same interface member.
 *
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export interface IRestfulClientInterface {
    /**
     * @return original return type: 'ca.uhn.fhir.rest.api.EncodingEnum'
     */
    getEncoding(): ca_uhn_fhir_rest_api_EncodingEnum | null;
    /**
     * @param var0 original type: 'ca.uhn.fhir.rest.api.EncodingEnum'
     * @return original return type: 'void'
     */
    setEncoding(var0: ca_uhn_fhir_rest_api_EncodingEnum | null): void;
    /**
     * @return original return type: 'ca.uhn.fhir.context.FhirContext'
     */
    getFhirContext(): ca_uhn_fhir_context_FhirContext | null;
    /**
     * @param var0 original type: 'java.lang.Boolean'
     * @return original return type: 'void'
     */
    setPrettyPrint(var0: java_lang_Boolean | boolean | null): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'void'
     */
    registerInterceptor(var0: BasicOrJavaType | null): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'void'
     */
    unregisterInterceptor(var0: BasicOrJavaType | null): void;
    /**
     * @return original return type: 'ca.uhn.fhir.interceptor.api.IInterceptorService'
     */
    getInterceptorService(): ca_uhn_fhir_interceptor_api_IInterceptorService | null;
    /**
     * @param var0 original type: 'ca.uhn.fhir.interceptor.api.IInterceptorService'
     * @return original return type: 'void'
     */
    setInterceptorService(var0: ca_uhn_fhir_interceptor_api_IInterceptorService | JavaInterfaceProxy<ca_uhn_fhir_interceptor_api_IInterceptorServiceInterface> | null): void;
    /**
     * @param var0 original type: 'java.lang.Class'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'org.hl7.fhir.instance.model.api.IBaseResource'
     */
    fetchResourceFromUrl(var0: java_lang_Class | null, var1: string | null): org_hl7_fhir_instance_model_api_IBaseResource | null;
    /**
     * @param var0 original type: 'ca.uhn.fhir.rest.api.RequestFormatParamStyleEnum'
     * @return original return type: 'void'
     */
    setFormatParamStyle(var0: ca_uhn_fhir_rest_api_RequestFormatParamStyleEnum | null): void;
    /**
     * @return original return type: 'ca.uhn.fhir.rest.client.api.IHttpClient'
     */
    getHttpClient(): ca_uhn_fhir_rest_client_api_IHttpClient | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getServerBase(): string | null;
    /**
     * @param var0 original type: 'ca.uhn.fhir.rest.api.SummaryEnum'
     * @return original return type: 'void'
     */
    setSummary(var0: ca_uhn_fhir_rest_api_SummaryEnum | null): void;
}
/**
 * Create a proxy for the {@link IRestfulClient} interface.
 * All required methods in {@link IRestfulClientInterface} must be implemented.
 *
 * @param methods the methods to implement
 * @param opts the proxy options
 * @return the proxy
 */
export declare function createIRestfulClientProxy(methods: IRestfulClientInterface, opts?: InterfaceProxyOptions): JavaInterfaceProxy<IRestfulClientInterface>;
declare const IRestfulClient_base: typeof IRestfulClientClass;
/**
 * Class ca.uhn.fhir.rest.client.api.IRestfulClient.
 *
 * This actually imports the java class for further use.
 * The class {@link IRestfulClientClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class IRestfulClient extends IRestfulClient_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default IRestfulClient;
//# sourceMappingURL=IRestfulClient.d.ts.map