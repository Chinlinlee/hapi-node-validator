import { JavaClass, BasicOrJavaType, JavaInterfaceProxy } from "java-bridge";
import { Map as java_util_Map } from "./../../../../java/util/Map";
import { List as java_util_List } from "./../../../../java/util/List";
import { IIdType as org_hl7_fhir_instance_model_api_IIdType, IIdTypeInterface as org_hl7_fhir_instance_model_api_IIdTypeInterface } from "./../../../../org/hl7/fhir/instance/model/api/IIdType";
import { IBaseResource as org_hl7_fhir_instance_model_api_IBaseResource, IBaseResourceInterface as org_hl7_fhir_instance_model_api_IBaseResourceInterface } from "./../../../../org/hl7/fhir/instance/model/api/IBaseResource";
import { Long as java_lang_Long } from "./../../../../java/lang/Long";
import { Integer as java_lang_Integer } from "./../../../../java/lang/Integer";
import { Class as java_lang_Class } from "./../../../../java/lang/Class";
/**
 * This class just defines types, you should import {@link FhirTerser$ContainedResources} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class FhirTerser$ContainedResourcesClass extends JavaClass {
    /**
     * @return original return type: 'boolean'
     */
    isEmpty(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isEmptySync(): boolean;
    /**
     * @return original return type: 'java.util.Map'
     */
    getExistingIdToContainedResource(): Promise<java_util_Map | null>;
    /**
     * @return original return type: 'java.util.Map'
     */
    getExistingIdToContainedResourceSync(): java_util_Map | null;
    /**
     * @return original return type: 'java.util.List'
     */
    getContainedResources(): Promise<java_util_List | null>;
    /**
     * @return original return type: 'java.util.List'
     */
    getContainedResourcesSync(): java_util_List | null;
    /**
     * @return original return type: 'boolean'
     */
    hasExistingIdToContainedResource(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    hasExistingIdToContainedResourceSync(): boolean;
    /**
     * @param var0 original type: 'org.hl7.fhir.instance.model.api.IBaseResource'
     * @return original return type: 'org.hl7.fhir.instance.model.api.IIdType'
     */
    getResourceId(var0: org_hl7_fhir_instance_model_api_IBaseResource | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IBaseResourceInterface> | null): Promise<org_hl7_fhir_instance_model_api_IIdType | null>;
    /**
     * @param var0 original type: 'org.hl7.fhir.instance.model.api.IBaseResource'
     * @return original return type: 'org.hl7.fhir.instance.model.api.IIdType'
     */
    getResourceIdSync(var0: org_hl7_fhir_instance_model_api_IBaseResource | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IBaseResourceInterface> | null): org_hl7_fhir_instance_model_api_IIdType | null;
    /**
     * @return original return type: 'void'
     */
    assignIdsToContainedResources(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    assignIdsToContainedResourcesSync(): void;
    /**
     * @param var0 original type: 'org.hl7.fhir.instance.model.api.IBaseResource'
     * @return original return type: 'org.hl7.fhir.instance.model.api.IIdType'
     */
    addContained(var0: org_hl7_fhir_instance_model_api_IBaseResource | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IBaseResourceInterface> | null): Promise<org_hl7_fhir_instance_model_api_IIdType | null>;
    /**
     * @param var0 original type: 'org.hl7.fhir.instance.model.api.IBaseResource'
     * @return original return type: 'org.hl7.fhir.instance.model.api.IIdType'
     */
    addContainedSync(var0: org_hl7_fhir_instance_model_api_IBaseResource | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IBaseResourceInterface> | null): org_hl7_fhir_instance_model_api_IIdType | null;
    /**
     * @param var0 original type: 'org.hl7.fhir.instance.model.api.IIdType'
     * @param var1 original type: 'org.hl7.fhir.instance.model.api.IBaseResource'
     * @return original return type: 'void'
     */
    addContained(var0: org_hl7_fhir_instance_model_api_IIdType | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IIdTypeInterface> | null, var1: org_hl7_fhir_instance_model_api_IBaseResource | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IBaseResourceInterface> | null): Promise<void>;
    /**
     * @param var0 original type: 'org.hl7.fhir.instance.model.api.IIdType'
     * @param var1 original type: 'org.hl7.fhir.instance.model.api.IBaseResource'
     * @return original return type: 'void'
     */
    addContainedSync(var0: org_hl7_fhir_instance_model_api_IIdType | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IIdTypeInterface> | null, var1: org_hl7_fhir_instance_model_api_IBaseResource | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IBaseResourceInterface> | null): void;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @return original return type: 'ca.uhn.fhir.util.FhirTerser$ContainedResources'
     */
    static newInstanceAsync(): Promise<FhirTerser$ContainedResources>;
    constructor();
}
declare const FhirTerser$ContainedResources_base: typeof FhirTerser$ContainedResourcesClass;
/**
 * Class ca.uhn.fhir.util.FhirTerser$ContainedResources.
 *
 * This actually imports the java class for further use.
 * The class {@link FhirTerser$ContainedResourcesClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class FhirTerser$ContainedResources extends FhirTerser$ContainedResources_base {
}
export default FhirTerser$ContainedResources;
//# sourceMappingURL=FhirTerser$ContainedResources.d.ts.map