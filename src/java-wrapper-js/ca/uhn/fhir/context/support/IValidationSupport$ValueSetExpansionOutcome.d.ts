import { JavaClass, BasicOrJavaType, JavaInterfaceProxy } from "java-bridge";
import { IBaseResource as org_hl7_fhir_instance_model_api_IBaseResource, IBaseResourceInterface as org_hl7_fhir_instance_model_api_IBaseResourceInterface } from "./../../../../../org/hl7/fhir/instance/model/api/IBaseResource";
import { Long as java_lang_Long } from "./../../../../../java/lang/Long";
import { Integer as java_lang_Integer } from "./../../../../../java/lang/Integer";
import { Class as java_lang_Class } from "./../../../../../java/lang/Class";
/**
 * This class just defines types, you should import {@link IValidationSupport$ValueSetExpansionOutcome} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class IValidationSupport$ValueSetExpansionOutcomeClass extends JavaClass {
    /**
     * @return original return type: 'java.lang.String'
     */
    getError(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getErrorSync(): string | null;
    /**
     * @return original return type: 'org.hl7.fhir.instance.model.api.IBaseResource'
     */
    getValueSet(): Promise<org_hl7_fhir_instance_model_api_IBaseResource | null>;
    /**
     * @return original return type: 'org.hl7.fhir.instance.model.api.IBaseResource'
     */
    getValueSetSync(): org_hl7_fhir_instance_model_api_IBaseResource | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'ca.uhn.fhir.context.support.IValidationSupport$ValueSetExpansionOutcome'
     */
    static newInstanceAsync(var0: string | null): Promise<IValidationSupport$ValueSetExpansionOutcome>;
    /**
     * @param var0 original type: 'org.hl7.fhir.instance.model.api.IBaseResource'
     * @return original return type: 'ca.uhn.fhir.context.support.IValidationSupport$ValueSetExpansionOutcome'
     */
    static newInstanceAsync(var0: org_hl7_fhir_instance_model_api_IBaseResource | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IBaseResourceInterface> | null): Promise<IValidationSupport$ValueSetExpansionOutcome>;
    /**
     * @param var0 original type: 'java.lang.String'
     */
    constructor(var0: string | null);
    /**
     * @param var0 original type: 'org.hl7.fhir.instance.model.api.IBaseResource'
     */
    constructor(var0: org_hl7_fhir_instance_model_api_IBaseResource | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IBaseResourceInterface> | null);
}
declare const IValidationSupport$ValueSetExpansionOutcome_base: typeof IValidationSupport$ValueSetExpansionOutcomeClass;
/**
 * Class ca.uhn.fhir.context.support.IValidationSupport$ValueSetExpansionOutcome.
 *
 * This actually imports the java class for further use.
 * The class {@link IValidationSupport$ValueSetExpansionOutcomeClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class IValidationSupport$ValueSetExpansionOutcome extends IValidationSupport$ValueSetExpansionOutcome_base {
}
export default IValidationSupport$ValueSetExpansionOutcome;
//# sourceMappingURL=IValidationSupport$ValueSetExpansionOutcome.d.ts.map