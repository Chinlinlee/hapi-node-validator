import { JavaClass, BasicOrJavaType, JavaInterfaceProxy } from "java-bridge";
import { IIdType as org_hl7_fhir_instance_model_api_IIdType, IIdTypeInterface as org_hl7_fhir_instance_model_api_IIdTypeInterface } from "./../../../../../org/hl7/fhir/instance/model/api/IIdType";
import { List as java_util_List, ListInterface as java_util_ListInterface } from "./../../../../../java/util/List";
import { Long as java_lang_Long } from "./../../../../../java/lang/Long";
import { Integer as java_lang_Integer } from "./../../../../../java/lang/Integer";
import { Class as java_lang_Class } from "./../../../../../java/lang/Class";
import { Boolean as java_lang_Boolean } from "./../../../../../java/lang/Boolean";
/**
 * This class just defines types, you should import {@link IValidationSupport$TranslateCodeRequest} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class IValidationSupport$TranslateCodeRequestClass extends JavaClass {
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @return original return type: 'org.hl7.fhir.instance.model.api.IIdType'
     */
    getResourceId(): Promise<org_hl7_fhir_instance_model_api_IIdType | null>;
    /**
     * @return original return type: 'org.hl7.fhir.instance.model.api.IIdType'
     */
    getResourceIdSync(): org_hl7_fhir_instance_model_api_IIdType | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getConceptMapUrl(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getConceptMapUrlSync(): string | null;
    /**
     * @return original return type: 'boolean'
     */
    isReverse(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isReverseSync(): boolean;
    /**
     * @return original return type: 'java.util.List'
     */
    getCodings(): Promise<java_util_List | null>;
    /**
     * @return original return type: 'java.util.List'
     */
    getCodingsSync(): java_util_List | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getTargetSystemUrl(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getTargetSystemUrlSync(): string | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getConceptMapVersion(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getConceptMapVersionSync(): string | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getSourceValueSetUrl(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getSourceValueSetUrlSync(): string | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getTargetValueSetUrl(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getTargetValueSetUrlSync(): string | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'java.lang.String'
     */
    toString(): Promise<string>;
    /**
     * @return original return type: 'java.lang.String'
     */
    toStringSync(): string;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @param var0 original type: 'java.util.List'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'ca.uhn.fhir.context.support.IValidationSupport$TranslateCodeRequest'
     */
    static newInstanceAsync(var0: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null, var1: string | null): Promise<IValidationSupport$TranslateCodeRequest>;
    /**
     * @param var0 original type: 'java.util.List'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'java.lang.String'
     * @param var4 original type: 'java.lang.String'
     * @param var5 original type: 'java.lang.String'
     * @param var6 original type: 'org.hl7.fhir.instance.model.api.IIdType'
     * @param var7 original type: 'boolean'
     * @return original return type: 'ca.uhn.fhir.context.support.IValidationSupport$TranslateCodeRequest'
     */
    static newInstanceAsync(var0: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null, var1: string | null, var2: string | null, var3: string | null, var4: string | null, var5: string | null, var6: org_hl7_fhir_instance_model_api_IIdType | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IIdTypeInterface> | null, var7: java_lang_Boolean | boolean): Promise<IValidationSupport$TranslateCodeRequest>;
    /**
     * @param var0 original type: 'java.util.List'
     * @param var1 original type: 'java.lang.String'
     */
    constructor(var0: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null, var1: string | null);
    /**
     * @param var0 original type: 'java.util.List'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'java.lang.String'
     * @param var4 original type: 'java.lang.String'
     * @param var5 original type: 'java.lang.String'
     * @param var6 original type: 'org.hl7.fhir.instance.model.api.IIdType'
     * @param var7 original type: 'boolean'
     */
    constructor(var0: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null, var1: string | null, var2: string | null, var3: string | null, var4: string | null, var5: string | null, var6: org_hl7_fhir_instance_model_api_IIdType | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IIdTypeInterface> | null, var7: java_lang_Boolean | boolean);
}
declare const IValidationSupport$TranslateCodeRequest_base: typeof IValidationSupport$TranslateCodeRequestClass;
/**
 * Class ca.uhn.fhir.context.support.IValidationSupport$TranslateCodeRequest.
 *
 * This actually imports the java class for further use.
 * The class {@link IValidationSupport$TranslateCodeRequestClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class IValidationSupport$TranslateCodeRequest extends IValidationSupport$TranslateCodeRequest_base {
}
export default IValidationSupport$TranslateCodeRequest;
//# sourceMappingURL=IValidationSupport$TranslateCodeRequest.d.ts.map