import { JavaClass, InterfaceProxyOptions, JavaInterfaceProxy } from "java-bridge";
import { FhirContext as ca_uhn_fhir_context_FhirContext } from "./../context/FhirContext";
import { IBaseResource as org_hl7_fhir_instance_model_api_IBaseResource, IBaseResourceInterface as org_hl7_fhir_instance_model_api_IBaseResourceInterface } from "./../../../../org/hl7/fhir/instance/model/api/IBaseResource";
/**
 * This class just defines types, you should import {@link INarrativeGenerator} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class INarrativeGeneratorClass extends JavaClass {
    /**
     * @param var0 original type: 'ca.uhn.fhir.context.FhirContext'
     * @param var1 original type: 'org.hl7.fhir.instance.model.api.IBaseResource'
     * @return original return type: 'boolean'
     */
    populateResourceNarrative(var0: ca_uhn_fhir_context_FhirContext | null, var1: org_hl7_fhir_instance_model_api_IBaseResource | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IBaseResourceInterface> | null): Promise<boolean>;
    /**
     * @param var0 original type: 'ca.uhn.fhir.context.FhirContext'
     * @param var1 original type: 'org.hl7.fhir.instance.model.api.IBaseResource'
     * @return original return type: 'boolean'
     */
    populateResourceNarrativeSync(var0: ca_uhn_fhir_context_FhirContext | null, var1: org_hl7_fhir_instance_model_api_IBaseResource | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IBaseResourceInterface> | null): boolean;
    /**
     * @param var0 original type: 'ca.uhn.fhir.context.FhirContext'
     * @param var1 original type: 'org.hl7.fhir.instance.model.api.IBaseResource'
     * @return original return type: 'java.lang.String'
     */
    generateResourceNarrative(var0: ca_uhn_fhir_context_FhirContext | null, var1: org_hl7_fhir_instance_model_api_IBaseResource | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IBaseResourceInterface> | null): Promise<string | null>;
    /**
     * @param var0 original type: 'ca.uhn.fhir.context.FhirContext'
     * @param var1 original type: 'org.hl7.fhir.instance.model.api.IBaseResource'
     * @return original return type: 'java.lang.String'
     */
    generateResourceNarrativeSync(var0: ca_uhn_fhir_context_FhirContext | null, var1: org_hl7_fhir_instance_model_api_IBaseResource | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IBaseResourceInterface> | null): string | null;
}
/**
 * This interface just defines types for creating proxies,
 * you should use {@link createINarrativeGeneratorProxy} for actually creating the proxies.
 *
 * Optional methods in here may still be required by java.
 * This is caused by typescript not allowing to have both optional and
 * non-optional signatures for the same interface member.
 *
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export interface INarrativeGeneratorInterface {
    /**
     * @param var0 original type: 'ca.uhn.fhir.context.FhirContext'
     * @param var1 original type: 'org.hl7.fhir.instance.model.api.IBaseResource'
     * @return original return type: 'boolean'
     */
    populateResourceNarrative(var0: ca_uhn_fhir_context_FhirContext | null, var1: org_hl7_fhir_instance_model_api_IBaseResource | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IBaseResourceInterface> | null): boolean;
    /**
     * @param var0 original type: 'ca.uhn.fhir.context.FhirContext'
     * @param var1 original type: 'org.hl7.fhir.instance.model.api.IBaseResource'
     * @return original return type: 'java.lang.String'
     */
    generateResourceNarrative(var0: ca_uhn_fhir_context_FhirContext | null, var1: org_hl7_fhir_instance_model_api_IBaseResource | JavaInterfaceProxy<org_hl7_fhir_instance_model_api_IBaseResourceInterface> | null): string | null;
}
/**
 * Create a proxy for the {@link INarrativeGenerator} interface.
 * All required methods in {@link INarrativeGeneratorInterface} must be implemented.
 *
 * @param methods the methods to implement
 * @param opts the proxy options
 * @return the proxy
 */
export declare function createINarrativeGeneratorProxy(methods: INarrativeGeneratorInterface, opts?: InterfaceProxyOptions): JavaInterfaceProxy<INarrativeGeneratorInterface>;
declare const INarrativeGenerator_base: typeof INarrativeGeneratorClass;
/**
 * Class ca.uhn.fhir.narrative.INarrativeGenerator.
 *
 * This actually imports the java class for further use.
 * The class {@link INarrativeGeneratorClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class INarrativeGenerator extends INarrativeGenerator_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default INarrativeGenerator;
//# sourceMappingURL=INarrativeGenerator.d.ts.map