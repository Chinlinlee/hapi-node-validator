import { JavaClass, InterfaceProxyOptions, JavaInterfaceProxy } from "java-bridge";
/**
 * This class just defines types, you should import {@link IParserErrorHandler$IParseLocation} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class IParserErrorHandler$IParseLocationClass extends JavaClass {
    /**
     * @return original return type: 'java.lang.String'
     */
    getParentElementName(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getParentElementNameSync(): string | null;
}
/**
 * This interface just defines types for creating proxies,
 * you should use {@link createIParserErrorHandler$IParseLocationProxy} for actually creating the proxies.
 *
 * Optional methods in here may still be required by java.
 * This is caused by typescript not allowing to have both optional and
 * non-optional signatures for the same interface member.
 *
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export interface IParserErrorHandler$IParseLocationInterface {
    /**
     * @return original return type: 'java.lang.String'
     */
    getParentElementName(): string | null;
}
/**
 * Create a proxy for the {@link IParserErrorHandler$IParseLocation} interface.
 * All required methods in {@link IParserErrorHandler$IParseLocationInterface} must be implemented.
 *
 * @param methods the methods to implement
 * @param opts the proxy options
 * @return the proxy
 */
export declare function createIParserErrorHandler$IParseLocationProxy(methods: IParserErrorHandler$IParseLocationInterface, opts?: InterfaceProxyOptions): JavaInterfaceProxy<IParserErrorHandler$IParseLocationInterface>;
declare const IParserErrorHandler$IParseLocation_base: typeof IParserErrorHandler$IParseLocationClass;
/**
 * Class ca.uhn.fhir.parser.IParserErrorHandler$IParseLocation.
 *
 * This actually imports the java class for further use.
 * The class {@link IParserErrorHandler$IParseLocationClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class IParserErrorHandler$IParseLocation extends IParserErrorHandler$IParseLocation_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default IParserErrorHandler$IParseLocation;
//# sourceMappingURL=IParserErrorHandler$IParseLocation.d.ts.map